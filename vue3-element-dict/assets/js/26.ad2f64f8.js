(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{547:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"el-tree-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#el-tree-new"}},[t._v("#")]),t._v(" el-tree-new")]),t._v(" "),s("h2",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[t._v("组件引入部分 略")]),t._v(" "),s("p",[t._v("页面上使用（"),s("strong",[t._v("需要设置node-key属性")]),t._v("）")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-tree-new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("show-checkbox")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("node-key")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("menuId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":settings")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("defaultProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("default-expand-all")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tree-warp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":data")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("menuList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("el-tree-new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("menuList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultProps")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"children"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("label")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("接受el-tree所有参数及事件")])]),t._v(" "),s("h2",{attrs:{id:"调用el-tree的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用el-tree的方法"}},[t._v("#")]),t._v(" 调用el-tree的方法")]),t._v(" "),s("p",[t._v("调用el-tree的方法使用规则如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.$refs.tree.getTree().setCheckedKeys([])\n")])])]),s("p",[t._v("先使用 getTree() 方法 获取 el-tree的实例，然后再调用el-tree拥有的方法")]),t._v(" "),s("wap-feed-baidu-ad"),t._v(" "),s("h2",{attrs:{id:"新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增方法"}},[t._v("#")]),t._v(" 新增方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("使用方式")]),t._v(" "),s("th",[t._v("作用说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("expandAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.expandAll()")]),t._v(" "),s("td",[t._v("展开所有选项")])]),t._v(" "),s("tr",[s("td",[t._v("foldAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.foldAll()")]),t._v(" "),s("td",[t._v("折叠所有选项")])]),t._v(" "),s("tr",[s("td",[t._v("expandAllFirstLevel")]),t._v(" "),s("td",[t._v("this.$refs.tree.expandAllFirstLevel()")]),t._v(" "),s("td",[t._v("展开所有一级树")])]),t._v(" "),s("tr",[s("td",[t._v("foldAllFirstLevel")]),t._v(" "),s("td",[t._v("this.$refs.tree.foldAllFirstLevel()")]),t._v(" "),s("td",[t._v("折叠所有一级树")])]),t._v(" "),s("tr",[s("td",[t._v("judgeExpandAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeExpandAll()")]),t._v(" "),s("td",[t._v("判断是否展开全部 是的话 返回 true，否则返回false")])]),t._v(" "),s("tr",[s("td",[t._v("judgeFoldAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeFoldAll()")]),t._v(" "),s("td",[t._v("判断是否折叠全部 是的话 返回 true，否则返回false")])]),t._v(" "),s("tr",[s("td",[t._v("judgeExpandAllFirstLevel")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeExpandAllFirstLevel()")]),t._v(" "),s("td",[t._v("判断是否展开全部一级树 是的话 返回 true，否则返回false")])]),t._v(" "),s("tr",[s("td",[t._v("judgeFoldAllFirstLevel")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeFoldAllFirstLevel()")]),t._v(" "),s("td",[t._v("判断是否折叠全部一级树 是的话 返回 true，否则返回false")])]),t._v(" "),s("tr",[s("td",[t._v("selectAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.selectAll()")]),t._v(" "),s("td",[t._v("复选框模式下全选")])]),t._v(" "),s("tr",[s("td",[t._v("unSelectAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.unSelectAll()")]),t._v(" "),s("td",[t._v("复选框模式下全不选")])]),t._v(" "),s("tr",[s("td",[t._v("toggleSelectAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.toggleSelectAll()")]),t._v(" "),s("td",[t._v("复选框模式下反选")])]),t._v(" "),s("tr",[s("td",[t._v("judgeSelectAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeSelectAll()")]),t._v(" "),s("td",[t._v("判断是否全选 是的话 返回 true，否则返回false")])]),t._v(" "),s("tr",[s("td",[t._v("judgeUnSelectAll")]),t._v(" "),s("td",[t._v("this.$refs.tree.judgeUnSelectAll()")]),t._v(" "),s("td",[t._v("判断是否全不选 是的话 返回 true，否则返回false")])])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" judgeExpandAll，judgeFoldAll，judgeExpandAllFirstLevel，judgeFoldAllFirstLevel，judgeSelectAll，judgeUnSelectAll")]),t._v(" "),s("p",[t._v("这四个方法 一般配合 expandChange 事件使用，需再添加定时器 ，否则有bug，如")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-tree-new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("show-checkbox")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("node-key")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@expandChange")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expandChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@check-change")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("checkChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\texpandChange(){\n      setTimeout(() => {\n        if (this.isExpand) {\n          const isFoldAllFirstLevel = this.$refs.tree.judgeFoldAllFirstLevel() //是否折叠所有一级树\n          if (isFoldAllFirstLevel) {\n            this.isExpand = false\n          }\n        } else {\n          const isExpandAllFirstLevel = this.$refs.tree.judgeExpandAllFirstLevel() //是否展开所有一级树\n          if (isExpandAllFirstLevel) {\n            this.isExpand = true\n          }\n        }\n      }, 100)\n    },\n")])])]),s("h2",{attrs:{id:"新增属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增属性"}},[t._v("#")]),t._v(" 新增属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("默认值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("data")]),t._v(" "),s("td",[t._v("树的数据")]),t._v(" "),s("td",[t._v("Array")]),t._v(" "),s("td",[t._v("树数据的示例，太长在这不写")])]),t._v(" "),s("tr",[s("td",[t._v("settings")]),t._v(" "),s("td",[t._v("设置")]),t._v(" "),s("td",[t._v("Object")]),t._v(" "),s("td",[t._v('{level: "level",children: "children",label: "label"}')])]),t._v(" "),s("tr",[s("td",[t._v("maxLevel")]),t._v(" "),s("td",[t._v('限制最大层级 “1” 表示 最大层级为2层 “2” 表示 最大层级为 3层 ... 默认值为""，不限制层级')]),t._v(" "),s("td",[t._v("String")]),t._v(" "),s("td",[t._v('""')])])])]),t._v(" "),s("h2",{attrs:{id:"新增事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增事件"}},[t._v("#")]),t._v(" 新增事件")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("事件名称")]),t._v(" "),s("th",[t._v("事件说明")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("expandChange")]),t._v(" "),s("td",[t._v("折叠或展开时触发，无返回值")]),t._v(" "),s("td",[s("strong",[t._v("折叠状态改变 可能比 上面的 判断方法执行的慢，导致判断不准确，因此需要再上述判断方法添加 延时")])])])])])],1)}),[],!1,null,null,null);a.default=n.exports}}]);