<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo博客搭建]]></title>
    <url>%2F2019%2F03%2F05%2Fhexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[hexo博客搭建 安装Git 安装Node.js 安装Hexo Hexo博客初始化 Hexo博客部署到GitHub 备份博客源文件 拓展 更换hexo主题 修改站点语言 开启搜索，字数统计和阅读时长统计 添加分类和标签 更换页面菜单布局位置 配置文章浏览量 插入本地图片 设置动态背景 添加Fork me on GitHub 添加友情链接 设置阅读全文 1.安装GitGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。Git教程 windows：到git官网上下载,Download git,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。 linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码 sudo apt-get install git 安装好后，用git --version 来查看一下版本 123xiaobu@DESKTOP-P7959T8 MINGW64 /f/blog/myblog$ git --versiongit version 2.21.0.windows.1 2.安装NodejsHexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。点击下载nodejs windows：nodejs选择LTS版本就行了。 linux： 12sudo apt-get install nodejssudo apt-get install npm 安装完后，打开命令行 node -vnpm -v 检查一下有没有安装成功 1234567xiaobu@DESKTOP-P7959T8 MINGW64 /f/blog/myblog$ node -vv8.11.4xiaobu@DESKTOP-P7959T8 MINGW64 /f/blog/myblog$ npm -v5.6.0 3.安装hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。 输入命令 npm install -g hexo-cli 依旧用hexo -v查看一下版本 12345678910111213141516171819xiaobu@DESKTOP-P7959T8 MINGW64 /f/blog/myblog$ hexo -vhexo: 3.8.0hexo-cli: 1.1.0os: Windows_NT 10.0.10240 win32 x64http_parser: 2.8.0node: 8.11.4v8: 6.2.414.54uv: 1.19.1zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.32.0napi: 3openssl: 1.0.2picu: 60.1unicode: 10.0cldr: 32.0tz: 2017c 至此就全部安装完了。 接下来初始化一下hexo hexo init myblog 这个myblog可以自己取什么名字都行，然后 12cd myblog //进入这个myblog文件夹npm install 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 12hexo ghexo server 打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。 大概长这样： 使用ctrl+c可以把服务关掉。 4.GitHub创建个人仓库首先，你先要有一个GitHub账户，去注册一个吧。 注册完登录后，在GitHub.com中看到一个New repository，新建仓库 创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。 点击create repository。 5生成SSH添加到GitHub回到你的git bash中， 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。 可以用以下两条，检查一下你有没有输对 12git config user.namegit config user.email 然后创建SSH,一路回车 1ssh-keygen -t rsa -C &quot;youremail&quot; 这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。 ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把你的id_rsa.pub里面的信息复制进去。 6.将hexo部署到GitHub这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户 1234deploy: type: git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 1npm install hexo-deployer-git --save 然后 123hexo cleanhexo generatehexo deploy 其中 hexo clean清除了你之前生成的东西，也可以不加。hexo generate顾名思义,生成静态文章，可以用 hexo g缩写hexo deploy 部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了！！ 12Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/shenxiaobu/shenxiaobu.github.io.git&apos;.INFO Deploy done: git 新建一个文章 1hexo new newpapername 然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再 123hexo cleanhexo ghexo d 就可以看到更新了。 7拓展​ 1）更换hexo主题 ​ 下载 ​ NexT主题 解压到 F:\blog\myblog\themes 修改F:\blog\myblog\_config.yml配置文件 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hexo-theme-next-master 2)修改站点语言 编辑F:\blog\myblog\_config.yml文件 12345678# Sitetitle: 祥你的365夜subtitle:description: 如果有一腔热血，又足够努力，人生最坏的结果，也不过是大器晚成而已！keywords:author: shenxiaobulanguage: zh-CNtimezone: 3）开启搜索、字数统计和阅读时长统计 安装依赖hexo-symbols-count-time、hexo-generator-searchdb，安装依赖不成功时先删除D:\mytest\myhexo\node_modules文件夹，重新安装依赖 123npm install hexo-symbols-count-time --savenpm install hexo-generator-searchdb --save 配置主题样式文件 进入F:\blog\myblog\themes\hexo-theme-next-master\文件夹，编辑_config.yml文件 123456789101112# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: true# Dependencies: https://github.com/theme-next/hexo-symbols-count-timesymbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275 配置站点文件 编辑F:\blog\myblog\_config.yml文件 12345678910111213#阅读时长和本文字数symbols_count_time: symbols: true time: true total_symbols: true total_time: true#搜索功能search: path: search.xml field: post format: html limit: 10000 4）添加分类和标签 123$ hexo new page categories$ hexo new page tags 编辑F:\blog\myblog\source\categories\index.md 123456---title: categoriesdate: 2019-01-22 16:37:58type: &quot;categories&quot; #这部分是新添加的--- 编辑F:\blog\myblog\source\tags\index.md 123456---title: tagsdate: 2019-01-22 16:38:40type: &quot;tags&quot; #新添加的内容--- 修改菜单，添加categories和tags到主题的.config配置文件menu中 123456789menu: home: / || home #about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 新增文章的时候，需要添加categories、tags 如 1234567891011---title: hexo博客搭建date: 2019-01-23 09:07:30categories: 日常记录tags: - hexo - git - github - node - markdown--- 5)更换NexT主题布局方式 进去主题里面的配置文件更改 12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini 6）配置文章浏览量 注册 https://leancloud.cn/ 创建应用 创建Class 配置web安全域名 获取app_id、app_key 编辑D:\blog\myblog\themes\hexo-theme-next-master\_config.yml配置文件，填app_id app_key;security设置为false 1234567891011# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: true app_id: BedsOkBLOBR4nM4W52xTcBhb-gzGzoHsz #&lt;app_id&gt; app_key: EEaRfb6dCMaS38laDCkSYhM9 #&lt;app_key&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security # If you don&apos;t care about security in leancloud counter and just want to use it directly # (without hexo-leancloud-counter-security plugin), set `security` to `false`. security: false betterPerformance: false 7）插入本地图片 安装依赖 1npm install hexo-asset-image --save 编辑D:\blog\myblog\_config.yml配置文件 1post_asset_folder: true 命令hexo new post test来生成博文时，/source/_post文件夹中除了test.md外，还有一个同名test文件夹 8)设置动态背景 进入D:\blog\myblog\themes\hexo-theme-next-master\layout\文件夹，编辑_layout.swig文件，在&lt;/body&gt;之前添加 1&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 9)添加Fork me on GitHub 进入D:\blog\myblog\themes\hexo-theme-next-master\layout\文件夹，编辑_layout.swig文件，在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面添加选择的图标样式代码 1&lt;a href=&quot;https://github.com/shenxiaobu/&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt; 10）添加友情链接 方式一进入D:\blog\myblog\themes\hexo-theme-next-master\layout\_partials文件夹，在footer.swig文件末尾追加 123456&lt;div&gt;友情链接： &lt;a class=&quot;theme-link&quot; href=&quot;http://collect.w3ctrain.com/&quot;&gt; 前端收藏夹 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a class=&quot;theme-link&quot; href=&quot;http://www.alloyteam.com/nav/&quot;&gt; Web前端导航 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a class=&quot;theme-link&quot; href=&quot;http://www.runoob.com/&quot;&gt; 菜鸟教程 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a class=&quot;theme-link&quot; href=&quot;https://mccxj.github.io/&quot;&gt; 小毛的胡思乱想 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt; 方式二进入D:\blog\myblog\themes\hexo-theme-next-master文件夹，编辑_config.yml文件 1234567891011# Blog rollslinks_icon: linklinks_title: Linkslinks_layout: block#links_layout: inline#links: #Title: http://example.comlinks: 美团技术团队: https://tech.meituan.com/ 百度FEX: http://fex.baidu.com/ 淘宝FED: http://taobaofed.org/ 11）设置阅读全文 进入D:\blog\myblog\themes\hexo-theme-next-master文件夹，编辑_config.yml文件 12345# Automatically Excerpt. Not recommend.# Use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: true length: 150 参考： hexo史上最全搭建教程 [持续更新]Hexo博客主题安装及Next主题个性化修改 小兵兵的hexo搭建]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语法]]></title>
    <url>%2F2019%2F03%2F04%2Fmarkdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Markdown语法介绍Markdown是一种纯文本格式的语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。 相比WYSIWYG编辑器 优点 1 . 因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。 2.操作简单。比如：WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题前加#即可。 缺点 需要记住一些语法（当然，是很简单。五分钟学会）。 有些平台不支持Markdown编辑模式。简书支持Markdown格式。 一 标题在想要设置为标题的文字前面加#来表示一个#是一级标题，两个#二级标题，以此类推。支持六级标题。 注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。示例：1234567891011# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 显示效果如下 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题 二 字体·加粗 要加粗的文字左右分别用两个*号包起来 ·斜体 要倾斜的文字左右分别用一个*号包起来 ·斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来 ·删除线 要加删除线的文字左右分别用两个~号包起来.文字底纹要加底纹的文字左右分别用两个 `号包起来 示例： 12345**这是要加粗的文字***这是要倾斜的文字****这是要倾斜和加粗的文字***~~这是要删除线的文字~~`文字内容` 这是要加粗的文字这是要倾斜的文字这是要倾斜和加粗的文字这是要删除线的文字文字内容 三 引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt; n个··· 貌似可以一直加下去，但没什么用 示例： 123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;这是引用的内容 效果如下： 这是引用的内容 这是引用的内容 这是引用的内容 可以无穷下去 四 分割线三个或者三个以上的 - 或者 *都可以。 示例： 1234-------******** 效果如下： 可以看到效果都一样的，不过*得三个或五个 五 图片语法 123![图片alt]（图片地址&apos;&apos;图片title&apos;&apos;）图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移动到图片上时显示的内容。title可加可不加 示例： 1![blockchain](https://shenxiaobu.github.io/images/xiaobu.png &quot;小布&quot;) 效果如下： 上传本地图片直接点击导航栏的图片标志，选择图片即可 六 超链接语法： 12[超链接名](超链接地址&quot;超链接title&quot;)title可加可不加 示例： 12[简书](http://jianshu.com &quot;简书&quot;)[度娘](http://baidu.com) 简书度娘 注释：markdown本身语法不支持在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面打开的话，可以用html语言的a标签代替。 123&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;示例&lt;a href=&quot;https://shenxiaobu.github.io/&quot; target=&quot;_blank&quot;&gt;小布的博客&lt;/a&gt; 七 列表·无序列表语法： 无序列表用-+*任何一种都可以 12345- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间要有一个空格 效果如下： 列表内容 列表内容 列表内容 ·有序列表语法： 数字加点 123451. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格 列表内容 列表内容 列表内容 ·列表嵌套上一级和下一级之间敲三个空格即可示例： 12345678910111213141516- 一级无序列表 - 二级无序列表 - 二级无序列表 - 二级无序列表- 一级无序列表 - 二级无序列表 - 二级无序列表 - 二级无序列表1. 一级有序列表 1. 二级有序列表 2. 二级有序列表 3. 二级有序列表2. 一级有序列表 1. 二级有序列表 2. 二级有序列表 3. 二级有序列表 效果如下： 一级无序列表 二级无序列表 二级无序列表 二级无序列表 一级无序列表 二级无序列表 二级无序列表 二级无序列表 一级有序列表 二级有序列表 二级有序列表 二级有序列表 一级有序列表 二级有序列表 二级有序列表 二级有序列表 八 表格语法： 123456789|表头|表头|表头||---|:--:|---:||内容|内容|内容|第二行分割表头和内容。-有一个就行了，为了对齐，多加了几个文字默认居左- 两边加:表示文字居中- 右边加: 表示文字居右 示例： 12345|姓名|技能|排行||---|:--:|--:||刘备|哭|大哥||关羽|打|二哥||张飞|骂|三弟| 姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 九 代码语法： 单行代码： 代码之间分别用一个反引号包起来 1`代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 12345(```) 代码··· 代码··· 代码···(```) 1注意：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边的小括号即可。 示例： ​ 单行代码 1`create database hero;` ​ 代码块 123456(```) function xiaobu()&#123; echo "这是一个很寂寞的天下着有些伤心的雨" &#125; xiaobu();(```) 效果如下： ​ 单行代码 create database hero; ​ 代码块 1234function xiaobu()&#123; echo "这是一片很寂寞的天下着有些伤心的雨"&#125;xiaobu(); 十 流程图示例： 123456789​```flowst=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op&amp; 123456789101112效果如下：```flowst=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op&amp; `]]></content>
      <categories>
        <category>编辑器使用</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue]]></title>
    <url>%2F2019%2F03%2F04%2Fvue%2F</url>
    <content type="text"><![CDATA[vue笔记]]></content>
      <categories>
        <category>前端纪录</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[詹密]]></title>
    <url>%2F2019%2F03%2F04%2F%E8%A9%B9%E5%AF%86%2F</url>
    <content type="text"><![CDATA[###勒布朗詹姆斯]]></content>
      <categories>
        <category>浅谈NBA</category>
      </categories>
      <tags>
        <tag>NBA</tag>
        <tag>Basketball</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[篮球]]></title>
    <url>%2F2019%2F03%2F04%2F%E7%AF%AE%E7%90%83%2F</url>
    <content type="text"><![CDATA[###湖人总冠军]]></content>
      <categories>
        <category>浅谈NBA</category>
      </categories>
      <tags>
        <tag>NBA</tag>
        <tag>James</tag>
        <tag>Laker</tag>
      </tags>
  </entry>
</search>
