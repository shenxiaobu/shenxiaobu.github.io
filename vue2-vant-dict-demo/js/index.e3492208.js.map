{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/components/van-field-dict/src/index.vue?098e","webpack:///packages/components/van-field-dict/src/index.vue","webpack:///./packages/components/van-field-dict/src/index.vue?df02","webpack:///./packages/components/van-field-dict/src/index.vue","webpack:///./packages/components/van-field-dict/index.js","webpack:///./packages/store/index.js","webpack:///./packages/components/van-cascader-dict/src/index.vue?2660","webpack:///./examples/router/van-field-dict/index.js","webpack:///./packages/components/van-checkbox-dict/src/index.vue?43a7","webpack:///packages/components/van-checkbox-dict/src/index.vue","webpack:///./packages/components/van-checkbox-dict/src/index.vue?37df","webpack:///./packages/components/van-checkbox-dict/src/index.vue","webpack:///./packages/components/van-checkbox-dict/index.js","webpack:///./examples/router/functions/index.js","webpack:///./packages/components/van-field-dict/src/index.vue?2f43","webpack:///./packages/functions/tree-dict.js","webpack:///./packages/filters/tree-dict.js","webpack:///./packages/index.js","webpack:///./examples/styles/index.less","webpack:///./packages/functions/list-tree.js","webpack:///./packages/components/van-cascader-dict/src/index.vue?9450","webpack:///packages/components/van-cascader-dict/src/index.vue","webpack:///./packages/components/van-cascader-dict/src/index.vue?57be","webpack:///./packages/components/van-cascader-dict/src/index.vue","webpack:///./packages/components/van-cascader-dict/index.js","webpack:///./packages/components/van-button-dict/src/index.vue?df1d","webpack:///packages/components/van-button-dict/src/index.vue","webpack:///./packages/components/van-button-dict/src/index.vue?f655","webpack:///./packages/components/van-button-dict/src/index.vue","webpack:///./packages/components/van-button-dict/index.js","webpack:///./packages/components/van-dropdown-item-dict/src/index.vue?0557","webpack:///packages/components/van-dropdown-item-dict/src/index.vue","webpack:///./packages/components/van-dropdown-item-dict/src/index.vue?13be","webpack:///./packages/components/van-dropdown-item-dict/src/index.vue","webpack:///./packages/components/van-dropdown-item-dict/index.js","webpack:///./packages/components/van-field-dict/src/index.vue?0fce","webpack:///./packages/components/van-datetime-dict/src/index.vue?52a7","webpack:///./packages/functions/dict.js","webpack:///./packages/components/van-tabs-dict/src/index.vue?399d","webpack:///packages/components/van-tabs-dict/src/index.vue","webpack:///./packages/components/van-tabs-dict/src/index.vue?5eea","webpack:///./packages/components/van-tabs-dict/src/index.vue","webpack:///./packages/components/van-tabs-dict/index.js","webpack:///./examples/router/filters/index.js","webpack:///./examples/router/van-calendar-dict/index.js","webpack:///./examples/styles/index.less?0ef2","webpack:///./packages/components/van-field-dict/src/index.vue?bb72","webpack:///./packages/components/van-cascader-dict/src/index.vue?1a2d","webpack:///./packages/components/van-datetime-dict/src/index.vue?05f5","webpack:///./examples/router sync index\\.js$","webpack:///./packages/filters/dict.js","webpack:///./packages/components/van-select-dict/src/index.vue?ff63","webpack:///packages/components/van-select-dict/src/index.vue","webpack:///./packages/components/van-select-dict/src/index.vue?b596","webpack:///./packages/components/van-select-dict/src/index.vue","webpack:///./packages/components/van-select-dict/index.js","webpack:///./packages/components/van-datetime-dict/src/index.vue?ef06","webpack:///packages/components/van-datetime-dict/src/index.vue","webpack:///./packages/components/van-datetime-dict/src/index.vue?608f","webpack:///./packages/components/van-datetime-dict/src/index.vue","webpack:///./packages/components/van-datetime-dict/index.js","webpack:///./packages/components/van-tree-select-dict/src/index.vue?f5b8","webpack:///packages/components/van-tree-select-dict/src/index.vue","webpack:///./packages/components/van-tree-select-dict/src/index.vue?cd1f","webpack:///./packages/components/van-tree-select-dict/src/index.vue","webpack:///./packages/components/van-tree-select-dict/index.js","webpack:///./examples/router/van-radio-dict/index.js","webpack:///./examples/router/van-datetime-dict/index.js","webpack:///./packages/functions/date-format.js","webpack:///./examples/router/van-tree-select-dict/index.js","webpack:///./packages/components/van-datetime-dict/src/index.vue?28ae","webpack:///./packages/components/van-radio-dict/src/index.vue?b59e","webpack:///packages/components/van-radio-dict/src/index.vue","webpack:///./packages/components/van-radio-dict/src/index.vue?e5f9","webpack:///./packages/components/van-radio-dict/src/index.vue","webpack:///./packages/components/van-radio-dict/index.js","webpack:///./examples/router/van-tag-dict/index.js","webpack:///./packages/assets/css/index.css?3a26","webpack:///./examples/App.vue?d6f2","webpack:///examples/App.vue","webpack:///./examples/App.vue?5508","webpack:///./examples/App.vue","webpack:///./examples/router/before-each.js","webpack:///./examples/router/after-each.js","webpack:///./examples/api/module/common-api.js","webpack:///./examples/assets/data/dict.js","webpack:///./examples/dict-config.js","webpack:///./examples/main.js","webpack:///./examples/router/index.js","webpack:///./packages/components sync \\.js$","webpack:///./packages/components/index.js","webpack:///./packages/components/van-cascader-dict/src/index.vue?d412","webpack:///./examples/router/common/index.js","webpack:///./packages/components/van-calendar-dict/src/index.vue?45c5","webpack:///packages/components/van-calendar-dict/src/index.vue","webpack:///./packages/components/van-calendar-dict/src/index.vue?4732","webpack:///./packages/components/van-calendar-dict/src/index.vue","webpack:///./packages/components/van-calendar-dict/index.js","webpack:///./examples/router/van-dropdown-item-dict/index.js","webpack:///./packages/assets/css/index.css","webpack:///./packages/utils/index.js","webpack:///./packages/functions/mask.js","webpack:///./examples/router/van-button-dict/index.js","webpack:///./packages/components/van-tag-dict/src/index.vue?cd75","webpack:///packages/components/van-tag-dict/src/index.vue","webpack:///./packages/components/van-tag-dict/src/index.vue?a9bc","webpack:///./packages/components/van-tag-dict/src/index.vue","webpack:///./packages/components/van-tag-dict/index.js","webpack:///./examples/router/van-select-dict/index.js","webpack:///./examples/router/van-cascader-dict/index.js","webpack:///./examples/router/van-checkbox-dict/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","staticClass","_g","_b","ref","on","handleFocus","handleBlur","$attrs","$listeners","directives","rawName","expression","attrs","model","callback","$$v","sValue","_e","staticRenderFns","props","defaultVal","String","default","maskType","validate","includes","maskStart","Number","maskEnd","maskMiddle","maskSymbol","showCamouflage","computed","desensitization","maskOptions","obj","start","end","middle","symbol","created","methods","getRef","$refs","VanFieldDict","readonly","Desensitization","component","vanFieldDict","install","Vue","state","observable","dictConfig","dictCodes","isGettingDictTypes","isGettingAllDictTypes","unfindDictTypes","mutations","SET_DICT_SETTING","setting","SET_DICT_CODES","dictData","ADD_IS_EGTTING_DICT_TYPES","typesStr","dictArr","split","isGettingArr","targetArr","Set","Array","from","REMOVE_IS_EGTTING_DICT_TYPES","filter","item","has","SETTING_ISGETTING_ALL_DICT_TYPES","status","ADD_UNFIND_DICT_TYPES","REMOVE_UNFIND_DICT_TYPES","actions","getDictDataObj","dictType","storage","dictDataKey","getDictCodeApi","usuallyGetFileds","formatterRequest","query","verssionKey","localDictCodes","formatterDictList","formatterDictVersion","isGetAll","filterDataFun","disabledDataFun","dictCodeList","then","verssion","currentVerssion","getItem","requestField","storageTypeArr","keys","usuallyGetTypeArr","arr","concat","resultArr","join","allDictData","dictObjs","assign","JSON","parse","stringify","resultDictData","formatDictData","setItem","typeDictList","resultTypeList","store","content","locals","add","path","meta","title","svalue","handdleChange","_l","index","shape","labelDisabled","labelPosition","iconSize","checkedColor","bindGroup","disabled","format","handleCheckboxChange","handleCheckboxClick","_v","_s","label","list","Boolean","keyValue","disableObj","Function","watch","val","getDictionary_option","oldVal","$emit","mounted","filters","filterType","reverse","filtersArr","disableValue","disableType","disableList","map","targetItem","itemArr","VanCheckboxGroup","vanCheckboxDict","GetTreeLabelByCode","options","defaultOptions","formatFun","treeSetting","labelField","resultSetting","dictList","find","idField","GetTreeItemByCode","timer","setInterval","clearInterval","GetTreeLabelByCodesDothings","values","formatFunIn","findItem","GetTreeLabelByCodes","vals","formatFunOut","spacer","isArray","GetTreeCodeByLabel","GetTreeItemByLabel","GetTreeCodeByLabelsDothings","GetTreeCodeByLabels","GetTreeLabelByCodeFilter","GetTreeLabelByCodesFilter","GetTreeCodeByLabelFilter","GetTreeCodeByLabelsFilter","getLabelByCode","GetLabelByCode","getLabelByCodes","GetLabelByCodes","getCodeByLabel","GetCodeByLabel","getCodeByLabels","GetCodeByLabels","getDictObjByDictTypes","GetDictObjByDictTypes","GetLabelByCodeFilter","GetLabelByCodesFilter","GetCodeByLabelFilter","GetCodeByLabelsFilter","Mask","MaskAddress","MaskIdCard","MaskName","MaskPhone","formatDate","FormatDate","listToTree","IsDate","ListToTree","getTreeLabelByCode","getTreeCodeByLabel","getTreeLabelByCodes","getTreeCodeByLabels","func","async","getDIctCodeReq","needGetArr","getDictEveryTime","version","formatterDictversion","versionKey","vue2ElementDict","config","dir","defaultConfig","parentIdField","childrenField","firstId","labelArrField","idArrField","levelField","level","leafField","localStorage","currentversion","removeItem","components","___CSS_LOADER_API_IMPORT___","parentObj","temp","tree","id","GetTreePathByValue","targetValue","targetField","reduce","total","unshift","showValue","handleClick","scopedSlots","_u","slot","fn","scope","_t","showPicker","cascaderPlaceholder","handleClose","handleFinish","handleCancel","cancelButtonText","$event","handleConfirm","selectValue","confirmButtonText","proxy","selectedOptions","tabIndex","tips","minSelectLevel","maxLevel","treeData","defaultValue","finish","endTreeSetting","_this$$attrs$fieldNam","_props$value","_props$text","_props$children","fieldNames","newProps","text","children","allAllTreeData","treeArr","filterLevel","_this$$attrs$fieldNam2","_props$value2","_props$label","_props$children2","setShowValue","option","currentLevel","msg","$toast","VantCascaderDict","vanCascaderDict","judgeType","required","judgeTypeFun","VanButtonDict","vanButtonDict","icon","VanDropdownItemDict","vanDropdownItemDict","GetLabelByCodesDothings","GetCodeByLabelsDothings","dictTypes","typeStr","haveDictObj","copyObj","allDictObj","resolveDict","noDictTypeArr","VanTagDict","vanTabsDict","webpackContext","req","webpackContextResolve","code","onConfirm","defaultIndex","selectItem","indexOf","$nextTick","selectPicker","setColumnIndex","handler","immediate","dictObj","vanSelectDict","handleChange","stopPropagation","forever","arguments","showValueLabel","currentDate","indexs","forverValue","showForver","dateFormat","datetimePicker","getPicker","setIndexes","getIndexes","date","Date","getFullYear","replace","formatValue","dateObj","vanDatetimeDict","currentMainActiveIndex","currentActiveId","items","mainActiveIndex","activeId","treeList","newTreeSetting","VantTreeSelectDict","vanTreeSelectDict","DEFAULT_FORMATS","month","datetime","time","year","str","isNaN","getTime","newFormat","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","RegExp","$1","substr","k","reg","vanRadioDict","beforeEachHandler","to","next","setTitle","querySelector","innerText","afterEachHandler","log","codeData","typeList","timestamp","getGlobalConfigApi","gender","axiosSetting","axios","productionTip","routerPush","Router","location","catch","router","beforeEach","afterEach","use","Vant","vue2VantDict","h","App","$mount","routes","routerContext","require","forEach","route","startsWith","routerModule","createRouter","scrollBehavior","y","linkActiveClass","componentList","fileName","file","redirect","select","open","close","opened","closed","unselect","monthShow","overRange","clickSubtitle","formateShowValue","dates","dateSpacer","dateArr","VantCalendarDict","vanCalendarDict","paramsOptions","len","charAt","sym","repeat","max","substring","idcard","phone","address","parts","trim","res","maskTypeObj","mobile","idCard","vanTagDict"],"mappings":"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S,IACT,MAAS,KACT,GAAM,IACN,SAAY,KAEd,CACE,MAAS,IACT,MAAS,KACT,GAAM,IACN,SAAY,KAEd,CACE,MAAS,IACT,MAAS,MACT,GAAM,IACN,SAAY,KAEd,CACE,MAAS,IACT,MAAS,KACT,GAAM,IACN,SAAY,KAEd,CACE,MAAS,IACT,MAAS,KACT,GAAM,IACN,SAAY,KAEd,CACE,MAAS,KACT,MAAS,MACT,GAAM,IACN,SAAY,MAGhB,OAAU,CACR,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,IACT,MAAS,OAEX,CACE,MAAS,IACT,MAAS,OAEX,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,IACT,MAAS,OAEX,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,IACT,MAAS,MAEX,CACE,MAAS,KACT,MAAS,OAGb,OAAU,CAAC,CACT,MAAS,IACT,MAAS,KACR,CACD,MAAS,IACT,MAAS,KACR,CACD,MAAS,IACT,MAAS,UAEX,gBAAmB,CAAC,CAClB,MAAS,IACT,MAAS,SACR,CACD,MAAS,IACT,MAAS,SACR,CACD,MAAS,IACT,MAAS,SACR,CACD,MAAS,IACT,MAAS,SACR,CACD,MAAS,IACT,MAAS,UAEX,OAAU,CAAC,CACT,MAAS,KACT,MAAS,cACR,CACD,MAAS,KACT,MAAS,cACR,CACD,MAAS,KACT,MAAS,eACR,CACD,MAAS,KACT,MAAS,sBACR,CACD,MAAS,KACT,MAAS,sBACR,CACD,MAAS,KACT,MAAS,eACR,CACD,MAAS,KACT,MAAS,YACR,CACD,MAAS,KACT,MAAS,SACR,CACD,MAAS,KACT,MAAS,QACR,CACD,MAAS,KACT,MAAS,SACR,CACD,MAAS,KACT,MAAS,UACR,CACD,MAAS,KACT,MAAS,SACR,CACD,MAAS,KACT,MAAS,YACR,CACD,MAAS,KACT,MAAS,YACR,CACD,MAAS,KACT,MAAS,eACR,CACD,MAAS,KACT,MAAS,YACR,CACD,MAAS,KACT,MAAS,SACR,CACD,MAAS,KACT,MA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","file":"js/index.e3492208.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"commonModule\":\"commonModule\",\"filtersModule\":\"filtersModule\",\"functionsModule\":\"functionsModule\",\"vanButtonDictModule\":\"vanButtonDictModule\",\"vanCalendarDictModule\":\"vanCalendarDictModule\",\"vanDatetimeDictModule\":\"vanDatetimeDictModule\",\"vanDropdownItemModule\":\"vanDropdownItemModule\",\"vanFieldModule\":\"vanFieldModule\",\"vanRadioDictModule\":\"vanRadioDictModule\",\"vanSelectDictModule\":\"vanSelectDictModule\",\"vanTagDictModule\":\"vanTagDictModule\",\"vanTreeSelectDictModule\":\"vanTreeSelectDictModule\"}[chunkId]||chunkId) + \".\" + {\"commonModule\":\"a5312e5b\",\"filtersModule\":\"5c02b6b6\",\"functionsModule\":\"9d85556d\",\"vanButtonDictModule\":\"94263057\",\"vanCalendarDictModule\":\"1e0f1b17\",\"vanDatetimeDictModule\":\"1a314f91\",\"vanDropdownItemModule\":\"3ead3530\",\"vanFieldModule\":\"ec322176\",\"vanRadioDictModule\":\"c98b75d4\",\"vanSelectDictModule\":\"6be9984f\",\"vanTagDictModule\":\"f8377df5\",\"vanTreeSelectDictModule\":\"dd1c3954\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"van-field-dict\"},[_c('van-field',_vm._g(_vm._b({ref:\"VanFieldDict\",on:{\"focus\":_vm.handleFocus,\"blur\":_vm.handleBlur}},'van-field',_vm.$attrs,false),_vm.$listeners)),(_vm.desensitization)?_c('van-field',_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showCamouflage),expression:\"showCamouflage\"}],staticClass:\"camouflage\",attrs:{\"name\":_vm.$attrs.name&&_vm.$attrs.name + 'Camouflage'},model:{value:(_vm.sValue),callback:function ($$v) {_vm.sValue=$$v},expression:\"sValue\"}},'van-field',_vm.$attrs,false)):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"van-field-dict\">\r\n    <van-field ref=\"VanFieldDict\" v-on=\"$listeners\" v-bind=\"$attrs\" @focus=\"handleFocus\" @blur=\"handleBlur\"></van-field>\r\n    <van-field v-if=\"desensitization\" v-show=\"showCamouflage\"  :name=\"$attrs.name&&$attrs.name + 'Camouflage'\"  v-bind=\"$attrs\"  class=\"camouflage\" v-model=\"sValue\"></van-field>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {Desensitization} from \"~/functions/mask\"\r\nexport default {\r\n  name: \"van-field-dict\",\r\n  props: {\r\n    defaultVal: {\r\n      type: String, //缺省时展示\r\n      default: \"\"\r\n    },\r\n    // 脱敏类型\r\n    maskType: {\r\n      type: String,\r\n      validate(value) {\r\n        return [\"mobile\", \"address\", \"idCard\", \"name\"].includes(value)\r\n      }\r\n    },\r\n    maskStart: {\r\n      type: Number\r\n    },\r\n    maskEnd: {\r\n      type: Number\r\n    },\r\n    maskMiddle: {\r\n      type: Number\r\n    },\r\n    maskSymbol: {\r\n      type: String,\r\n      default: \"*\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      sValue: \"\",\r\n      showCamouflage: false\r\n    }\r\n  },\r\n  computed: {\r\n    desensitization() {\r\n      return this.maskType || this.maskStart\r\n    },\r\n    maskOptions() {\r\n      const obj = {}\r\n      if (this.defaultVal) {\r\n        obj.defaultVal = this.defaultVal\r\n      }\r\n      if (this.maskType) {\r\n        obj.maskType = this.maskType\r\n      }\r\n      if (this.maskStart) {\r\n        obj.start = this.maskStart\r\n      }\r\n      if (this.maskEnd) {\r\n        obj.end = this.maskEnd\r\n      }\r\n      if (this.maskMiddle) {\r\n        obj.middle = this.maskMiddle\r\n      }\r\n      if (this.maskSymbol) {\r\n        obj.symbol = this.maskSymbol\r\n      }\r\n      return obj\r\n    }\r\n  },\r\n  created() {\r\n    this.handleBlur()\r\n  },\r\n  methods: {\r\n    getRef() {\r\n      return this.$refs.VanFieldDict\r\n    },\r\n    //聚焦\r\n    handleFocus() {\r\n      if (this.$attrs.readonly === true || this.$attrs.readonly === \"\"){\r\n        return \r\n      }\r\n      this.showCamouflage = false\r\n    },\r\n    //失去焦点\r\n    handleBlur() {\r\n      if (this.desensitization) {\r\n        this.sValue = Desensitization(this.$attrs.value, this.maskOptions)\r\n        this.showCamouflage = true\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.van-field-dict{\r\n  position: relative;\r\n  .van-cell.van-field.camouflage{\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    pointer-events: none;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=362c2938&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=362c2938&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"362c2938\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanFieldDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanFieldDict.install = function(Vue) {\r\n  Vue.component(vanFieldDict.name, vanFieldDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanFieldDict","import Vue from \"vue\"\r\nimport {formatDictData} from \"~/utils/index\"\r\n\r\nconst state = Vue.observable({ \r\n  dictConfig: {},\r\n  dictCodes: {},\r\n  isGettingDictTypes: [], //正在请求字典类型数组 防止多个请求\r\n  isGettingAllDictTypes: false, //正在请求所有字典数据\r\n  unfindDictTypes: [] //防止重复请求没有的字典数据\r\n})\r\n\r\nconst mutations = {\r\n  //设置字典设置\r\n  SET_DICT_SETTING(setting) {\r\n    state.dictConfig = setting\r\n  },\r\n  //设置字典数据值\r\n  SET_DICT_CODES(dictData) {\r\n    state.dictCodes = dictData\r\n  },\r\n  //添加正在请求的字典类型字段\r\n  ADD_IS_EGTTING_DICT_TYPES(typesStr) {\r\n    const dictArr = typesStr.split(\",\")\r\n    const isGettingArr = [...dictArr, ...state.isGettingDictTypes]\r\n    const targetArr = new Set(isGettingArr)\r\n    state.isGettingDictTypes = Array.from(targetArr)\r\n  },\r\n  //去除正在请求的字典类型字段\r\n  REMOVE_IS_EGTTING_DICT_TYPES(typesStr) {\r\n    const dictArr = typesStr.split(\",\")\r\n    //arr1有 arr2没有的差集\r\n    const targetArr = [...new Set(state.isGettingDictTypes)].filter(item => !new Set(dictArr).has(item))\r\n    state.isGettingDictTypes = Array.from(targetArr)\r\n  },\r\n  //设置是否正在请求所有字典数据\r\n  SETTING_ISGETTING_ALL_DICT_TYPES(status) {\r\n    state.isGettingAllDictTypes = status\r\n  },\r\n\r\n  //添加找不到的字典类型字段\r\n  ADD_UNFIND_DICT_TYPES(typesStr) {\r\n    const dictArr = typesStr.split(\",\")\r\n    const isGettingArr = [...dictArr, ...state.unfindDictTypes]\r\n    const targetArr = new Set(isGettingArr)\r\n    state.unfindDictTypes = Array.from(targetArr)\r\n  },\r\n  //去除找不到的字典类型字段\r\n  REMOVE_UNFIND_DICT_TYPES(typesStr) {\r\n    const dictArr = typesStr.split(\",\")\r\n    //arr1有 arr2没有的差集\r\n    const targetArr = [...new Set(state.unfindDictTypes)].filter(item => !new Set(dictArr).has(item))\r\n    state.unfindDictTypes = Array.from(targetArr)\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  getDictDataObj(dictType) {\r\n    return new Promise((resolve, reject) => {\r\n      const { storage, dictDataKey, getDictCodeApi, usuallyGetFileds, formatterRequest, query, verssionKey, localDictCodes, formatterDictList, formatterDictVersion, isGetAll, filterDataFun, disabledDataFun } = state.dictConfig\r\n      //字典数据\r\n      const dictCodeList = state.dictCodes || localDictCodes\r\n      //缓存找不到\r\n      if (!dictCodeList[dictType] || dictCodeList[dictType].length === 0) {\r\n        if (state.isGettingDictTypes.includes(dictType) || state.isGettingAllDictTypes) { return } //如果有别的地方在请求这个字典类型数据  停止操作\r\n        mutations.ADD_IS_EGTTING_DICT_TYPES(dictType) //将这个字典类型列入到正在请求的字典数据当中\r\n        if (state.unfindDictTypes.includes(dictType)) {\r\n          // console.log(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n          reject(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n          return\r\n        }\r\n        //将此字典数据添加到找不到字典数据 记录起来\r\n        mutations.ADD_UNFIND_DICT_TYPES(dictType)\r\n\r\n        getDictCodeApi(formatterRequest(query, dictType)).then(data => {\r\n          mutations.REMOVE_IS_EGTTING_DICT_TYPES(dictType) //将这个字典类型从正在请求的字典数据当中移除\r\n\r\n          const verssion = formatterDictVersion(data)\r\n          const currentVerssion = storage.getItem(verssionKey) //当前字典数据的版本号\r\n          if (verssion !== currentVerssion) { //当前版本不是最新版本\r\n            let requestField = \"\"\r\n            if (isGetAll) { //如果获取全部，则重新获取全部，否则获取该类型的即可\r\n              requestField = \"\"\r\n              mutations.SETTING_ISGETTING_ALL_DICT_TYPES(true) //设置正在请求所有字典为 true  禁止其他部门请求的 请求\r\n            } else {\r\n              if (usuallyGetFileds) { //获取常用字段\r\n                const storageTypeArr = Object.keys(dictCodeList) //获取所有已缓存的字典字段（数组）\r\n                const usuallyGetTypeArr = usuallyGetFileds.split(\",\")\r\n                const arr = storageTypeArr.concat(usuallyGetTypeArr)\r\n                arr.push(dictType)\r\n                const resultArr = Array.from(new Set(arr))\r\n                requestField = resultArr.join(\",\")\r\n              } else {\r\n                const storageTypeArr = Object.keys(dictCodeList) //获取所有已缓存的字典字段（数组）\r\n                storageTypeArr.push(dictType)\r\n                const resultArr = Array.from(new Set(storageTypeArr))\r\n                requestField = resultArr.join(\",\")\r\n              }\r\n              mutations.ADD_IS_EGTTING_DICT_TYPES(requestField) //将这些字典类型列入到正在请求的字典数据当中\r\n            } \r\n            \r\n            //获取字典\r\n            getDictCodeApi(formatterRequest(query, requestField)).then(data => {\r\n              const allDictData = formatterDictList(data, dictType)\r\n              if (!(allDictData[dictType]&&allDictData[dictType].length > 0)) {\r\n                // console.log(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n                reject(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n                return\r\n              }\r\n              //将此字典数据类型从 找不到的字典数据类型 移除 \r\n              mutations.REMOVE_UNFIND_DICT_TYPES(dictType)\r\n              const verssion = formatterDictVersion(data)\r\n              const dictObjs = Object.assign(JSON.parse(JSON.stringify(localDictCodes)), allDictData)\r\n\r\n              const resultDictData = formatDictData(dictObjs, filterDataFun, disabledDataFun)\r\n              storage.setItem(dictDataKey, JSON.stringify(resultDictData))\r\n              storage.setItem(verssionKey, verssion)\r\n              mutations.SET_DICT_CODES(dictObjs)\r\n              resolve(state.dictCodes)\r\n              if (state.isGettingAllDictTypes) {\r\n                mutations.SETTING_ISGETTING_ALL_DICT_TYPES(false) //请求结束 设置正在请求所有字典为 false  禁止其他部门请求的 请求\r\n              } else {\r\n                mutations.REMOVE_IS_EGTTING_DICT_TYPES(requestField) //将这个字典类型从正在请求的字典数据当中移除\r\n              }\r\n            })\r\n          } else {\r\n            const typeDictList = formatterDictList(data, dictType)\r\n            if (!(typeDictList[dictType]&&typeDictList[dictType].length > 0)) {\r\n              // console.log(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n              reject(`不存在类型为：${dictType} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            \r\n            //将此字典数据类型从 找不到的字典数据类型 移除 \r\n            mutations.REMOVE_UNFIND_DICT_TYPES(dictType)\r\n            //再获取一次字典数据\r\n            const dictData = state.dictCodes || localDictCodes\r\n            const resultTypeList = formatDictData(typeDictList, filterDataFun, disabledDataFun)\r\n            Object.assign(dictData, resultTypeList) //添加该类型的字典数据\r\n            storage.setItem(dictDataKey, JSON.stringify(dictData)) //设置字典数据\r\n            mutations.SET_DICT_CODES(dictData)\r\n            resolve(state.dictCodes)\r\n          }\r\n        })\r\n      } else {\r\n        //将此字典数据类型从 找不到的字典数据类型 移除 \r\n        mutations.REMOVE_UNFIND_DICT_TYPES(dictType)\r\n\r\n        mutations.SET_DICT_CODES(dictCodeList)\r\n        resolve(state.dictCodes)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst store = {\r\n  state,\r\n  mutations,\r\n  actions\r\n}\r\n\r\nexport default store","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=4c3d54f9&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"25a346cc\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export default [\r\n  {\r\n    name: \"vanFieldDict\",\r\n    path: \"/van-field-dict\",\r\n    meta: {\r\n      title: \"vanFieldDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanFieldModule\" */ \"@/components/van-field-dict\")\r\n  }\r\n]","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-checkbox-group',_vm._g(_vm._b({ref:\"VanCheckboxGroup\",attrs:{\"value\":_vm.svalue},on:{\"change\":_vm.handdleChange}},'van-checkbox-group',_vm.$attrs,false),_vm.$listeners),_vm._l((_vm.list),function(item,index){return _c('van-checkbox',{key:index,attrs:{\"shape\":_vm.shape,\"label-disabled\":_vm.labelDisabled,\"label-position\":_vm.labelPosition,\"icon-size\":_vm.iconSize,\"checked-color\":_vm.checkedColor,\"bind-group\":_vm.bindGroup,\"disabled\":item.disabled,\"name\":item[_vm.dictConfig.format.value]},on:{\"change\":_vm.handleCheckboxChange,\"click\":_vm.handleCheckboxClick}},[_vm._v(\" \"+_vm._s(item[_vm.dictConfig.format.label])+\" \")])}),1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-checkbox-group ref=\"VanCheckboxGroup\" :value=\"svalue\" v-on=\"$listeners\" v-bind=\"$attrs\" @change=\"handdleChange\">\r\n    <van-checkbox\r\n      v-for=\"(item, index) in list\"\r\n      :shape=\"shape\"\r\n      :label-disabled=\"labelDisabled\"\r\n      :label-position=\"labelPosition\"\r\n      :icon-size=\"iconSize\"\r\n      :checked-color=\"checkedColor\"\r\n      :bind-group=\"bindGroup\"\r\n      :disabled=\"item.disabled\"\r\n      :name=\"item[dictConfig.format.value]\"\r\n      :key=\"index\"\r\n      @change=\"handleCheckboxChange\"\r\n      @click=\"handleCheckboxClick\"\r\n    >\r\n      {{item[dictConfig.format.label]}}\r\n    </van-checkbox>\r\n  </van-checkbox-group>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nexport default {\r\n  name: \"van-checkbox-dict\",\r\n  data() {\r\n    return {\r\n      svalue: this.value || [],\r\n      result: [],\r\n      list: [], //数据列表\r\n      type: \"\" //请求字典类型\r\n    }\r\n  },\r\n  props: {\r\n    value: {}, //接受外部v-model传入的值\r\n    shape: {\r\n      type: String,\r\n      default: \"round\"\r\n    },  \r\n    labelDisabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }, \r\n    labelPosition: {\r\n      type: String,\r\n      default: \"right\"\r\n    },\r\n    iconSize: {\r\n      type: [Number, String],\r\n      default: \"20px\"\r\n    },\r\n    checkedColor: {\r\n      type: String,\r\n      default: \"#1989fa\"\r\n    },  \r\n    bindGroup: {\r\n      type: Boolean,\r\n      default: true\r\n    },  \r\n    //是否返回键值\r\n    keyValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    //配置禁用选项\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type)) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val //②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val) //③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getDictionary_option()\r\n  },\r\n  methods: {\r\n    // 复选框点击事件\r\n    handleCheckboxClick(val) {\r\n      this.$emit(\"checkboxClick\", val)\r\n    },  \r\n    // 复选框改变事件\r\n    handleCheckboxChange(val) {\r\n      this.$emit(\"checkboxChange\", val)\r\n    },  \r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const {\r\n          filters,\r\n          filterType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.dictType\r\n        const filtersArr =\r\n          typeof filters === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter(item => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter(item => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      } \r\n\r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const {\r\n          disableValue,\r\n          disableType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.disableObj\r\n        const disableList =\r\n          typeof disableValue === \"string\"\r\n            ? disableValue.split(\",\")\r\n            : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              !disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n      this.list = dictData\r\n    },\r\n    // 下拉框点击事件\r\n    handdleChange(val) {\r\n      /* 子组件通过事件发射向父组件传递事件及参数，emit即为发射事件\r\n        第一个参数为向父组件传递的事件名，第二个参数为向父组件传递的参数 */\r\n      if (!this.keyValue) {\r\n        this.$emit(\"dictChange\", this.svalue)\r\n        return\r\n      }\r\n\r\n      const itemArr = this.list.filter(item => {\r\n        return this.svalue.includes(item[this.dictConfig.format.value])\r\n      })\r\n      this.$emit(\"dictChange\", itemArr)\r\n    },\r\n\r\n    getRef() {\r\n      return this.$refs.VanCheckboxGroup\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6b877b3c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanCheckboxDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanCheckboxDict.install = function(Vue) {\r\n  Vue.component(vanCheckboxDict.name, vanCheckboxDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanCheckboxDict","export default [\r\n  {\r\n    name: \"functions-dict\",\r\n    path: \"/functions/functions-dict\",\r\n    meta: {\r\n      title: \"functions-dict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"functionsModule\" */ \"@/components/functions/functions-dict\")\r\n  },\r\n  {\r\n    name: \"functions-other\",\r\n    path: \"/functions/functions-other\",\r\n    meta: {\r\n      title: \"functions-other\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"functionsModule\" */ \"@/components/functions/functions-other\")\r\n  }\r\n]","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-3!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=362c2938&prod&lang=less&scoped=true&\"","import store from \"~/store\"\r\n\r\n/**\r\n * @description: 树形字典通过code获取label\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nimport {GetTreeItemByCode} from \"~/functions/list-tree\"\r\n\r\nexport const GetTreeLabelByCode = (\r\n  val,\r\n  type,\r\n  options\r\n) => { \r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, treeSetting) => {\r\n      return arr.map((item) => {\r\n        return item[treeSetting.labelField]\r\n      }).join(\",\")\r\n    },\r\n    treeSetting: {}\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  return new Promise((resolve, reject) => {\r\n    const {treeSetting} = store.state.dictConfig\r\n    const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n    const dictList = store.state.dictCodes\r\n     \r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes) { //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (!(store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes)) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetItem = list.find(item => { return item[resultSetting.idField] === val })\r\n            resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByCode(targetItem[resultSetting.idField], list, resultSetting), resultSetting) : defaultOptions.defaultVal) \r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetItem = list.find((item) => { return item[resultSetting.idField] === val })\r\n          resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByCode(targetItem[resultSetting.idField], list, resultSetting), resultSetting) : defaultOptions.defaultVal) \r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetItem = list.find(item => { return item[resultSetting.idField] === val })\r\n      resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByCode(targetItem[resultSetting.idField], list, resultSetting), resultSetting) : defaultOptions.defaultVal)\r\n    }\r\n  })\r\n}\r\n \r\n/**\r\n  * @description: 树形数据通过codes 获取labels\r\n  * @param {*}\r\n  * @return {*}\r\n  * @author: syx\r\n  */\r\nexport function GetTreeLabelByCodesDothings(values, list, defaultVal, formatFunIn, resultSetting) {\r\n  const targetArr = []\r\n  for (let i = 0; i < values.length; i++) {\r\n    const findItem = list.find(item => { return item[resultSetting.idField] === values[i] })\r\n    if (findItem) {\r\n      targetArr.push(formatFunIn(GetTreeItemByCode(findItem[resultSetting.idField], list, resultSetting), resultSetting))\r\n    } else {\r\n      targetArr.push(defaultVal)\r\n    }\r\n  }\r\n  return targetArr\r\n}\r\n\r\nexport const GetTreeLabelByCodes = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFunIn: (arr, treeSetting) => {\r\n      return arr.map((item) => {\r\n        return item[treeSetting.labelField]\r\n      }).join(\"/\")\r\n    },\r\n    treeSetting: {},\r\n    formatFunOut: (arr) => {\r\n      return arr.join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  return new Promise((resolve, reject) => {\r\n    let values = []\r\n    if (Array.isArray(vals)) {\r\n      values = vals\r\n    } else if (typeof vals === \"string\") {\r\n      values = vals.split(defaultOptions.spacer)\r\n    }\r\n \r\n    const {treeSetting} = store.state.dictConfig\r\n    const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n    const dictList = store.state.dictCodes\r\n     \r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes) { //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (!(store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes)) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetArr = GetTreeLabelByCodesDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n            resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetArr = GetTreeLabelByCodesDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n          resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetArr = GetTreeLabelByCodesDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n      resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n    }\r\n  })\r\n}\r\n \r\n/**\r\n  * @description: 树形数据通过label 获取code\r\n  * @param {*}\r\n  * @return {*}\r\n  * @author: syx\r\n  */\r\nimport {GetTreeItemByLabel} from \"~/functions/list-tree\"\r\n//通过code获取label  树形数据使用\r\nexport const GetTreeCodeByLabel = (\r\n  val,\r\n  type,\r\n  options\r\n) => { \r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, treeSetting) => {\r\n      return arr.map((item) => {\r\n        return item[treeSetting.idField]\r\n      }).join(\",\")\r\n    },\r\n    treeSetting: {}\r\n  }\r\n  Object.assign(defaultOptions, options) \r\n  return new Promise((resolve, reject) => {\r\n    const {treeSetting} = store.state.dictConfig\r\n    const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n    const dictList = store.state.dictCodes\r\n     \r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes) { //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (!(store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes)) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetItem = list.find(item => { return item[resultSetting.labelField] === val })\r\n            resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByLabel(targetItem[resultSetting.labelField], list, resultSetting), resultSetting) : defaultOptions.defaultVal) \r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetItem = list.find((item) => { return item[resultSetting.labelField] === val })\r\n          resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByLabel(targetItem[resultSetting.labelField], list, resultSetting), resultSetting) : defaultOptions.defaultVal) \r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetItem = list.find(item => { return item[resultSetting.labelField] === val })\r\n      resolve(targetItem ? defaultOptions.formatFun(GetTreeItemByLabel(targetItem[resultSetting.labelField], list, resultSetting), resultSetting) : defaultOptions.defaultVal) \r\n    }\r\n  })\r\n}\r\n \r\n/**\r\n   * @description: 树形数据通过labels 获取codes\r\n   * @param {*}\r\n   * @return {*}\r\n   * @author: syx\r\n   */\r\nexport function GetTreeCodeByLabelsDothings(values, list, defaultVal, formatFunIn, resultSetting) {\r\n  const targetArr = []\r\n  for (let i = 0; i < values.length; i++) {\r\n    const findItem = list.find((item) => { return item[resultSetting.labelField] === values[i] })\r\n    if (findItem) {\r\n      targetArr.push(formatFunIn(GetTreeItemByLabel(findItem[resultSetting.labelField], list, resultSetting), resultSetting))\r\n    } else {\r\n      targetArr.push(defaultVal)\r\n    }\r\n  }\r\n  return targetArr\r\n}\r\n\r\nexport const GetTreeCodeByLabels = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFunIn: (arr, treeSetting) => {\r\n      return arr.map((item) => {\r\n        return item[treeSetting.idField]\r\n      }).join(\"/\")\r\n    },\r\n    treeSetting: {},\r\n    formatFunOut: (arr) => {\r\n      return arr.join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options) \r\n  return new Promise((resolve, reject) => {\r\n    let values = []\r\n    if (Array.isArray(vals)) {\r\n      values = vals\r\n    } else if (typeof vals === \"string\") {\r\n      values = vals.split(defaultOptions.spacer)\r\n    }\r\n  \r\n    const {treeSetting} = store.state.dictConfig\r\n    const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n    const dictList = store.state.dictCodes\r\n      \r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes) { //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (!(store.state.isGettingDictTypes.includes(type) || store.state.isGettingAllDictTypes)) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetArr = GetTreeCodeByLabelsDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n            resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetArr = GetTreeCodeByLabelsDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n          resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetArr = GetTreeCodeByLabelsDothings(values, list, defaultOptions.defaultVal, defaultOptions.formatFunIn, resultSetting)\r\n      resolve(targetArr&&targetArr.length > 0 ? defaultOptions.formatFunOut(targetArr) : defaultOptions.defaultVal)\r\n    }\r\n  })\r\n}","import store from \"~/store\"\r\n/**\r\n * @description: 树形字典通过code获取label\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nimport { GetTreeItemByCode } from \"~/functions/list-tree\"\r\nimport {\r\n  GetTreeLabelByCodesDothings,\r\n  GetTreeCodeByLabelsDothings\r\n} from \"~/functions/tree-dict\"\r\n\r\nexport const GetTreeLabelByCodeFilter = (\r\n  val,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, treeSetting) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[treeSetting.labelField]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    treeSetting: {}\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  const { treeSetting } = store.state.dictConfig\r\n  const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        return new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n      }\r\n      const targetItem = list.find((item) => {\r\n        return item[resultSetting.idField] === val\r\n      })\r\n      return targetItem\r\n        ? defaultOptions.formatFun(\r\n          GetTreeItemByCode(\r\n            targetItem[resultSetting.idField],\r\n            list,\r\n            resultSetting\r\n          ),\r\n          resultSetting\r\n        )\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetItem = list.find((item) => {\r\n      return item[resultSetting.idField] === val\r\n    })\r\n    return targetItem\r\n      ? defaultOptions.formatFun(\r\n        GetTreeItemByCode(\r\n          targetItem[resultSetting.idField],\r\n          list,\r\n          resultSetting\r\n        ),\r\n        resultSetting\r\n      )\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n\r\nexport const GetTreeLabelByCodesFilter = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFunIn: (arr, treeSetting) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[treeSetting.labelField]\r\n        })\r\n        .join(\"/\")\r\n    },\r\n    treeSetting: {},\r\n    formatFunOut: (arr) => {\r\n      return arr.join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  let values = []\r\n  if (Array.isArray(vals)) {\r\n    values = vals\r\n  } else if (typeof vals === \"string\") {\r\n    values = vals.split(defaultOptions.spacer)\r\n  }\r\n\r\n  const { treeSetting } = store.state.dictConfig\r\n  const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        return new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n      }\r\n      const targetArr = GetTreeLabelByCodesDothings(\r\n        values,\r\n        list,\r\n        defaultOptions.defaultVal,\r\n        defaultOptions.formatFunIn,\r\n        resultSetting\r\n      )\r\n      return targetArr && targetArr.length > 0\r\n        ? defaultOptions.formatFunOut(targetArr)\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetArr = GetTreeLabelByCodesDothings(\r\n      values,\r\n      list,\r\n      defaultOptions.defaultVal,\r\n      defaultOptions.formatFunIn,\r\n      resultSetting\r\n    )\r\n    return targetArr && targetArr.length > 0\r\n      ? defaultOptions.formatFunOut(targetArr)\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n\r\n/**\r\n * @description: 树形数据通过label 获取code\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nimport { GetTreeItemByLabel } from \"~/functions/list-tree\"\r\n//通过code获取label  树形数据使用\r\nexport const GetTreeCodeByLabelFilter = (\r\n  val,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, treeSetting) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[treeSetting.idField]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    treeSetting: {}\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  const { treeSetting } = store.state.dictConfig\r\n  const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        return new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n      }\r\n      const targetItem = list.find((item) => {\r\n        return item[resultSetting.labelField] === val\r\n      })\r\n      return targetItem\r\n        ? defaultOptions.formatFun(\r\n          GetTreeItemByLabel(\r\n            targetItem[resultSetting.labelField],\r\n            list,\r\n            resultSetting\r\n          ),\r\n          resultSetting\r\n        )\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetItem = list.find((item) => {\r\n      return item[resultSetting.labelField] === val\r\n    })\r\n    return targetItem\r\n      ? defaultOptions.formatFun(\r\n        GetTreeItemByLabel(\r\n          targetItem[resultSetting.labelField],\r\n          list,\r\n          resultSetting\r\n        ),\r\n        resultSetting\r\n      )\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n\r\nexport const GetTreeCodeByLabelsFilter = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFunIn: (arr, treeSetting) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[treeSetting.idField]\r\n        })\r\n        .join(\"/\")\r\n    },\r\n    treeSetting: {},\r\n    formatFunOut: (arr) => {\r\n      return arr.join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  let values = []\r\n  if (Array.isArray(vals)) {\r\n    values = vals\r\n  } else if (typeof vals === \"string\") {\r\n    values = vals.split(defaultOptions.spacer)\r\n  }\r\n\r\n  const { treeSetting } = store.state.dictConfig\r\n  const resultSetting = Object.assign(treeSetting, defaultOptions.treeSetting)\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        return new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n      }\r\n      const targetArr = GetTreeCodeByLabelsDothings(\r\n        values,\r\n        list,\r\n        defaultOptions.defaultVal,\r\n        defaultOptions.formatFunIn,\r\n        resultSetting\r\n      )\r\n      return targetArr && targetArr.length > 0\r\n        ? defaultOptions.formatFunOut(targetArr)\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetArr = GetTreeCodeByLabelsDothings(\r\n      values,\r\n      list,\r\n      defaultOptions.defaultVal,\r\n      defaultOptions.formatFunIn,\r\n      resultSetting\r\n    )\r\n    return targetArr && targetArr.length > 0\r\n      ? defaultOptions.formatFunOut(targetArr)\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n","import store from \"~/store/index.js\"\r\nimport components from \"~/components/index.js\"\r\nimport \"~/assets/css/index.css\"\r\n\r\nimport {GetDictConfig, GetDictConfigByKey} from \"~/functions/common\"\r\nexport const getDictConfig = GetDictConfig\r\nexport const getDictConfigByKey = GetDictConfigByKey\r\n\r\n// 普通字典方法相关\r\nimport {\r\n  GetLabelByCode,\r\n  GetLabelByCodes,\r\n  GetCodeByLabel,\r\n  GetCodeByLabels,\r\n  GetDictObjByDictTypes\r\n} from \"~/functions/dict\"\r\nexport const getLabelByCode = GetLabelByCode\r\nexport const getLabelByCodes = GetLabelByCodes\r\nexport const getCodeByLabel = GetCodeByLabel\r\nexport const getCodeByLabels = GetCodeByLabels\r\nexport const getDictObjByDictTypes = GetDictObjByDictTypes\r\n\r\n// 普通字典过滤器相关\r\nimport {\r\n  GetLabelByCodeFilter,\r\n  GetLabelByCodesFilter,\r\n  GetCodeByLabelFilter,\r\n  GetCodeByLabelsFilter\r\n} from \"~/filters/dict\"\r\nexport const getLabelByCodeFilter = GetLabelByCodeFilter\r\nexport const getLabelByCodesFilter = GetLabelByCodesFilter\r\nexport const getCodeByLabelFilter = GetCodeByLabelFilter\r\nexport const getCodeByLabelsFilter = GetCodeByLabelsFilter\r\n\r\n// 脱敏\r\nimport {Mask, MaskAddress, MaskIdCard, MaskName, MaskPhone, Desensitization} from \"~/functions/mask\"\r\nexport const mask = Mask\r\nexport const maskAddress = MaskAddress\r\nexport const maskIdCard = MaskIdCard\r\nexport const maskName = MaskName\r\nexport const maskPhone = MaskPhone\r\nexport const desensitization = Desensitization\r\n\r\n// 日期格式化\r\nimport {FormatDate, IsDate} from \"~/functions/date-format\"\r\nexport const formatDate = FormatDate\r\nexport const isDate = IsDate\r\n\r\n// 树形方法相关\r\nimport { ListToTree, GetTreeItemByCode, GetTreeItemByLabel } from \"./functions/list-tree\"\r\nexport const listToTree = ListToTree\r\nexport const getTreeItemByCode = GetTreeItemByCode\r\nexport const getTreeItemByLabel = GetTreeItemByLabel\r\n\r\n// 树形字典方法相关\r\nimport {GetTreeLabelByCode, GetTreeCodeByLabel, GetTreeLabelByCodes, GetTreeCodeByLabels} from \"./functions/tree-dict\"\r\nexport const getTreeLabelByCode = GetTreeLabelByCode\r\nexport const getTreeCodeByLabel = GetTreeCodeByLabel\r\nexport const getTreeLabelByCodes = GetTreeLabelByCodes\r\nexport const getTreeCodeByLabels = GetTreeCodeByLabels\r\n\r\nimport {GetTreeLabelByCodeFilter, GetTreeCodeByLabelFilter, GetTreeLabelByCodesFilter, GetTreeCodeByLabelsFilter} from \"./filters/tree-dict\"\r\nexport const getTreeLabelByCodeFilter = GetTreeLabelByCodeFilter\r\nexport const getTreeCodeByLabelFilter = GetTreeCodeByLabelFilter\r\nexport const getTreeLabelByCodesFilter = GetTreeLabelByCodesFilter\r\nexport const getTreeCodeByLabelsFilter = GetTreeCodeByLabelsFilter\r\n\r\nconst filters = [\r\n  {\r\n    name: \"getLabelByCodeFilter\",\r\n    func: GetLabelByCodeFilter\r\n  },\r\n  {\r\n    name: \"getLabelByCodesFilter\",\r\n    func: GetLabelByCodesFilter\r\n  },\r\n  {\r\n    name: \"getCodeByLabelFilter\",\r\n    func: GetCodeByLabelFilter\r\n  },\r\n  {\r\n    name: \"getCodeByLabelsFilter\",\r\n    func: GetCodeByLabelsFilter\r\n  },\r\n  {\r\n    name: \"getTreeLabelByCodeFilter\",\r\n    func: GetTreeLabelByCodeFilter\r\n  },\r\n  {\r\n    name: \"getTreeCodeByLabelFilter\",\r\n    func: GetTreeCodeByLabelFilter\r\n  },\r\n  {\r\n    name: \"getTreeLabelByCodesFilter\",\r\n    func: GetTreeLabelByCodesFilter\r\n  },\r\n  {\r\n    name: \"getTreeCodeByLabelsFilter\",\r\n    func: GetTreeCodeByLabelsFilter\r\n  },\r\n  {\r\n    name: \"formatDate\",\r\n    func: FormatDate\r\n  },\r\n  {\r\n    name: \"desensitization\",\r\n    func: Desensitization\r\n  }\r\n]\r\n\r\n//获取字典数据\r\nasync function getDIctCodeReq(setting) {\r\n  //从缓存中获取，如果没值 则从新获取\r\n  const dictData = setting.storage.getItem(setting.dictDataKey)\r\n  //添加判断，当是usuallyGetFileds 的时候 过滤掉缓存已经有的字典数据值  只请求没有的  当缓存中都有时 不请求\r\n  const values = setting.usuallyGetFileds.split(\",\")\r\n  const needGetArr = [] //保留需要请求的字典数组类型\r\n  if (values.length > 0) {\r\n    for (let i = 0; i < values.length; i++) {\r\n      if (dictData[values[i]]) {\r\n        continue\r\n      }\r\n      needGetArr.push(values[i])\r\n    }\r\n  }\r\n \r\n  if (!dictData || setting.getDictEveryTime || needGetArr.length > 0) {\r\n    let data\r\n    let query\r\n    if (setting.isGetAll) {\r\n      query = \"\"\r\n      store.mutations.SETTING_ISGETTING_ALL_DICT_TYPES(true) //设置正在请求所有字典为 true  禁止其他部门请求的 请求\r\n      data = await setting.getDictCodeApi(setting.formatterRequest(setting.query))\r\n      store.mutations.SETTING_ISGETTING_ALL_DICT_TYPES(false) //请求结束 设置正在请求所有字典为 false  禁止其他部门请求的 请求\r\n    } else if (needGetArr.length > 0) {\r\n      query = needGetArr.join(\",\")\r\n      store.mutations.ADD_IS_EGTTING_DICT_TYPES(needGetArr.join(\",\")) //将这些字典类型列入到正在请求的字典数据当中\r\n      data = await setting.getDictCodeApi(setting.formatterRequest(setting.query, query))\r\n      store.mutations.REMOVE_IS_EGTTING_DICT_TYPES(needGetArr.join(\",\")) //将这些字典类型从正在请求的字典数据当中移除\r\n    }\r\n    //格式化数据\r\n    const dictCodeList = setting.formatterDictList(data, query)\r\n    const version = setting.formatterDictversion(data)\r\n    setting.storage.setItem(setting.versionKey, version) //设置字典版本号\r\n\r\n    //把本地字典数据也存起来\r\n    const dictObjs = Object.assign(JSON.parse(JSON.stringify(setting.localDictCodes)), dictCodeList)\r\n    store.mutations.SET_DICT_CODES(dictObjs)\r\n    setting.storage.setItem(setting.dictDataKey, JSON.stringify(dictObjs)) //设置字典数据\r\n    \r\n  }\r\n}\r\n\r\nconst vue2ElementDict = {\r\n  async install(Vue, config) {\r\n    console.dir(Vue)\r\n    /**\r\n     * @description: 字典包\r\n     * @param {*} Vue\r\n     * @param {*} config :{\r\n     *    axiosSetting,  请求设置  axios   requestName\r\n     *    getDictCodeApi,  获取字典数据接口  必传\r\n     *    version, 版本号  首次加载传入字典数据最新的版本号，匹配当前版本号是否一致，不一致时清空缓存数据，并存入最新版本号  必传\r\n     *    query,  请求字典接口参数名 默认 type\r\n     *    usuallyGetFileds, 常用字典数据  默认空  字符串 逗号隔开\r\n     *    versionKey, 版本号缓存键名\r\n     *    dictDataKey, 字典数据缓存键名\r\n     *    format, 定义字段名\r\n     *    formatterDictList,  格式化字典数据\r\n     *    formatterDictversion, 格式化字典数据版本\r\n     *    formatterRequest, 格式化请求数据格式\r\n     *    storage,  存储位置  localstorage   sessionstorage\r\n     *    isGetAll,  请求全部\r\n     *    treeSetting, 数组转树形数据配置\r\n     *    localDictCodes, 本地缓存数据\r\n     *    getDictEveryTime  是否每次都请求\r\n     *    filterDataFun 组件过滤数据方法函数 默认不变\r\n     *    disabledDataFun 组件禁用数据方法函数 默认不变\r\n     * }\r\n     * @return {*}\r\n     * @author: syx\r\n     */\r\n    const defaultConfig = {\r\n      //组件过滤数据 配置\r\n      filterDataFun: (list) => {\r\n        return list\r\n      },\r\n      //组件禁用数据 配置\r\n      disabledDataFun: (list) => {\r\n        return list\r\n      },\r\n      //配置数组数据转化成树形数据\r\n      treeSetting: {\r\n        idField: \"id\", //唯一标识字段名\r\n        parentIdField: \"parentId\", //父节点唯一标识字段名\r\n        childrenField: \"children\", //子节点标识字段名\r\n        firstId: \"0\", // 根节点值\r\n        labelField: \"label\", //label字段名\r\n        labelArrField: \"labelArr\", //给对象新增的中文数组字段名\r\n        idArrField: \"idArr\", //给对象新增的id数组字段名\r\n        levelField: \"level\", //给对象新增的层级字段名\r\n        level: 0, // 给第一级展示的层级\r\n        leafField: \"leaf\" //叶子节点标识字段名\r\n      },\r\n      query: \"dictType\",\r\n      versionKey: \"vue2VantDictVersion\",\r\n      dictDataKey: \"vue2VantDictData\",\r\n      format: {\r\n        value: \"value\",\r\n        label: \"label\"\r\n      },\r\n      formatterRequest: (query, dictType) => {\r\n        if (!dictType) {\r\n          return { [query]: \"\" }\r\n        }\r\n        return { [query]: dictType }\r\n      },\r\n      formatterDictList: (\r\n        data,\r\n        query\r\n      ) => {\r\n        return data?.dictData\r\n      },\r\n      formatterDictVersion: (data) => {\r\n        return data.version\r\n      },\r\n      storage: localStorage,\r\n      usuallyGetFileds: \"\",\r\n      isGetAll: false,\r\n      localDictCodes: {}, //本地数据\r\n      getDictEveryTime: false\r\n    }\r\n    config.treeSetting = Object.assign(defaultConfig.treeSetting, config.treeSetting)\r\n    const setting = Object.assign(defaultConfig, config)\r\n\r\n    store.mutations.SET_DICT_SETTING(setting)\r\n    const dictList = JSON.parse(setting.storage.getItem(setting.dictDataKey)) || {}\r\n    //把本地字典数据也存起来\r\n    let dictObjs = JSON.parse(JSON.stringify(setting.localDictCodes))\r\n    dictObjs = Object.assign(dictList, dictObjs)\r\n    setting.storage.setItem(setting.dictDataKey, JSON.stringify(dictObjs))\r\n    store.mutations.SET_DICT_CODES(dictObjs)\r\n\r\n    //如果缓存的数据非最新数据，清除缓存\r\n    const currentversion = setting.storage.getItem(setting.versionKey) //当前字典数据的版本号\r\n    if (setting.version !== currentversion) {\r\n      setting.storage.removeItem(setting.dictDataKey) //清除缓存数据\r\n      setting.storage.setItem(setting.versionKey, setting.version) //设置字典版本号\r\n\r\n      setting.storage.setItem(setting.dictDataKey, JSON.stringify(setting.localDictCodes))\r\n      //版本号不一样，把字典数据设置为 本地字典数据\r\n      store.mutations.SET_DICT_CODES(setting.localDictCodes)\r\n    }\r\n    if (setting.isGetAll || setting.usuallyGetFileds) {\r\n    //获取字典数据，是否一次性全部 还是 获取 部分\r\n      getDIctCodeReq(setting)\r\n    }\r\n\r\n    // 遍历注册全局组件\r\n    components.map(component => Vue.component(component.name, component))\r\n\r\n    // 注册过滤器\r\n    filters.map(filter => {\r\n      Vue.filter(filter.name, filter.func)\r\n    })\r\n  }\r\n}\r\n\r\nexport default vue2ElementDict","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".title{padding:12px 0;padding-left:15px;font-size:24px;font-weight:700;line-height:50px;position:relative;color:#409eff}.title:after{content:\\\"\\\";width:5px;height:24px;background:#409eff;position:absolute;top:50%;left:0;transform:translateY(-50%)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/**\r\n * @description: 数组转化为树形数据  （需要按顺序的数组方可使用）\r\n * @param {*} arr\r\n * @param {*} options idField id字段名  parentIdField 父节点字段名   childrenField 儿子字段   firstId 第一级id labelArrField 新生成的labelArr 表示层级关系  idArrField 同理\r\n * @author: syx\r\n */\r\nexport const ListToTree = (data, config, parentObj) => {\r\n  const defaultOptions = {\r\n    idField: \"id\", //唯一标识字段名\r\n    parentIdField: \"parentId\", //父节点唯一标识字段名\r\n    childrenField: \"children\", //子节点标识字段名\r\n    firstId: \"0\", // 根节点值\r\n    labelField: \"label\", //label字段名\r\n    labelArrField: \"labelArr\", //给对象新增的中文数组字段名\r\n    idArrField: \"idArr\", //给对象新增的id数组字段名\r\n    levelField: \"level\", //给对象新增的层级字段名\r\n    level: 0, // 给根目录配置的层级\r\n    leafField: \"leaf\" //叶子节点标识字段名\r\n  }\r\n  Object.assign(defaultOptions, config)\r\n\r\n  if (!parentObj) {\r\n    parentObj = {\r\n      [defaultOptions.idField]: defaultOptions.firstId,\r\n      [defaultOptions.levelField]: defaultOptions.level,\r\n      [defaultOptions.labelArrField]: [],\r\n      [defaultOptions.idArrField]: []\r\n    }\r\n  }\r\n\r\n  var tree = []\r\n  var temp\r\n  // 遍历数组\r\n  for (var i = 0; i < data.length; i++) {\r\n    // 如果这个元素的 父id 是要找的\r\n    if (data[i][defaultOptions.parentIdField] === parentObj[defaultOptions.idField]) {\r\n      var obj = data[i]\r\n      // 给元素添加层级标志\r\n      obj[defaultOptions.levelField] = parentObj[defaultOptions.levelField] + 1\r\n      // 给元素添加 字段数组\r\n      obj[defaultOptions.labelArrField] = parentObj[defaultOptions.labelArrField].concat(obj[defaultOptions.labelField])\r\n      // 给元素添加 id数组\r\n      obj[defaultOptions.idArrField] = parentObj[defaultOptions.idArrField].concat(obj[defaultOptions.idField])\r\n \r\n      // 查找这个元素的子元素\r\n      temp = ListToTree(data, config, obj)\r\n      if (temp.length > 0) {\r\n        obj[defaultOptions.childrenField] = temp\r\n        obj[defaultOptions.leafField] = false\r\n      } else {\r\n        // 没有子元素 说明是叶子节点\r\n        obj[defaultOptions.leafField] = true\r\n      }\r\n      tree.push(obj)\r\n    }\r\n  }\r\n  return tree\r\n}\r\n\r\n/**\r\n * @description: 通过code获取树形数组方法\r\n * @param {*} id\r\n * @param {*} arr\r\n * @param {*} options\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport function GetTreeItemByCode(id, arr, options) {\r\n  const defaultOptions = {\r\n    idField: \"id\", //唯一标识字段名\r\n    parentIdField: \"parentId\" //父节点唯一标识字段名\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  const item = arr.find(item => item[defaultOptions.idField] === id)\r\n  if (!item) {\r\n    return []\r\n  }\r\n  return GetTreeItemByCode(item[defaultOptions.parentIdField], arr, defaultOptions).concat([item])\r\n}\r\n\r\n/**\r\n * @description: 通过label获取树形数组方法\r\n * @param {*} id\r\n * @param {*} arr\r\n * @param {*} options\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport function GetTreeItemByLabel(label, arr, options) {\r\n  const defaultOptions = {\r\n    idField: \"id\",\r\n    labelField: \"label\", //唯一标识字段名\r\n    parentIdField: \"parentId\" //父节点唯一标识字段名\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  const item = arr.find(item => item[defaultOptions.labelField] === label)\r\n  return GetTreeItemByCode(item[defaultOptions.idField], arr, defaultOptions)\r\n}\r\n\r\nexport const GetTreePathByValue = (arr, targetValue, config) => {\r\n  const defaultConfig = {\r\n    targetField: \"id\",\r\n    childrenField: \"children\" //子节点标识字段名\r\n  }\r\n  Object.assign(defaultConfig, config)\r\n  return arr.reduce((total, item) => {\r\n    if (item[defaultConfig.targetField] === targetValue) {\r\n      total.push(item)\r\n    } else {\r\n      if (item[defaultConfig.childrenField] && item[defaultConfig.childrenField].length) {\r\n        const path = GetTreePathByValue(item[defaultConfig.childrenField], targetValue, config)\r\n        if (path && path.length) {\r\n          total.unshift(item, ...path)\r\n        }\r\n      } \r\n    }\r\n    \r\n    return total\r\n  }, [])\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"van-cascader-dict\"},[_c('van-field',_vm._g(_vm._b({attrs:{\"readonly\":\"\",\"clickable\":\"\",\"value\":_vm.showValue,\"is-link\":\"\"},on:{\"click\":_vm.handleClick},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-field',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)})],2),_c('van-popup',{attrs:{\"round\":\"\",\"position\":\"bottom\"},model:{value:(_vm.showPicker),callback:function ($$v) {_vm.showPicker=$$v},expression:\"showPicker\"}},[_c('van-cascader',_vm._b({ref:\"VantCascaderDict\",staticClass:\"cascader\",attrs:{\"placeholder\":_vm.cascaderPlaceholder,\"closeable\":false,\"field-names\":_vm.setting,\"options\":_vm.options},on:{\"close\":_vm.handleClose,\"change\":_vm.handdleChange,\"finish\":_vm.handleFinish},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('div',{staticClass:\"van-picker__cancel\",on:{\"click\":_vm.handleCancel}},[_vm._v(_vm._s(_vm.cancelButtonText))]),_c('div',{staticClass:\"vant_cascader_title\"},[_vm._v(_vm._s(_vm.$attrs.title))]),_c('div',{staticClass:\"van-picker__confirm\",on:{\"click\":function($event){return _vm.handleConfirm(_vm.selectValue)}}},[_vm._v(_vm._s(_vm.confirmButtonText))])]},proxy:true}]),model:{value:(_vm.selectValue),callback:function ($$v) {_vm.selectValue=$$v},expression:\"selectValue\"}},'van-cascader',_vm.$attrs,false))],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"van-cascader-dict\">\r\n    <van-field v-on=\"$listeners\" v-bind=\"$attrs\" readonly clickable :value=\"showValue\" is-link @click=\"handleClick\" >\r\n      <template v-for=\"(slot, key) in $scopedSlots\" :slot=\"key\" slot-scope=\"scope\">\r\n        <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n      </template>\r\n      <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n        <slot :name=\"key\"></slot>\r\n      </template>\r\n    </van-field>\r\n    <van-popup v-model=\"showPicker\" round position=\"bottom\">\r\n      <van-cascader ref=\"VantCascaderDict\" class=\"cascader\" :placeholder=\"cascaderPlaceholder\" @close=\"handleClose\" @change=\"handdleChange\" @finish=\"handleFinish\" :closeable=\"false\" v-model=\"selectValue\" :field-names=\"setting\" v-bind=\"$attrs\" :options=\"options\">\r\n        <template #title>\r\n          <div class=\"van-picker__cancel\" @click=\"handleCancel\">{{cancelButtonText}}</div>\r\n          <div class=\"vant_cascader_title\">{{$attrs.title}}</div>\r\n          <div class=\"van-picker__confirm\" @click=\"handleConfirm(selectValue)\">{{confirmButtonText}}</div>\r\n        </template>\r\n      </van-cascader>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nimport {ListToTree, GetTreePathByValue} from \"~/functions/list-tree.js\"\r\nexport default {\r\n  name: \"van-cascader-dict\",\r\n  data() {\r\n    return {\r\n      selectValue: null,\r\n      svalue: this.value,\r\n      showValue: \"\",\r\n      showPicker: false,\r\n      list: [], //数据列表\r\n      type: \"\", //请求字典类型\r\n      selectedOptions: [],\r\n      tabIndex: null //选中的数据的层级\r\n    }\r\n  },\r\n  props: {\r\n    value: {},\r\n    tips: {\r\n      type: String\r\n    },\r\n    //可以选中的最小层级\r\n    minSelectLevel: {\r\n      type: [Number, String]\r\n    },\r\n    //最大层级\r\n    maxLevel: {\r\n      type: [Number, String]\r\n    },\r\n    cascaderPlaceholder: {\r\n      type: String,\r\n      default: \"请选择\"\r\n    },\r\n    // 树形数据\r\n    treeData: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    defaultValue: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    spacer: {\r\n      type: String,\r\n      default: \"/\"\r\n    },\r\n    //选到最后一级时触发确认\r\n    finish: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    cancelButtonText: {\r\n      type: String,\r\n      default: \"取消\"\r\n    },\r\n    confirmButtonText: {\r\n      type: String,\r\n      default: \"确认\"\r\n    },\r\n    keyValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    },\r\n    endTreeSetting() {\r\n      const props = this.$attrs.fieldNames??{}\r\n      const newProps = {\r\n        idField: props.value??this.dictConfig.treeSetting.idField,\r\n        labelField: props.text??this.dictConfig.treeSetting.labelField,\r\n        childrenField: props.children??this.dictConfig.treeSetting.childrenField\r\n      }\r\n      const treeSetting = Object.assign(this.dictConfig.treeSetting, newProps)\r\n      return treeSetting\r\n    },\r\n    options() {\r\n      if (this.treeData.length > 0) {\r\n        return this.treeData\r\n      }\r\n      const allAllTreeData = ListToTree(this.list, this.endTreeSetting)\r\n      const treeArr = JSON.parse(JSON.stringify(allAllTreeData))\r\n      if (this.maxLevel) {\r\n        this.filterLevel(treeArr, +this.maxLevel)\r\n      }\r\n      return treeArr || []\r\n    },\r\n    setting() {\r\n      const props = this.$attrs.fieldNames??{}\r\n      props.value = props.value??this.dictConfig.treeSetting.idField\r\n      props.text = props.label??this.dictConfig.treeSetting.labelField\r\n      props.children = props.children??this.dictConfig.treeSetting.childrenField\r\n      return props\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type) && this.treeData.length === 0) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val && this.treeData.length === 0) {\r\n        this.getDictionary_option() \r\n      }\r\n    },\r\n    showPicker(val) {\r\n      if (!val) {\r\n        this.selectValue = null\r\n        this.handleClose()\r\n      } else {\r\n        this.selectValue = this.value\r\n      }\r\n    },\r\n    //监听数据变化时，赋值\r\n    options(val) {\r\n      if (!this.value || val.length === 0) { return }\r\n      const path = GetTreePathByValue(val, this.value, this.endTreeSetting)\r\n      this.showValue = this.setShowValue(path, this.spacer)\r\n    },\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val//②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val)//③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.treeData.length === 0) {\r\n      this.getDictionary_option()\r\n    }\r\n     \r\n    if (this.treeData.length > 0 && this.value) {\r\n      const path = GetTreePathByValue(this.treeData, this.value, this.endTreeSetting)\r\n      this.showValue = this.setShowValue(path, this.spacer)\r\n    }\r\n  },\r\n  methods: {\r\n    // 赋值\r\n    setShowValue(targetArr, spacer) {\r\n      return targetArr.map((option) => option[this.endTreeSetting.labelField]).join(spacer)\r\n    },\r\n    //过滤层级\r\n    filterLevel(arr, maxLevel) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const item = arr[i]\r\n        const currentLevel = item[this.endTreeSetting.levelField]\r\n        if (currentLevel === maxLevel) {\r\n          delete item[this.endTreeSetting.childrenField]\r\n          continue\r\n        } else {\r\n          this.filterLevel(item[this.endTreeSetting.childrenField], maxLevel)\r\n        }\r\n      }\r\n    },\r\n    //全部选项选择完成后触发\r\n    handleFinish(data) {\r\n      if (this.finish) {\r\n        this.handleConfirm(data.value)\r\n      }\r\n      this.$emit(\"finish\", data)\r\n    },\r\n    //改变事件\r\n    handdleChange(data) {\r\n      this.tabIndex = data.tabIndex\r\n      this.selectedOptions = data.selectedOptions \r\n      this.$emit(\"change\", data)\r\n    },\r\n    //关闭事件\r\n    handleClose() {\r\n      this.$emit(\"close\")\r\n    },\r\n    //点击事件\r\n    handleClick() {\r\n      if (this.$attrs.disabled === true || this.$attrs.disabled === \"\") {\r\n        return\r\n      }\r\n      this.showPicker = true\r\n    },\r\n    //点击确定\r\n    handleConfirm(value) {\r\n      if (this.selectedOptions[this.tabIndex].disabled) {\r\n        return \r\n      }\r\n      if (this.minSelectLevel&& +this.minSelectLevel > (this.tabIndex + 1)) {\r\n        const msg = this.tips || `请选择至少第${this.minSelectLevel}级`\r\n        this.$toast(msg)\r\n        return\r\n      }\r\n      this.svalue = value\r\n      this.showPicker = false\r\n      if (!this.keyValue) {\r\n        this.$emit(\"dictChange\", this.svalue)\r\n      } else {\r\n        this.$emit(\"dictChange\", this.selectedOptions)\r\n      }\r\n      this.showValue = this.setShowValue(this.selectedOptions, this.spacer)\r\n    },\r\n    //点击取消\r\n    handleCancel() {\r\n      this.showPicker = false\r\n    },\r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const { filters, filterType = this.endTreeSetting.idField, reverse = false } = this.dictType\r\n        const filtersArr = typeof (filters) === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter(item => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter(item => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      }\r\n\r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const { disableValue, disableType = this.endTreeSetting.idField, reverse = false } = this.disableObj\r\n        const disableList = typeof (disableValue) === \"string\" ? disableValue.split(\",\") : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled = !disableList.includes(targetItem[disableType]) || targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled = disableList.includes(targetItem[disableType]) || targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n      this.list = dictData\r\n    },\r\n\r\n    getRef() {\r\n      return this.$refs.VantCascaderDict\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.van-cascader-dict >>> .van-popup .van-cascader .van-cascader__header {\r\n  padding: 0;\r\n}\r\n.van-cascader-dict >>> .van-popup .van-cascader .van-cascader__header .van-cascader__title {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-content: center;\r\n}\r\n.van-cascader-dict >>> .van-popup .van-cascader .van-cascader__header .van-cascader__title .van-picker__cancel {\r\n  color: #969799;\r\n}\r\n.van-cascader-dict >>> .van-popup .van-cascader .van-cascader__header .van-cascader__title .vant_cascader_title {\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n}\r\n.van-cascader-dict >>> .van-popup .van-cascader .van-cascader__header .van-cascader__title .van-picker__confirm {\r\n  color: #576b95;\r\n}\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4c3d54f9&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=4c3d54f9&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4c3d54f9\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanCascaderDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanCascaderDict.install = function(Vue) {\r\n  Vue.component(vanCascaderDict.name, vanCascaderDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanCascaderDict","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-button',_vm._g(_vm._b({ref:\"VanButtonDict\",attrs:{\"type\":_vm.judgeType},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-button',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)}),_vm._v(\" \"+_vm._s(_vm.GetLabelByCodeFilter(_vm.value, _vm.dictType))+\" \")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-button ref=\"VanButtonDict\" :type=\"judgeType\" v-on=\"$listeners\" v-bind=\"$attrs\">\r\n    <template v-for=\"(slot, key) in $scopedSlots\" :slot=\"key\" slot-scope=\"scope\">\r\n      <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n    </template>\r\n    <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n      <slot :name=\"key\"></slot>\r\n    </template>\r\n    {{GetLabelByCodeFilter(value, dictType)}}\r\n  </van-button>\r\n</template>\r\n\r\n<script>\r\nimport {GetLabelByCodeFilter} from \"~/filters/dict\"\r\nexport default {\r\n  name: \"van-button-dict\",\r\n  props: {\r\n    value: {\r\n      type: [String, Number],\r\n      required: true\r\n    },\r\n    dictType: {\r\n      type: [String],\r\n      required: true\r\n    }, //请求的码表值\r\n    judgeTypeFun: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"primary\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      GetLabelByCodeFilter\r\n    }\r\n  },\r\n  computed: {\r\n    judgeType() {\r\n      if (!this.judgeTypeFun) {\r\n        return this.type\r\n      }\r\n      return this.judgeTypeFun(this.value) || this.type\r\n    }\r\n  },\r\n  methods: {\r\n    getRef() {\r\n      return this.$refs.VanButtonDict\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=44299047&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanButtonDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanButtonDict.install = function(Vue) {\r\n  Vue.component(vanButtonDict.name, vanButtonDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanButtonDict","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-dropdown-item',_vm._g(_vm._b({ref:\"VanDropdownItemDict\",attrs:{\"options\":_vm.options},on:{\"change\":_vm.handdleChange},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-dropdown-item',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-dropdown-item ref=\"VanDropdownItemDict\" v-on=\"$listeners\" v-bind=\"$attrs\" @change=\"handdleChange\" :options=\"options\">\r\n    <template v-for=\"(slot, key) in $scopedSlots\" :slot=\"key\" slot-scope=\"scope\">\r\n      <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n    </template>\r\n    <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n      <slot :name=\"key\"></slot>\r\n    </template>\r\n  </van-dropdown-item>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nexport default {\r\n  name: \"van-dropdown-item-dict\",\r\n  data() {\r\n    return {\r\n      list: [], //数据列表\r\n      type: \"\" //请求字典类型\r\n    }\r\n  },\r\n  props: {\r\n    //是否返回键值\r\n    keyValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    },\r\n    options() {\r\n      return this.list.map(item => {\r\n        return {\r\n          text: item[this.dictConfig.format.label],\r\n          value: item[this.dictConfig.format.value],\r\n          icon: item.icon || \"\"\r\n        }\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type)) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val) {\r\n        this.getDictionary_option()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getDictionary_option()\r\n  },\r\n  methods: {\r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const {\r\n          filters,\r\n          filterType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.dictType\r\n        const filtersArr =\r\n          typeof filters === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter((item) => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter((item) => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      }\r\n\r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const {\r\n          disableValue,\r\n          disableType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.disableObj\r\n        const disableList =\r\n          typeof disableValue === \"string\"\r\n            ? disableValue.split(\",\")\r\n            : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map((item) => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              !disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map((item) => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n\r\n      this.list = dictData\r\n    },\r\n    // 下拉框点击事件\r\n    handdleChange(val) {\r\n      /* 子组件通过事件发射向父组件传递事件及参数，emit即为发射事件\r\n        第一个参数为向父组件传递的事件名，第二个参数为向父组件传递的参数 */\r\n      this.$emit(\"dictChange\", val)\r\n    },\r\n    getRef() {\r\n      return this.$refs.VanDropdownItemDict\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=00582db7&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanDropdownItemDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanDropdownItemDict.install = function(Vue) {\r\n  Vue.component(vanDropdownItemDict.name, vanDropdownItemDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanDropdownItemDict","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".van-field-dict[data-v-362c2938]{position:relative}.van-field-dict .van-cell.van-field.camouflage[data-v-362c2938]{position:absolute;left:0;top:0;pointer-events:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".van-datetime-dict[data-v-82a429bc] .slot-btn .select{margin-right:14px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import store from \"~/store/index\"\r\nimport {formatDictData} from \"~/utils/index\"\r\n/**\r\n * @description: 通过code获取label\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const GetLabelByCode = (\r\n  val,\r\n  type,\r\n  defaultVal\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { format } = store.state.dictConfig\r\n    const dictList = store.state.dictCodes\r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (\r\n        store.state.isGettingDictTypes.includes(type) ||\r\n        store.state.isGettingAllDictTypes\r\n      ) {\r\n        //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (\r\n            !(\r\n              store.state.isGettingDictTypes.includes(type) ||\r\n              store.state.isGettingAllDictTypes\r\n            )\r\n          ) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetItem = list.find((item) => {\r\n              return item[format.value] === val\r\n            })\r\n            resolve(targetItem ? targetItem[format.label] : (defaultVal??\"\"))\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetItem = list.find((item) => {\r\n            return item[format.value] === val\r\n          })\r\n          resolve(targetItem ? targetItem[format.label] : (defaultVal??\"\"))\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetItem = list.find((item) => {\r\n        return item[format.value] === val\r\n      })\r\n      resolve(targetItem ? targetItem[format.label] : (defaultVal??\"\"))\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description: 通过codes获取labels\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport function GetLabelByCodesDothings(\r\n  values,\r\n  list,\r\n  format,\r\n  defaultVal\r\n) {\r\n  const targetArr = []\r\n  for (let i = 0; i < values.length; i++) {\r\n    const findItem = list.find((item) => {\r\n      return item[format.value] === values[i]\r\n    })\r\n    if (findItem) {\r\n      targetArr.push(findItem)\r\n    } else {\r\n      targetArr.push({\r\n        [format.label]: defaultVal,\r\n        [format.value]: values[i]\r\n      })\r\n    }\r\n  }\r\n  return targetArr\r\n}\r\n\r\nexport const GetLabelByCodes = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr,\r\n      format) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[format.label]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options) \r\n  return new Promise((resolve, reject) => {\r\n    let values = []\r\n    if (Array.isArray(vals)) {\r\n      values = vals\r\n    } else if (typeof vals === \"string\") {\r\n      values = vals.split(defaultOptions.spacer)\r\n    }\r\n\r\n    const { format } = store.state.dictConfig\r\n    const dictList = store.state.dictCodes\r\n\r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (\r\n        store.state.isGettingDictTypes.includes(type) ||\r\n        store.state.isGettingAllDictTypes\r\n      ) {\r\n        //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (\r\n            !(\r\n              store.state.isGettingDictTypes.includes(type) ||\r\n              store.state.isGettingAllDictTypes\r\n            )\r\n          ) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetArr = GetLabelByCodesDothings(\r\n              values,\r\n              list,\r\n              format,\r\n              defaultOptions.defaultVal\r\n            )\r\n            resolve(\r\n              targetArr && targetArr.length > 0\r\n                ? defaultOptions.formatFun(targetArr, format)\r\n                : defaultOptions.defaultVal\r\n            )\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetArr = GetLabelByCodesDothings(\r\n            values,\r\n            list,\r\n            format,\r\n            defaultOptions.defaultVal\r\n          )\r\n          resolve(\r\n            targetArr && targetArr.length > 0\r\n              ? defaultOptions.formatFun(targetArr, format)\r\n              : defaultOptions.defaultVal\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetArr = GetLabelByCodesDothings(\r\n        values,\r\n        list,\r\n        format,\r\n        defaultOptions.defaultVal\r\n      )\r\n      resolve(\r\n        targetArr && targetArr.length > 0\r\n          ? defaultOptions.formatFun(targetArr, format)\r\n          : defaultOptions.defaultVal\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description: 通过label获取code\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const GetCodeByLabel = (\r\n  val,\r\n  type,\r\n  defaultVal\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    const { format } = store.state.dictConfig\r\n    const dictList = store.state.dictCodes\r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (\r\n        store.state.isGettingDictTypes.includes(type) ||\r\n        store.state.isGettingAllDictTypes\r\n      ) {\r\n        //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (\r\n            !(\r\n              store.state.isGettingDictTypes.includes(type) ||\r\n              store.state.isGettingAllDictTypes\r\n            )\r\n          ) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetItem = list.find((item) => {\r\n              return item[format.label] === val\r\n            })\r\n            resolve(targetItem ? targetItem[format.value] : (defaultVal??\"\"))\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetItem = list.find((item) => {\r\n            return item[format.label] === val\r\n          })\r\n          resolve(targetItem ? targetItem[format.value] : (defaultVal??\"\"))\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetItem = list.find((item) => {\r\n        return item[format.label] === val\r\n      })\r\n      resolve(targetItem ? targetItem[format.value] : (defaultVal??\"\"))\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description: 通过labels 获取code\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport function GetCodeByLabelsDothings(\r\n  values,\r\n  list,\r\n  format,\r\n  defaultVal\r\n) {\r\n  const targetArr = []\r\n  for (let i = 0; i < values.length; i++) {\r\n    const findItem = list.find((item) => {\r\n      return item[format.label] === values[i]\r\n    })\r\n    if (findItem) {\r\n      targetArr.push(findItem)\r\n    } else {\r\n      targetArr.push({\r\n        [format.label]: values[i],\r\n        [format.value]: defaultVal\r\n      })\r\n    }\r\n  }\r\n  return targetArr\r\n}\r\n\r\nexport const GetCodeByLabels = (\r\n  vals,\r\n  type,\r\n  options\r\n) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr,\r\n      format) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[format.value]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options) \r\n  return new Promise((resolve, reject) => {\r\n    let values = []\r\n    if (Array.isArray(vals)) {\r\n      values = vals\r\n    } else if (typeof vals === \"string\") {\r\n      values = vals.split(defaultOptions.spacer)\r\n    }\r\n\r\n    const { format } = store.state.dictConfig\r\n    const dictList = store.state.dictCodes\r\n\r\n    let list = []\r\n    //如果没找到此类型的数据\r\n    if (!dictList || !dictList[type]) {\r\n      if (\r\n        store.state.isGettingDictTypes.includes(type) ||\r\n        store.state.isGettingAllDictTypes\r\n      ) {\r\n        //如果有别的地方在请求这个字典类型数据  轮询查看是否请求结束\r\n        const timer = setInterval(() => {\r\n          if (\r\n            !(\r\n              store.state.isGettingDictTypes.includes(type) ||\r\n              store.state.isGettingAllDictTypes\r\n            )\r\n          ) {\r\n            clearInterval(timer)\r\n            list = store.state.dictCodes[type]\r\n            if (!list) {\r\n              reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n              return\r\n            }\r\n            const targetArr = GetCodeByLabelsDothings(\r\n              values,\r\n              list,\r\n              format,\r\n              defaultOptions.defaultVal\r\n            )\r\n            resolve(\r\n              targetArr && targetArr.length > 0\r\n                ? defaultOptions.formatFun(targetArr, format)\r\n                : defaultOptions.defaultVal\r\n            )\r\n          }\r\n        }, 1000)\r\n      } else {\r\n        store.actions.getDictDataObj(type).then((data) => {\r\n          list = data[type]\r\n          if (!list) {\r\n            reject(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n            return\r\n          }\r\n          const targetArr = GetCodeByLabelsDothings(\r\n            values,\r\n            list,\r\n            format,\r\n            defaultOptions.defaultVal\r\n          )\r\n          resolve(\r\n            targetArr && targetArr.length > 0\r\n              ? defaultOptions.formatFun(targetArr, format)\r\n              : defaultOptions.defaultVal\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      list = dictList[type]\r\n      const targetArr = GetCodeByLabelsDothings(\r\n        values,\r\n        list,\r\n        format,\r\n        defaultOptions.defaultVal\r\n      )\r\n      resolve(\r\n        targetArr && targetArr.length > 0\r\n          ? defaultOptions.formatFun(targetArr, format)\r\n          : defaultOptions.defaultVal\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * @description: 通过dictType返回该字典类型数据\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const GetDictObjByDictTypes = (dictTypes) => {\r\n  return new Promise((resolve, reject) => {\r\n    let values = []\r\n    let typeStr = \"\"\r\n    if (Array.isArray(dictTypes)) {\r\n      typeStr = dictTypes.join(\",\")\r\n      values = dictTypes\r\n    } else if (typeof dictTypes === \"string\") {\r\n      values = dictTypes.split(\",\")\r\n    }\r\n\r\n    const dictList = store.state.dictCodes\r\n    const setting = store.state.dictConfig\r\n    //不存在字典值\r\n    if (!dictList) {\r\n      //添加正在请求的字典数据\r\n      store.mutations.ADD_IS_EGTTING_DICT_TYPES(typeStr)\r\n      setting\r\n        .getDictCodeApi(setting.formatterRequest(setting.query, typeStr))\r\n        .then((data) => {\r\n          //去除正在请求的字典数据\r\n          store.mutations.REMOVE_IS_EGTTING_DICT_TYPES(typeStr)\r\n          // 获取到的字典数据\r\n          const dictData = setting.formatterDictList(data, dictTypes)\r\n          // 格式化字典数据\r\n          const resultDictData = formatDictData(dictData, setting.filterDataFun, setting.disabledDataFun)\r\n\r\n          const copyObj = JSON.parse(JSON.stringify(resultDictData))\r\n          const allDictObj = Object.assign(store.state.dictCodes, copyObj)\r\n          setting.storage.setItem(\r\n            setting.dictDataKey,\r\n            JSON.stringify(allDictObj)\r\n          )\r\n          store.mutations.SET_DICT_CODES(allDictObj)\r\n          resolve(resultDictData)\r\n        })\r\n    } else {\r\n      const needGetArr = [] //保留需要请求的字典数组类型\r\n      const haveDictObj = {} //已经有的字典数据类型数据\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (dictList[values[i]]) {\r\n          haveDictObj[values[i]] = dictList[values[i]]\r\n          continue\r\n        }\r\n        needGetArr.push(values[i])\r\n      }\r\n\r\n      if (needGetArr.length > 0) {\r\n        //添加正在请求的字典数据\r\n        store.mutations.ADD_IS_EGTTING_DICT_TYPES(needGetArr.join(\",\"))\r\n        setting\r\n          .getDictCodeApi(\r\n            setting.formatterRequest(setting.query, needGetArr.join(\",\"))\r\n          )\r\n          .then((data) => {\r\n            //去除正在请求的字典数据\r\n            store.mutations.REMOVE_IS_EGTTING_DICT_TYPES(needGetArr.join(\",\"))\r\n            const dictData = setting.formatterDictList(data, dictTypes)\r\n            // 格式化字典数据\r\n            const resultDictData = formatDictData(dictData, setting.filterDataFun, setting.disabledDataFun)\r\n            const copyObj = JSON.parse(JSON.stringify(resultDictData))\r\n            const allDictObj = Object.assign(store.state.dictCodes, copyObj)\r\n            setting.storage.setItem(\r\n              setting.dictDataKey,\r\n              JSON.stringify(allDictObj)\r\n            )\r\n            store.mutations.SET_DICT_CODES(allDictObj)\r\n\r\n            const resolveDict = Object.assign(haveDictObj, dictData)\r\n\r\n            const noDictTypeArr = []\r\n            for (const key in resolveDict) {\r\n              if (!resolveDict[key] || resolveDict[key].length === 0) {\r\n                noDictTypeArr.push(key)\r\n              }\r\n            }\r\n            if (noDictTypeArr.length > 0) {\r\n              reject(\r\n                `不存在类型为：${noDictTypeArr.join(\r\n                  \"、\"\r\n                )} 的字典字段，请确认后再填写`\r\n              )\r\n            }\r\n            resolve(resultDictData)\r\n          })\r\n      } else {\r\n        resolve(haveDictObj)\r\n      }\r\n    }\r\n  })\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-tag',_vm._g(_vm._b({ref:\"VanTagDict\",attrs:{\"type\":_vm.judgeType},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-tag',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)}),_vm._v(\" \"+_vm._s(_vm.GetLabelByCodeFilter(_vm.value, _vm.dictType))+\" \")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-tag ref=\"VanTagDict\" :type=\"judgeType\" v-on=\"$listeners\" v-bind=\"$attrs\">\r\n    <template\r\n      v-for=\"(slot, key) in $scopedSlots\"\r\n      :slot=\"key\"\r\n      slot-scope=\"scope\"\r\n    >\r\n      <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n    </template>\r\n    <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n      <slot :name=\"key\"></slot>\r\n    </template>\r\n    {{GetLabelByCodeFilter(value, dictType)}}\r\n  </van-tag>\r\n</template>\r\n\r\n<script>\r\nimport {GetLabelByCodeFilter} from \"~/filters/dict\"\r\nexport default {\r\n  name: \"van-tabs-dict\",\r\n  props: {\r\n    value: {\r\n      required: true\r\n    },\r\n    dictType: {\r\n      type: [String],\r\n      required: true\r\n    }, //请求的码表值\r\n    judgeTypeFun: {\r\n      type: Function,\r\n      default: () => {\r\n\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"primary\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      GetLabelByCodeFilter\r\n    }\r\n  },\r\n  computed: {\r\n    judgeType() {\r\n      if (!this.judgeTypeFun) {\r\n        return this.type\r\n      }\r\n      return this.judgeTypeFun(this.value) || this.type\r\n    }\r\n  },\r\n  getRef() {\r\n    return this.$refs.VanTagDict\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=866f0ffa&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanTabsDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanTabsDict.install = function(Vue) {\r\n  Vue.component(vanTabsDict.name, vanTabsDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanTabsDict","export default [\r\n  {\r\n    name: \"filters-dict\",\r\n    path: \"/filters/dict\",\r\n    meta: {\r\n      title: \"dictFilters\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"filtersModule\" */ \"@/components/filters/dict\")\r\n  },\r\n  {\r\n    name: \"filters-other\",\r\n    path: \"/filters/other\",\r\n    meta: {\r\n      title: \"otherFilters\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"filtersModule\" */ \"@/components/filters/other\")\r\n  }\r\n]","export default [\r\n  {\r\n    name: \"vanCalendarDict\",\r\n    path: \"/van-calendar-dict\",\r\n    meta: {\r\n      title: \"vanCalendarDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanCalendarDictModule\" */ \"@/components/van-calendar-dict\")\r\n  }\r\n]","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-3-1!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-3-2!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-3-3!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-3-4!./index.less\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5fa051fc\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-3!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=362c2938&prod&lang=less&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0bd6e21d\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".van-cascader-dict[data-v-4c3d54f9] .van-popup .van-cascader .van-cascader__header{padding:0}.van-cascader-dict[data-v-4c3d54f9] .van-popup .van-cascader .van-cascader__header .van-cascader__title{width:100%;display:flex;justify-content:flex-start;align-content:center}.van-cascader-dict[data-v-4c3d54f9] .van-popup .van-cascader .van-cascader__header .van-cascader__title .van-picker__cancel{color:#969799}.van-cascader-dict[data-v-4c3d54f9] .van-popup .van-cascader .van-cascader__header .van-cascader__title .vant_cascader_title{flex-grow:1;text-align:center;font-weight:500;font-size:16px;line-height:20px}.van-cascader-dict[data-v-4c3d54f9] .van-popup .van-cascader .van-cascader__header .van-cascader__title .van-picker__confirm{color:#576b95}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=82a429bc&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"285df05a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var map = {\n\t\"./common/index.js\": \"d8db\",\n\t\"./filters/index.js\": \"6518\",\n\t\"./functions/index.js\": \"3202\",\n\t\"./index.js\": \"ca83\",\n\t\"./van-button-dict/index.js\": \"eb41\",\n\t\"./van-calendar-dict/index.js\": \"6838\",\n\t\"./van-cascader-dict/index.js\": \"f880\",\n\t\"./van-checkbox-dict/index.js\": \"ff41\",\n\t\"./van-datetime-dict/index.js\": \"a70a\",\n\t\"./van-dropdown-item-dict/index.js\": \"e654\",\n\t\"./van-field-dict/index.js\": \"2074\",\n\t\"./van-radio-dict/index.js\": \"a69e\",\n\t\"./van-select-dict/index.js\": \"f814\",\n\t\"./van-tag-dict/index.js\": \"c082\",\n\t\"./van-tree-select-dict/index.js\": \"aaf5\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"899f\";","import store from \"~/store/index\"\r\nimport {\r\n  GetLabelByCodesDothings,\r\n  GetCodeByLabelsDothings\r\n} from \"~/functions/dict\"\r\n/**\r\n * @description: 通过code获取label\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const GetLabelByCodeFilter = (val, type, defaultVal) => {\r\n  const { format } = store.state.dictConfig\r\n  const dictList = store.state.dictCodes\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n        return\r\n      }\r\n      const targetItem = list.find((item) => {\r\n        return item[format.value] === val\r\n      })\r\n      return targetItem ? targetItem[format.label] : defaultVal ?? \"\"\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetItem = list.find((item) => {\r\n      return item[format.value] === val\r\n    })\r\n    return targetItem ? targetItem[format.label] : defaultVal ?? \"\"\r\n  }\r\n}\r\n\r\nexport const GetLabelByCodesFilter = (vals, type, options) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, format) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[format.label]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  let values = []\r\n  if (Array.isArray(vals)) {\r\n    values = vals\r\n  } else if (typeof vals === \"string\") {\r\n    values = vals.split(defaultOptions.spacer)\r\n  }\r\n\r\n  const { format } = store.state.dictConfig\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n        return\r\n      }\r\n      const targetArr = GetLabelByCodesDothings(\r\n        values,\r\n        list,\r\n        format,\r\n        defaultOptions.defaultVal\r\n      )\r\n      return targetArr && targetArr.length > 0\r\n        ? defaultOptions.formatFun(targetArr, format)\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetArr = GetLabelByCodesDothings(\r\n      values,\r\n      list,\r\n      format,\r\n      defaultOptions.defaultVal\r\n    )\r\n    return targetArr && targetArr.length > 0\r\n      ? defaultOptions.formatFun(targetArr, format)\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n\r\n/**\r\n * @description: 通过label获取code\r\n * @param {*}\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const GetCodeByLabelFilter = (val, type, defaultVal) => {\r\n  const { format } = store.state.dictConfig\r\n  const dictList = store.state.dictCodes\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n        return\r\n      }\r\n      const targetItem = list.find((item) => {\r\n        return item[format.label] === val\r\n      })\r\n      return targetItem ? targetItem[format.value] : defaultVal ?? \"\"\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetItem = list.find((item) => {\r\n      return item[format.label] === val\r\n    })\r\n    return targetItem ? targetItem[format.value] : defaultVal ?? \"\"\r\n  }\r\n}\r\n\r\nexport const GetCodeByLabelsFilter = (vals, type, options) => {\r\n  const defaultOptions = {\r\n    defaultVal: \"\",\r\n    formatFun: (arr, format) => {\r\n      return arr\r\n        .map((item) => {\r\n          return item[format.value]\r\n        })\r\n        .join(\",\")\r\n    },\r\n    spacer: \",\"\r\n  }\r\n  Object.assign(defaultOptions, options)\r\n  let values = []\r\n  if (Array.isArray(vals)) {\r\n    values = vals\r\n  } else if (typeof vals === \"string\") {\r\n    values = vals.split(defaultOptions.spacer)\r\n  }\r\n\r\n  const { format } = store.state.dictConfig\r\n  const dictList = store.state.dictCodes\r\n\r\n  let list = []\r\n  //如果没找到此类型的数据\r\n  if (!dictList || !dictList[type]) {\r\n    store.actions.getDictDataObj(type).then((data) => {\r\n      list = data[type]\r\n      if (!list) {\r\n        new Error(`不存在类型为：${type} 的字典字段，请确认后再填写`)\r\n        return\r\n      }\r\n      const targetArr = GetCodeByLabelsDothings(\r\n        values,\r\n        list,\r\n        format,\r\n        defaultOptions.defaultVal\r\n      )\r\n      return targetArr && targetArr.length > 0\r\n        ? defaultOptions.formatFun(targetArr, format)\r\n        : defaultOptions.defaultVal\r\n    })\r\n  } else {\r\n    list = dictList[type]\r\n    const targetArr = GetCodeByLabelsDothings(\r\n      values,\r\n      list,\r\n      format,\r\n      defaultOptions.defaultVal\r\n    )\r\n    return targetArr && targetArr.length > 0\r\n      ? defaultOptions.formatFun(targetArr, format)\r\n      : defaultOptions.defaultVal\r\n  }\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"van-select-dict\"},[_c('van-field',_vm._g(_vm._b({attrs:{\"readonly\":\"\",\"clickable\":\"\",\"value\":_vm.showValue,\"is-link\":\"\"},on:{\"click\":_vm.handleClick}},'van-field',_vm.$attrs,false),_vm.$listeners)),_c('van-popup',{attrs:{\"round\":\"\",\"position\":\"bottom\"},model:{value:(_vm.showPicker),callback:function ($$v) {_vm.showPicker=$$v},expression:\"showPicker\"}},[_c('van-picker',_vm._g(_vm._b({ref:\"selectPicker\",attrs:{\"show-toolbar\":\"\",\"value-key\":_vm.dictConfig.format.label,\"columns\":_vm.list},on:{\"cancel\":function($event){_vm.showPicker = false},\"confirm\":_vm.onConfirm}},'van-picker',_vm.$attrs,false),_vm.$listeners))],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"van-select-dict\">\r\n    <van-field\r\n      v-on=\"$listeners\"\r\n      v-bind=\"$attrs\"\r\n      readonly\r\n      clickable\r\n      :value=\"showValue\"\r\n      is-link\r\n      @click=\"handleClick\"\r\n    />\r\n    <van-popup v-model=\"showPicker\" round position=\"bottom\">\r\n      <van-picker\r\n        ref=\"selectPicker\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"$attrs\"\r\n        show-toolbar\r\n        :value-key=\"dictConfig.format.label\"\r\n        :columns=\"list\"\r\n        @cancel=\"showPicker = false\"\r\n        @confirm=\"onConfirm\"\r\n      />\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nexport default {\r\n  name: \"van-select-dict\",\r\n  data() {\r\n    return {\r\n      defaultIndex: \"0\",\r\n      showPicker: false,\r\n      list: [], //数据列表\r\n      svalue: this.value,\r\n      type: \"\" //请求字典类型\r\n    }\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    //格式化数据\r\n    format: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          label: \"label\",\r\n          value: \"value\"\r\n        }\r\n      }\r\n    },\r\n    //是否返回键值\r\n    keyValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    value: {}, //接受外部v-model传入的值\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    },\r\n    selectItem() {\r\n      return this.list.find(item => {\r\n        return item[this.dictConfig.format.value] === this.svalue\r\n      })\r\n    },\r\n    //展示的值\r\n    showValue() {\r\n      return this.selectItem\r\n        ? this.selectItem[this.dictConfig.format.label]\r\n        : \"\"\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type) && this.data && this.data.length === 0) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val && this.data && this.data.length === 0) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val //②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val) //③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    },\r\n    showPicker(val) {\r\n      const index = this.list\r\n        .map(item => item[this.dictConfig.format.value])\r\n        .indexOf(this.svalue)\r\n      this.defaultIndex = index === -1 ? 0 : index\r\n      this.$nextTick(() => {\r\n        this.$refs.selectPicker.setColumnIndex(0, this.defaultIndex)\r\n      })\r\n    },\r\n    data: {\r\n      handler: function(val) {\r\n        this.list = JSON.parse(JSON.stringify(val))\r\n        if (this.list.length > 0 && this.list[0][this.format.value]) {\r\n          this.list = this.list.map(item => {\r\n            return {\r\n              [this.dictConfig.format.value]: item[this.format.value],\r\n              [this.dictConfig.format.label]: item[this.format.label]\r\n            }\r\n          })\r\n        } else {\r\n          this.list = this.list.map(item => {\r\n            return {\r\n              [this.dictConfig.format.value]: item,\r\n              [this.dictConfig.format.label]: item\r\n            }\r\n          })\r\n        }\r\n        \r\n        if (!(this.$attrs.required === true || this.$attrs.required === \"\")) {\r\n          this.list.unshift({\r\n            [this.dictConfig.format.value]: \"null\",\r\n            [this.dictConfig.format.label]: \"请选择\"\r\n          })\r\n        }\r\n      },\r\n      immediate: true      \r\n    }\r\n  },\r\n  mounted() {\r\n    // this.svalue=this.value;//初始话下拉框的值\r\n    if (this.data&&this.data.length === 0) {\r\n      this.getDictionary_option()\r\n    }\r\n  },\r\n  methods: {\r\n    getRef() {\r\n      return this.$refs.selectPicker\r\n    },\r\n    //点击事件\r\n    handleClick() {\r\n      if (this.$attrs.disabled === true || this.$attrs.disabled === \"\") {\r\n        return\r\n      }\r\n      this.showPicker = true\r\n    },\r\n    //点击确定\r\n    onConfirm(value) {\r\n      this.svalue =\r\n        value[this.dictConfig.format.value] === \"null\"\r\n          ? \"\"\r\n          : value[this.dictConfig.format.value]\r\n      this.showPicker = false\r\n      if (!this.keyValue) {\r\n        this.$emit(\"dictChange\", this.svalue)\r\n      } else {\r\n        const dictObj =\r\n          value[this.dictConfig.format.value] === \"null\"\r\n            ? {\r\n              [this.dictConfig.format.value]: \"\",\r\n              [this.dictConfig.format.label]: \"\"\r\n            }\r\n            : value\r\n        this.$emit(\"dictChange\", dictObj)\r\n      }\r\n    },\r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType || (this.data && this.data.length > 0)) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const {\r\n          filters,\r\n          filterType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.dictType\r\n        const filtersArr =\r\n          typeof filters === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter(item => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter(item => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      }\r\n\r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const {\r\n          disableValue,\r\n          disableType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.disableObj\r\n        const disableList =\r\n          typeof disableValue === \"string\"\r\n            ? disableValue.split(\",\")\r\n            : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              !disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n\r\n      this.list = dictData\r\n      if (!(this.$attrs.required === true || this.$attrs.required === \"\")) {\r\n        this.list.unshift({\r\n          [this.dictConfig.format.value]: \"null\",\r\n          [this.dictConfig.format.label]: \"请选择\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=42e36e51&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanSelectDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanSelectDict.install = function(Vue) {\r\n  Vue.component(vanSelectDict.name, vanSelectDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanSelectDict","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"van-datetime-dict\"},[_c('van-field',_vm._g(_vm._b({attrs:{\"type\":\"text\",\"readonly\":\"\",\"clickable\":\"\",\"value\":_vm.showValue,\"is-link\":\"\"},on:{\"click\":_vm.handleClick},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-field',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)})],2),_c('van-popup',{attrs:{\"round\":\"\",\"position\":\"bottom\"},model:{value:(_vm.showPicker),callback:function ($$v) {_vm.showPicker=$$v},expression:\"showPicker\"}},[_c('van-datetime-picker',_vm._b({ref:\"datetimePicker\",on:{\"change\":_vm.handleChange,\"cancel\":_vm.handleCancel,\"confirm\":_vm.onConfirm},scopedSlots:_vm._u([{key:\"confirm\",fn:function(){return [_c('div',{staticClass:\"slot-btn\"},[(_vm.showForver)?_c('span',{staticClass:\"select\",on:{\"click\":function($event){$event.stopPropagation();return _vm.forever.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.showValueLabel))]):_vm._e(),_c('span',[_vm._v(_vm._s(_vm.$attrs.confirmButtonText || \"确认\"))])])]},proxy:true}]),model:{value:(_vm.currentDate),callback:function ($$v) {_vm.currentDate=$$v},expression:\"currentDate\"}},'van-datetime-picker',_vm.$attrs,false))],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"van-datetime-dict\">\r\n    <van-field\r\n      v-on=\"$listeners\"\r\n      type=\"text\"\r\n      v-bind=\"$attrs\"\r\n      readonly\r\n      clickable\r\n      :value=\"showValue\"\r\n      is-link\r\n      @click=\"handleClick\"\r\n    >\r\n      <template\r\n        v-for=\"(slot, key) in $scopedSlots\"\r\n        :slot=\"key\"\r\n        slot-scope=\"scope\"\r\n      >\r\n        <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n      </template>\r\n      <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n        <slot :name=\"key\"></slot>\r\n      </template>\r\n    </van-field>\r\n    <van-popup v-model=\"showPicker\" round position=\"bottom\">\r\n      <van-datetime-picker\r\n        ref=\"datetimePicker\"\r\n        v-model=\"currentDate\"\r\n        v-bind=\"$attrs\"\r\n        @change=\"handleChange\"\r\n        @cancel=\"handleCancel\"\r\n        @confirm=\"onConfirm\"\r\n      >\r\n        <template v-slot:confirm>\r\n          <div class=\"slot-btn\">\r\n            <span v-if=\"showForver\" class=\"select\" @click.stop=\"forever\">{{\r\n              showValueLabel\r\n            }}</span\r\n            ><span>{{ $attrs.confirmButtonText || \"确认\" }}</span>\r\n          </div>\r\n        </template>\r\n      </van-datetime-picker>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { FormatDate, IsDate } from \"~/functions/date-format\"\r\nexport default {\r\n  name: \"van-datetime-dict\",\r\n  data() {\r\n    return {\r\n      showValue: \"\",\r\n      showPicker: false,\r\n      svalue: this.value,\r\n      currentDate: null,\r\n      indexs: null\r\n    }\r\n  },\r\n  props: {\r\n    showValueLabel: {\r\n      type: String,\r\n      default: \"永久\"\r\n    },\r\n    forverValue: {\r\n      default: \"forver\"\r\n    },\r\n    //是否展示永久按钮\r\n    showForver: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //日期过滤格式\r\n    dateFormat: {\r\n      type: String\r\n    },\r\n    //默认值\r\n    defaultVal: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    value: {} //接受外部v-model传入的值\r\n  },\r\n  computed: {},\r\n  watch: {\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val //②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val) //③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    },\r\n    showPicker(val) {\r\n      if (this.indexs) {\r\n        this.$nextTick(() => {\r\n          this.$refs.datetimePicker.getPicker().setIndexes(this.indexs)\r\n        })\r\n        return\r\n      }\r\n      if (val) {\r\n        this.$nextTick(() => {\r\n          setTimeout(() => {\r\n            this.indexs = this.$refs.datetimePicker.getPicker().getIndexes()\r\n          }, 100)\r\n        })\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.showForver && this.value === this.forverValue) {\r\n      this.showValue = this.showValueLabel\r\n    } else {\r\n      // 赋值\r\n      if (this.value) {\r\n        if (!IsDate(this.value)) {\r\n          this.showValue = this.defaultVal\r\n          return\r\n        }\r\n        if (this.$attrs.type === \"time\") {\r\n          this.currentDate = this.value\r\n        } else if (this.$attrs.type === \"month-day\") {\r\n          const date = (new Date().getFullYear() + \"-\" + this.value).replace(\r\n            /-|\\./g,\r\n            \"/\"\r\n          )\r\n          this.currentDate = new Date(date)\r\n        } else if (this.$attrs.type === \"datehour\") {\r\n          const date = (this.value + \":00:00\").replace(/-|\\./g, \"/\")\r\n          this.currentDate = new Date(date)\r\n        } else {\r\n          const date = this.value.replace(/-|\\./g, \"/\")\r\n          this.currentDate = new Date(date)\r\n        }\r\n\r\n        this.formatValue(this.currentDate)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getRef() {\r\n      return this.$refs.datetimePicker\r\n    },\r\n    handleChange(value) {\r\n      this.$emit(\"change\", value)\r\n    },\r\n    //取消\r\n    handleCancel() {\r\n      this.showPicker = false\r\n      this.$emit(\"cancel\")\r\n    },\r\n    //点击事件\r\n    handleClick() {\r\n      if (this.$attrs.disabled === true || this.$attrs.disabled === \"\") {\r\n        return\r\n      }\r\n      this.showPicker = true\r\n    },\r\n    formatValue(value) {\r\n      const dateObj = {\r\n        \"date\": \"date\",\r\n        \"year-month\": \"month\",\r\n        \"month-day\": \"MM-dd\",\r\n        \"datehour\": \"yyyy-MM-dd hh\"\r\n      }\r\n      if (this.$attrs.type === \"time\") {\r\n        this.svalue = value\r\n      } else {\r\n        const dateFormat =\r\n          this.dateFormat || dateObj[this.$attrs.type] || \"datetime\"\r\n        this.svalue = FormatDate(value, dateFormat, this.defaultVal)\r\n      }\r\n      this.showValue = this.svalue\r\n    },\r\n    //点击确定\r\n    onConfirm(value) {\r\n      this.formatValue(value)\r\n      this.indexs = this.$refs.datetimePicker.getPicker().getIndexes()\r\n      this.showPicker = false\r\n      this.$emit(\"dictChange\", value)\r\n      this.$emit(\"confirm\", value)\r\n    },\r\n    forever() {\r\n      this.svalue = this.forverValue\r\n      this.showValue = this.showValueLabel\r\n      this.showPicker = false\r\n      this.$emit(\"forver\", this.forverValue)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.van-datetime-dict ::v-deep .slot-btn .select {\r\n  margin-right: 14px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=82a429bc&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=82a429bc&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"82a429bc\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanDatetimeDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanDatetimeDict.install = function(Vue) {\r\n  Vue.component(vanDatetimeDict.name, vanDatetimeDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanDatetimeDict","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-tree-select',_vm._g(_vm._b({ref:\"VantTreeSelectDict\",attrs:{\"main-active-index\":_vm.currentMainActiveIndex,\"activeId\":_vm.currentActiveId,\"items\":_vm.items},on:{\"update:mainActiveIndex\":function($event){_vm.currentMainActiveIndex=$event},\"update:main-active-index\":function($event){_vm.currentMainActiveIndex=$event},\"update:activeId\":function($event){_vm.currentActiveId=$event},\"update:active-id\":function($event){_vm.currentActiveId=$event}},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-tree-select',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-tree-select ref=\"VantTreeSelectDict\" v-on=\"$listeners\" v-bind=\"$attrs\" :main-active-index.sync=\"currentMainActiveIndex\" :activeId.sync=\"currentActiveId\" :items=\"items\">\r\n    <template\r\n      v-for=\"(slot, key) in $scopedSlots\"\r\n      :slot=\"key\"\r\n      slot-scope=\"scope\"\r\n    >\r\n      <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n    </template>\r\n    <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n      <slot :name=\"key\"></slot>\r\n    </template>\r\n  </van-tree-select>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nimport {ListToTree} from \"~/functions/list-tree.js\"\r\nexport default {\r\n  name: \"van-tree-select-dict\",\r\n  data() {\r\n    return {\r\n      list: [], //数据列表\r\n      type: \"\", //请求字典类型\r\n      currentMainActiveIndex: this.mainActiveIndex,\r\n      currentActiveId: this.activeId\r\n    }\r\n  },\r\n  props: {\r\n    mainActiveIndex: {},\r\n    activeId: {},\r\n    //最大层级\r\n    maxLevel: {\r\n      type: [Number, String],\r\n      default: \"2\"\r\n    },\r\n    // 树形数据\r\n    treeData: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    },\r\n    endTreeSetting() {\r\n      const props = this.$attrs.fieldNames??{}\r\n      const newProps = {\r\n        idField: props.value??this.dictConfig.treeSetting.idField,\r\n        labelField: props.text??this.dictConfig.treeSetting.labelField,\r\n        childrenField: props.children??this.dictConfig.treeSetting.childrenField\r\n      }\r\n      const treeSetting = Object.assign(this.dictConfig.treeSetting, newProps)\r\n      return treeSetting\r\n    },\r\n    items() {\r\n      if (this.treeData.length > 0) {\r\n        return this.treeData\r\n      }\r\n\r\n      const treeSetting = this.dictConfig.treeSetting\r\n      const treeList = this.list.map(item => {\r\n        return {\r\n          id: item[treeSetting.idField],\r\n          text: item[treeSetting.labelField],\r\n          ...item\r\n        }\r\n      })\r\n      const newTreeSetting = {...treeSetting}\r\n      newTreeSetting.idField = \"id\"\r\n      newTreeSetting.labelField = \"text\"\r\n      const allAllTreeData = ListToTree(treeList, newTreeSetting)\r\n      const treeArr = JSON.parse(JSON.stringify(allAllTreeData))\r\n      if (this.maxLevel) {\r\n        this.filterLevel(treeArr, +this.maxLevel)\r\n      }\r\n      return treeArr || []\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type) && this.treeData.length === 0) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val && this.treeData.length === 0) {\r\n        this.getDictionary_option() \r\n      }\r\n    },\r\n    // activeId 改变事件\r\n    currentActiveId(val) {\r\n      this.$emit(\"update: activeId\", val)\r\n    },\r\n    // mainActiveIndex 改变事件\r\n    currentMainActiveIndex(val) {\r\n      this.$emit(\"update: mainActiveIndex\", val)\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.treeData.length === 0) {\r\n      this.getDictionary_option()\r\n    }\r\n  },\r\n  methods: {\r\n    getRef() {\r\n      return this.$refs.VantTreeSelectDict\r\n    },\r\n    //过滤层级\r\n    filterLevel(arr, maxLevel) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const item = arr[i]\r\n        const currentLevel = item[this.endTreeSetting.levelField]\r\n        if (currentLevel === maxLevel) {\r\n          delete item[this.endTreeSetting.childrenField]\r\n          continue\r\n        } else {\r\n          item[this.endTreeSetting.childrenField]&&this.filterLevel(item[this.endTreeSetting.childrenField], maxLevel)\r\n        }\r\n      }\r\n    },\r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const { filters, filterType = this.endTreeSetting.idField, reverse = false } = this.dictType\r\n        const filtersArr = typeof (filters) === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter(item => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter(item => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      }\r\n      \r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const { disableValue, disableType = this.endTreeSetting.idField, reverse = false } = this.disableObj\r\n        const disableList = typeof (disableValue) === \"string\" ? disableValue.split(\",\") : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled = !disableList.includes(targetItem[disableType]) || targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled = disableList.includes(targetItem[disableType]) || targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n\r\n      this.list = dictData\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=25064986&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"25064986\",\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanTreeSelectDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanTreeSelectDict.install = function(Vue) {\r\n  Vue.component(vanTreeSelectDict.name, vanTreeSelectDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanTreeSelectDict","export default [\r\n  {\r\n    name: \"vanRadioDict\",\r\n    path: \"/van-radio-dict\",\r\n    meta: {\r\n      title: \"vanRadioDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanRadioDictModule\" */ \"@/components/van-radio-dict\")\r\n  }\r\n]","export default [\r\n  {\r\n    name: \"vanDatetimeDict\",\r\n    path: \"/van-datetime-dict\",\r\n    meta: {\r\n      title: \"vanDatetimeDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanDatetimeDictModule\" */ \"@/components/van-datetime-dict\")\r\n  }\r\n]","const DEFAULT_FORMATS = {\r\n  date: \"yyyy-MM-dd\",\r\n  month: \"yyyy-MM\",\r\n  datetime: \"yyyy-MM-dd hh:mm:ss\",\r\n  time: \"hh:mm:ss\",\r\n  year: \"yyyy\"\r\n}\r\n\r\n// 判断是否是日期格式\r\nexport const IsDate = (str) => {\r\n  str = str.replace(\"-\", \"/\")\r\n  var date = new Date(str)\r\n  return !isNaN(date.getTime())\r\n}\r\n\r\n// 日期格式化\r\nexport const FormatDate = (date, format = \"datetime\", defaultVal) => {\r\n\r\n  if (!date || !format) { return defaultVal??\"\" }\r\n  \r\n  if (Object.keys(DEFAULT_FORMATS).includes(format)) {\r\n    const newFormat = format\r\n    format = DEFAULT_FORMATS[newFormat]\r\n  }\r\n  \r\n  if (!(date instanceof Date)) {\r\n    if (typeof date === \"number\" || IsDate(date)) { date = new Date(date) } else { date = new Date(Number(date)) }\r\n  }\r\n  \r\n  const o = {\r\n    \"M+\": date.getMonth() + 1,\r\n    \"d+\": date.getDate(),\r\n    \"h+\": date.getHours(),\r\n    \"m+\": date.getMinutes(),\r\n    \"s+\": date.getSeconds(),\r\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\r\n    S: date.getMilliseconds()\r\n  }\r\n  \r\n  if (/(y+)/.test(format)) {\r\n    format = format.replace(RegExp.$1, String(date.getFullYear()).substr(4 - RegExp.$1.length))\r\n  }\r\n  \r\n  for (const k in o) {\r\n    const reg = new RegExp(`(${k})`)\r\n    if (reg.test(format)) {\r\n      format = format.replace(reg, (RegExp.$1.length === 1) ? o[k] : (\"00\" + o[k]).substr(String(o[k]).length))\r\n    }\r\n  }\r\n\r\n  return format\r\n}","export default [\r\n  {\r\n    name: \"vanTreeSelectDict\",\r\n    path: \"/van-tree-select-dict\",\r\n    meta: {\r\n      title: \"vanTreeSelectDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanTreeSelectDictModule\" */ \"@/components/van-tree-select-dict\")\r\n  }\r\n]","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=82a429bc&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-radio-group',_vm._g(_vm._b({on:{\"change\":_vm.handdleChange},model:{value:(_vm.svalue),callback:function ($$v) {_vm.svalue=$$v},expression:\"svalue\"}},'van-radio-group',_vm.$attrs,false),_vm.$listeners),_vm._l((_vm.list),function(item){return _c('van-radio',_vm._g(_vm._b({key:item[_vm.dictConfig.format.value],attrs:{\"disabled\":item.disabled,\"name\":item[_vm.dictConfig.format.value],\"label\":item[_vm.dictConfig.format.value]}},'van-radio',_vm.$attrs,false),_vm.$listeners),[_vm._v(_vm._s(item[_vm.dictConfig.format.label]))])}),1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-radio-group v-model=\"svalue\" v-on=\"$listeners\" v-bind=\"$attrs\" @change=\"handdleChange\">\r\n    <van-radio\r\n      v-for=\"item in list\"\r\n      v-on=\"$listeners\"\r\n      v-bind=\"$attrs\"\r\n      :disabled=\"item.disabled\"\r\n      :name=\"item[dictConfig.format.value]\"\r\n      :key=\"item[dictConfig.format.value]\"\r\n      :label=\"item[dictConfig.format.value]\"\r\n    >{{item[dictConfig.format.label]}}</van-radio>\r\n  </van-radio-group>\r\n</template>\r\n<script>\r\nimport store from \"~/store/index.js\"\r\nexport default {\r\n  name: \"van-radio-dict\",\r\n  data() {\r\n    return {\r\n      list: [], //数据列表\r\n      svalue: this.value,\r\n      type: \"\" //请求字典类型\r\n    }\r\n  },\r\n  props: {\r\n    //是否返回键值\r\n    keyValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dictType: {\r\n      type: [String, Object]\r\n    }, //请求的码表值\r\n    value: {}, //接受外部v-model传入的值\r\n    //配置禁用选项\r\n    disableObj: {\r\n      type: Object\r\n    },\r\n    //过滤函数\r\n    filterDataFun: {\r\n      type: Function\r\n    },\r\n    //禁用函数\r\n    disabledDataFun: {\r\n      type: Function\r\n    }\r\n  },\r\n  computed: {\r\n    dictCodes() {\r\n      return store.state.dictCodes\r\n    },\r\n    dictConfig() {\r\n      return store.state.dictConfig\r\n    },\r\n    isGettingAllDictTypes() {\r\n      return store.state.isGettingAllDictTypes\r\n    },\r\n    isGettingDictTypes() {\r\n      return store.state.isGettingDictTypes\r\n    }\r\n  },\r\n  watch: {\r\n    isGettingDictTypes(val) {\r\n      if (!val.includes(this.type)) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //请求全部字典后 重新渲染页面\r\n    isGettingAllDictTypes(val) {\r\n      if (!val) {\r\n        this.getDictionary_option()\r\n      }\r\n    },\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val //②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val) //③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.svalue=this.value;//初始话下拉框的值\r\n    this.getDictionary_option()\r\n  },\r\n  methods: {\r\n    // 获取下拉框数据\r\n    async getDictionary_option() {\r\n      if (!this.dictType) {\r\n        return\r\n      }\r\n      //获取该类型字典数据\r\n      let dictData = []\r\n      if (typeof this.dictType === \"object\") {\r\n        this.type = this.dictType.type\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n        const {\r\n          filters,\r\n          filterType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.dictType\r\n        const filtersArr =\r\n          typeof filters === \"string\" ? filters.split(\",\") : filters\r\n        if (reverse) {\r\n          dictData = dictData.filter(item => {\r\n            return !filtersArr.includes(item[filterType])\r\n          })\r\n        } else {\r\n          dictData = dictData.filter(item => {\r\n            return filtersArr.includes(item[filterType])\r\n          })\r\n        }\r\n      } else {\r\n        this.type = this.dictType\r\n        await store.actions.getDictDataObj(this.type)\r\n        dictData = [].concat(this.dictCodes[this.type])\r\n      }\r\n\r\n      //使用函数过滤数据\r\n      if (this.filterDataFun) {\r\n        dictData = this.filterDataFun(dictData)\r\n      }\r\n      \r\n      //使用函数禁用数据\r\n      if (this.disabledDataFun) {\r\n        dictData = this.disabledDataFun(dictData)\r\n      }\r\n\r\n      if (this.disableObj) {\r\n        const {\r\n          disableValue,\r\n          disableType = this.dictConfig.format.value,\r\n          reverse = false\r\n        } = this.disableObj\r\n        const disableList =\r\n          typeof disableValue === \"string\"\r\n            ? disableValue.split(\",\")\r\n            : disableValue\r\n        if (reverse) {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              !disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        } else {\r\n          dictData = dictData.map(item => {\r\n            const targetItem = JSON.parse(JSON.stringify(item))\r\n            targetItem.disabled =\r\n              disableList.includes(targetItem[disableType]) ||\r\n              targetItem.disabled\r\n            return targetItem\r\n          })\r\n        }\r\n      }\r\n      this.list = dictData\r\n    },\r\n    // 下拉框点击事件\r\n    handdleChange() {\r\n      /* 子组件通过事件发射向父组件传递事件及参数，emit即为发射事件\r\n        第一个参数为向父组件传递的事件名，第二个参数为向父组件传递的参数 */\r\n      if (!this.keyValue) {\r\n        this.$emit(\"dictChange\", this.svalue)\r\n        return\r\n      }\r\n      this.$emit(\r\n        \"dictChange\",\r\n        this.list.find(item => {\r\n          return item[this.dictConfig.format.value] === this.svalue\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=165cbce5&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanRadioDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanRadioDict.install = function(Vue) {\r\n  Vue.component(vanRadioDict.name, vanRadioDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanRadioDict","export default [\r\n  {\r\n    name: \"vanTagDict\",\r\n    path: \"/van-tag-dict\",\r\n    meta: {\r\n      title: \"vanTagDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanTagDictModule\" */ \"@/components/van-tag-dict\")\r\n  }\r\n]","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-3-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-3-3!./index.css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2485fd8b\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"app\"\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=fca9f30e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*\r\n * @Description: 演示或维护页面切换\r\n * @Version: 0.1\r\n * @Autor: Chenyt\r\n */\r\n\r\nfunction beforeEachHandler(to, from, next) {\r\n  next()\r\n}\r\nexport {\r\n  beforeEachHandler\r\n}\r\n","/*\r\n * @Description: 路由跳转设置浏览器title\r\n * @Version: 0.1\r\n * @Autor: Chenyt\r\n */\r\nfunction setTitle(title) {\r\n  document.title = title\r\n  document.head.querySelector(\"title\").innerText = title\r\n}\r\n\r\nfunction afterEachHandler(to, from) {\r\n  let { title } = to.meta\r\n  title || (title = to.name)\r\n  if (title) {\r\n    setTitle(title)\r\n  }\r\n}\r\n\r\nexport default afterEachHandler\r\n\r\n","export function getDictCodeApi(options) {\r\n  console.log(\"🚀 ~ file: common-api.js ~ line 3 ~ getDictCodeApi ~ options\", options)\r\n  var promise = new Promise(function(resolve) {\r\n    const dictCodeList = {\r\n      \"FRUITS\": [\r\n        {\r\n          \"value\": \"1\",\r\n          \"label\": \"西瓜\",\r\n          \"id\": \"1\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"2\",\r\n          \"label\": \"草莓\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"3\",\r\n          \"label\": \"莲雾\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"4\",\r\n          \"label\": \"荔枝\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"5\",\r\n          \"label\": \"青梅\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"6\",\r\n          \"label\": \"芒果\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"7\",\r\n          \"label\": \"火龙果\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"8\",\r\n          \"label\": \"山竹\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"9\",\r\n          \"label\": \"橙子\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        },\r\n        {\r\n          \"value\": \"10\",\r\n          \"label\": \"人参果\",\r\n          \"id\": \"2\",\r\n          \"parentId\": \"0\"\r\n        }\r\n      ],\r\n      \"SPORTS\": [\r\n        {\r\n          \"value\": \"1\",\r\n          \"label\": \"篮球\"\r\n        },\r\n        {\r\n          \"value\": \"2\",\r\n          \"label\": \"足球\"\r\n        },\r\n        {\r\n          \"value\": \"3\",\r\n          \"label\": \"乒乓球\"\r\n        },\r\n        {\r\n          \"value\": \"4\",\r\n          \"label\": \"羽毛球\"\r\n        },\r\n        {\r\n          \"value\": \"5\",\r\n          \"label\": \"网球\"\r\n        },\r\n        {\r\n          \"value\": \"6\",\r\n          \"label\": \"保龄球\"\r\n        },\r\n        {\r\n          \"value\": \"7\",\r\n          \"label\": \"水球\"\r\n        },\r\n        {\r\n          \"value\": \"8\",\r\n          \"label\": \"台球\"\r\n        },\r\n        {\r\n          \"value\": \"9\",\r\n          \"label\": \"跑步\"\r\n        },\r\n        {\r\n          \"value\": \"10\",\r\n          \"label\": \"游泳\"\r\n        }\r\n      ],\r\n      \"AAC004\": [{\r\n        \"value\": \"1\",\r\n        \"label\": \"男\"\r\n      }, {\r\n        \"value\": \"2\",\r\n        \"label\": \"女\"\r\n      }, {\r\n        \"value\": \"9\",\r\n        \"label\": \"未说明性别\"\r\n      }],\r\n      \"STATUSHIERARCHY\": [{\r\n        \"value\": \"5\",\r\n        \"label\": \"Lv5认证\"\r\n      }, {\r\n        \"value\": \"4\",\r\n        \"label\": \"Lv4认证\"\r\n      }, {\r\n        \"value\": \"3\",\r\n        \"label\": \"Lv3认证\"\r\n      }, {\r\n        \"value\": \"2\",\r\n        \"label\": \"Lv2认证\"\r\n      }, {\r\n        \"value\": \"1\",\r\n        \"label\": \"LV1认证\"\r\n      }],\r\n      \"AAC058\": [{\r\n        \"value\": \"01\",\r\n        \"label\": \"居民身份证(户口簿)\"\r\n      }, {\r\n        \"value\": \"02\",\r\n        \"label\": \"中国人民解放军军官证\"\r\n      }, {\r\n        \"value\": \"03\",\r\n        \"label\": \"中国人民武装警察警官证\"\r\n      }, {\r\n        \"value\": \"04\",\r\n        \"label\": \"香港特区护照/港澳居民来往内地通行证\"\r\n      }, {\r\n        \"value\": \"05\",\r\n        \"label\": \"澳门特区护照/港澳居民来往内地通行证\"\r\n      }, {\r\n        \"value\": \"06\",\r\n        \"label\": \"台湾居民来往大陆通行证\"\r\n      }, {\r\n        \"value\": \"07\",\r\n        \"label\": \"外国人永久居留证\"\r\n      }, {\r\n        \"value\": \"08\",\r\n        \"label\": \"外国人护照\"\r\n      }, {\r\n        \"value\": \"09\",\r\n        \"label\": \"残疾人证\"\r\n      }, {\r\n        \"value\": \"10\",\r\n        \"label\": \"军烈属证明\"\r\n      }, {\r\n        \"value\": \"11\",\r\n        \"label\": \"外国人就业证\"\r\n      }, {\r\n        \"value\": \"12\",\r\n        \"label\": \"外国专家证\"\r\n      }, {\r\n        \"value\": \"13\",\r\n        \"label\": \"外国人常驻记者证\"\r\n      }, {\r\n        \"value\": \"14\",\r\n        \"label\": \"台港澳人员就业证\"\r\n      }, {\r\n        \"value\": \"15\",\r\n        \"label\": \"回国(来华)定居专家证\"\r\n      }, {\r\n        \"value\": \"16\",\r\n        \"label\": \"港澳台居民居住证\"\r\n      }, {\r\n        \"value\": \"90\",\r\n        \"label\": \"社会保障卡\"\r\n      }, {\r\n        \"value\": \"91\",\r\n        \"label\": \"中国护照号码\"\r\n      }, {\r\n        \"value\": \"99\",\r\n        \"label\": \"其他身份证件\"\r\n      }],\r\n      \"AAC005\": [{\r\n        \"value\": \"01\",\r\n        \"label\": \"汉族\"\r\n      }, {\r\n        \"value\": \"02\",\r\n        \"label\": \"蒙古族\"\r\n      }, {\r\n        \"value\": \"20\",\r\n        \"label\": \"傈傈族\"\r\n      }, {\r\n        \"value\": \"4\",\r\n        \"label\": \"停用\"\r\n      }, {\r\n        \"value\": \"5\",\r\n        \"label\": \"冻结\"\r\n      }, {\r\n        \"value\": \"9\",\r\n        \"label\": \"注销\"\r\n      }],\r\n      \"LEGAL_STATUS\": [{\r\n        \"value\": \"000\",\r\n        \"label\": \"锁定\"\r\n      }, {\r\n        \"value\": \"001\",\r\n        \"label\": \"正常\"\r\n      }],\r\n      \"PERSON_TYPE\": [{\r\n        \"value\": \"005\",\r\n        \"label\": \"民营企业代表\"\r\n      }, {\r\n        \"value\": \"004\",\r\n        \"label\": \"个体工商户\"\r\n      }, {\r\n        \"value\": \"003\",\r\n        \"label\": \"机关事业单位法人\"\r\n      }, {\r\n        \"value\": \"002\",\r\n        \"label\": \"社团法人\"\r\n      }, {\r\n        \"value\": \"001\",\r\n        \"label\": \"企业法人\"\r\n      }],\r\n      \"UNIT_TYPE\": [{\r\n        \"value\": \"3\",\r\n        \"label\": \"地税编号\"\r\n      }, {\r\n        \"value\": \"2\",\r\n        \"label\": \"统一信用代码\"\r\n      }, {\r\n        \"value\": \"1\",\r\n        \"label\": \"组织机构代码\"\r\n      }],\r\n      \"MCC_TYPE\": [{\r\n        \"value\": \"1\",\r\n        \"label\": \"农,林,牧,渔业\"\r\n      }, {\r\n        \"value\": \"10\",\r\n        \"label\": \"金融业\"\r\n      }, {\r\n        \"value\": \"11\",\r\n        \"label\": \"房地产业\"\r\n      }, {\r\n        \"value\": \"12\",\r\n        \"label\": \"租赁和商务服务业\"\r\n      }, {\r\n        \"value\": \"13\",\r\n        \"label\": \"科学研究、技术服务和地质勘查业\"\r\n      }, {\r\n        \"value\": \"14\",\r\n        \"label\": \"水利、环境和公共设施管理业\"\r\n      }],\r\n      \"UNIT_STATUS\": [{\r\n        \"value\": \"000\",\r\n        \"label\": \"注销\"\r\n      }, {\r\n        \"value\": \"001\",\r\n        \"label\": \"正常\"\r\n      }]\r\n    }\r\n\r\n    let codeData = {}\r\n    if (options&&options.type) {\r\n      const typeList = options.type.split(\",\")\r\n      for (let i = 0; i < typeList.length; i++) {\r\n        const type = typeList[i]\r\n        codeData[type] = dictCodeList[type]\r\n      }\r\n    } else {\r\n      codeData = dictCodeList\r\n    }\r\n    const data = {\r\n      \"code\": 0,\r\n      \"data\": {\r\n        dictData: codeData,\r\n        version: \"0.0.2\"\r\n      },\r\n      message: \"成功\",\r\n      timestamp: \"1594565635\",\r\n      type: \"info\"\r\n    }\r\n    setTimeout(() => { resolve(data.data) }, 1000)\r\n  })\r\n  return promise\r\n}\r\n\r\n//获取全局配置  包含版本号\r\nexport function getGlobalConfigApi() {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve({version: \"0.0.2\"})\r\n    }, 1000)\r\n  })\r\n}","export default {\r\n  gender: [\r\n    {\r\n      \"value\": \"0\",\r\n      \"label\": \"好\"\r\n    }, {\r\n      \"value\": \"1\",\r\n      \"label\": \"差\"\r\n    }\r\n  ],\r\n  \"country\": [\r\n    {\r\n      \"id\": \"35062400\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"诏安县\"\r\n    },\r\n    {\r\n      \"id\": \"35062401\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"太平镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062402\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"金星乡\"\r\n    },\r\n    {\r\n      \"id\": \"35062403\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"南诏镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062404\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"霞葛镇\"\r\n    }\r\n  ],\r\n  \"city\": [\r\n    {\r\n      \"id\": \"35060000\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"漳州市\"\r\n    },\r\n    {\r\n      \"id\": \"35062400\",\r\n      \"parentId\": \"35060000\",\r\n      \"areaName\": \"诏安县\"\r\n    },\r\n    {\r\n      \"id\": \"35062401\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"太平镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062402\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"金星乡\"\r\n    },\r\n    {\r\n      \"id\": \"35062403\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"南诏镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062404\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"霞葛镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062300\",\r\n      \"parentId\": \"35060000\",\r\n      \"areaName\": \"云霄县\"\r\n    },\r\n    {\r\n      \"id\": \"35062301\",\r\n      \"parentId\": \"35062300\",\r\n      \"areaName\": \"列屿镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062302\",\r\n      \"parentId\": \"35062300\",\r\n      \"areaName\": \"陈岱镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062303\",\r\n      \"parentId\": \"35062300\",\r\n      \"areaName\": \"云陵镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062304\",\r\n      \"parentId\": \"35062300\",\r\n      \"areaName\": \"火田镇\"\r\n    }\r\n  ],\r\n  \"area2\": [\r\n    {\r\n      \"id\": \"35062400\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"诏安县\"\r\n    },\r\n    {\r\n      \"id\": \"35062401\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"太平镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062402\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"金星乡\"\r\n    },\r\n    {\r\n      \"id\": \"35062403\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"南诏镇\"\r\n    },\r\n    {\r\n      \"id\": \"35062404\",\r\n      \"parentId\": \"35062400\",\r\n      \"areaName\": \"霞葛镇\"\r\n    }\r\n  ],\r\n  \"area\": [\r\n    {\r\n      \"id\": \"350212\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"同安区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,同安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350213\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"翔安区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,翔安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350300\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"莆田市\",\r\n      \"mergerName\": \"中国,福建省,莆田市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350302\",\r\n      \"parentId\": \"350300\",\r\n      \"areaName\": \"城厢区\",\r\n      \"mergerName\": \"中国,福建省,莆田市,城厢区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350303\",\r\n      \"parentId\": \"350300\",\r\n      \"areaName\": \"涵江区\",\r\n      \"mergerName\": \"中国,福建省,莆田市,涵江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350304\",\r\n      \"parentId\": \"350300\",\r\n      \"areaName\": \"荔城区\",\r\n      \"mergerName\": \"中国,福建省,莆田市,荔城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350305\",\r\n      \"parentId\": \"350300\",\r\n      \"areaName\": \"秀屿区\",\r\n      \"mergerName\": \"中国,福建省,莆田市,秀屿区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350322\",\r\n      \"parentId\": \"350300\",\r\n      \"areaName\": \"仙游县\",\r\n      \"mergerName\": \"中国,福建省,莆田市,仙游县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350400\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"三明市\",\r\n      \"mergerName\": \"中国,福建省,三明市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350402\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"梅列区\",\r\n      \"mergerName\": \"中国,福建省,三明市,梅列区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350403\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"三元区\",\r\n      \"mergerName\": \"中国,福建省,三明市,三元区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350421\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"明溪县\",\r\n      \"mergerName\": \"中国,福建省,三明市,明溪县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350423\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"清流县\",\r\n      \"mergerName\": \"中国,福建省,三明市,清流县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350424\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"宁化县\",\r\n      \"mergerName\": \"中国,福建省,三明市,宁化县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350425\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"大田县\",\r\n      \"mergerName\": \"中国,福建省,三明市,大田县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350426\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"尤溪县\",\r\n      \"mergerName\": \"中国,福建省,三明市,尤溪县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350427\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"沙县\",\r\n      \"mergerName\": \"中国,福建省,三明市,沙县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350124\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"闽清县\",\r\n      \"mergerName\": \"中国,福建省,福州市,闽清县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350125\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"永泰县\",\r\n      \"mergerName\": \"中国,福建省,福州市,永泰县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350128\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"平潭县\",\r\n      \"mergerName\": \"中国,福建省,福州市,平潭县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350181\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"福清市\",\r\n      \"mergerName\": \"中国,福建省,福州市,福清市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350182\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"长乐市\",\r\n      \"mergerName\": \"中国,福建省,福州市,长乐市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350183\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"福州新区\",\r\n      \"mergerName\": \"中国,福建省,福州市,福州新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110111\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"房山区\",\r\n      \"mergerName\": \"中国,北京,北京市,房山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110000\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"北京\",\r\n      \"mergerName\": \"中国,北京\",\r\n      \"areaLevel\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"110100\",\r\n      \"parentId\": \"110000\",\r\n      \"areaName\": \"北京市\",\r\n      \"mergerName\": \"中国,北京,北京市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"110101\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"东城区\",\r\n      \"mergerName\": \"中国,北京,北京市,东城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110102\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"西城区\",\r\n      \"mergerName\": \"中国,北京,北京市,西城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110105\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"朝阳区\",\r\n      \"mergerName\": \"中国,北京,北京市,朝阳区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110106\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"丰台区\",\r\n      \"mergerName\": \"中国,北京,北京市,丰台区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110107\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"石景山区\",\r\n      \"mergerName\": \"中国,北京,北京市,石景山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110108\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"海淀区\",\r\n      \"mergerName\": \"中国,北京,北京市,海淀区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110109\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"门头沟区\",\r\n      \"mergerName\": \"中国,北京,北京市,门头沟区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n\r\n    {\r\n      \"id\": \"110112\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"通州区\",\r\n      \"mergerName\": \"中国,北京,北京市,通州区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110113\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"顺义区\",\r\n      \"mergerName\": \"中国,北京,北京市,顺义区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110114\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"昌平区\",\r\n      \"mergerName\": \"中国,北京,北京市,昌平区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110115\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"大兴区\",\r\n      \"mergerName\": \"中国,北京,北京市,大兴区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110116\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"怀柔区\",\r\n      \"mergerName\": \"中国,北京,北京市,怀柔区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110117\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"平谷区\",\r\n      \"mergerName\": \"中国,北京,北京市,平谷区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110118\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"密云区\",\r\n      \"mergerName\": \"中国,北京,北京市,密云区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110119\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"延庆区\",\r\n      \"mergerName\": \"中国,北京,北京市,延庆区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"110120\",\r\n      \"parentId\": \"110100\",\r\n      \"areaName\": \"中关村科技园区\",\r\n      \"mergerName\": \"中国,北京,北京市,中关村科技园区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350000\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"福建省\",\r\n      \"mergerName\": \"中国,福建省\",\r\n      \"areaLevel\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"350100\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"福州市\",\r\n      \"mergerName\": \"中国,福建省,福州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350102\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"鼓楼区\",\r\n      \"mergerName\": \"中国,福建省,福州市,鼓楼区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350103\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"台江区\",\r\n      \"mergerName\": \"中国,福建省,福州市,台江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350104\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"仓山区\",\r\n      \"mergerName\": \"中国,福建省,福州市,仓山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350105\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"马尾区\",\r\n      \"mergerName\": \"中国,福建省,福州市,马尾区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350111\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"晋安区\",\r\n      \"mergerName\": \"中国,福建省,福州市,晋安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350121\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"闽侯县\",\r\n      \"mergerName\": \"中国,福建省,福州市,闽侯县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350122\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"连江县\",\r\n      \"mergerName\": \"中国,福建省,福州市,连江县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350123\",\r\n      \"parentId\": \"350100\",\r\n      \"areaName\": \"罗源县\",\r\n      \"mergerName\": \"中国,福建省,福州市,罗源县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n\r\n    {\r\n      \"id\": \"350200\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"厦门市\",\r\n      \"mergerName\": \"中国,福建省,厦门市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350203\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"思明区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,思明区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350205\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"海沧区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,海沧区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350206\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"湖里区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,湖里区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350211\",\r\n      \"parentId\": \"350200\",\r\n      \"areaName\": \"集美区\",\r\n      \"mergerName\": \"中国,福建省,厦门市,集美区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350428\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"将乐县\",\r\n      \"mergerName\": \"中国,福建省,三明市,将乐县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350429\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"泰宁县\",\r\n      \"mergerName\": \"中国,福建省,三明市,泰宁县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350430\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"建宁县\",\r\n      \"mergerName\": \"中国,福建省,三明市,建宁县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350481\",\r\n      \"parentId\": \"350400\",\r\n      \"areaName\": \"永安市\",\r\n      \"mergerName\": \"中国,福建省,三明市,永安市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350500\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"泉州市\",\r\n      \"mergerName\": \"中国,福建省,泉州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350502\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"鲤城区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,鲤城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350503\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"丰泽区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,丰泽区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350504\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"洛江区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,洛江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350505\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"泉港区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,泉港区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350521\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"惠安县\",\r\n      \"mergerName\": \"中国,福建省,泉州市,惠安县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350524\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"安溪县\",\r\n      \"mergerName\": \"中国,福建省,泉州市,安溪县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350525\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"永春县\",\r\n      \"mergerName\": \"中国,福建省,泉州市,永春县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350526\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"德化县\",\r\n      \"mergerName\": \"中国,福建省,泉州市,德化县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350527\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"金门县\",\r\n      \"mergerName\": \"中国,福建省,泉州市,金门县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350581\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"石狮市\",\r\n      \"mergerName\": \"中国,福建省,泉州市,石狮市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350582\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"晋江市\",\r\n      \"mergerName\": \"中国,福建省,泉州市,晋江市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350583\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"南安市\",\r\n      \"mergerName\": \"中国,福建省,泉州市,南安市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350584\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"台商投资区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,台商投资区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350585\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"经济技术开发区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,经济技术开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350586\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"高新技术开发区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,高新技术开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350587\",\r\n      \"parentId\": \"350500\",\r\n      \"areaName\": \"综合保税区\",\r\n      \"mergerName\": \"中国,福建省,泉州市,综合保税区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350600\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"漳州市\",\r\n      \"mergerName\": \"中国,福建省,漳州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350602\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"芗城区\",\r\n      \"mergerName\": \"中国,福建省,漳州市,芗城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350603\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"龙文区\",\r\n      \"mergerName\": \"中国,福建省,漳州市,龙文区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350622\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"云霄县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,云霄县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350623\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"漳浦县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,漳浦县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350624\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"诏安县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,诏安县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350625\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"长泰县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,长泰县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350626\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"东山县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,东山县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350627\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"南靖县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,南靖县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350628\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"平和县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,平和县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350629\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"华安县\",\r\n      \"mergerName\": \"中国,福建省,漳州市,华安县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350681\",\r\n      \"parentId\": \"350600\",\r\n      \"areaName\": \"龙海市\",\r\n      \"mergerName\": \"中国,福建省,漳州市,龙海市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350700\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"南平市\",\r\n      \"mergerName\": \"中国,福建省,南平市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350702\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"延平区\",\r\n      \"mergerName\": \"中国,福建省,南平市,延平区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350703\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"建阳区\",\r\n      \"mergerName\": \"中国,福建省,南平市,建阳区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350721\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"顺昌县\",\r\n      \"mergerName\": \"中国,福建省,南平市,顺昌县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350722\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"浦城县\",\r\n      \"mergerName\": \"中国,福建省,南平市,浦城县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350723\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"光泽县\",\r\n      \"mergerName\": \"中国,福建省,南平市,光泽县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350724\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"松溪县\",\r\n      \"mergerName\": \"中国,福建省,南平市,松溪县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350725\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"政和县\",\r\n      \"mergerName\": \"中国,福建省,南平市,政和县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350781\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"邵武市\",\r\n      \"mergerName\": \"中国,福建省,南平市,邵武市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350782\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"武夷山市\",\r\n      \"mergerName\": \"中国,福建省,南平市,武夷山市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350783\",\r\n      \"parentId\": \"350700\",\r\n      \"areaName\": \"建瓯市\",\r\n      \"mergerName\": \"中国,福建省,南平市,建瓯市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350800\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"龙岩市\",\r\n      \"mergerName\": \"中国,福建省,龙岩市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350802\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"新罗区\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,新罗区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350803\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"永定区\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,永定区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350821\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"长汀县\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,长汀县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350823\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"上杭县\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,上杭县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350824\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"武平县\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,武平县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350825\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"连城县\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,连城县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350881\",\r\n      \"parentId\": \"350800\",\r\n      \"areaName\": \"漳平市\",\r\n      \"mergerName\": \"中国,福建省,龙岩市,漳平市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350900\",\r\n      \"parentId\": \"350000\",\r\n      \"areaName\": \"宁德市\",\r\n      \"mergerName\": \"中国,福建省,宁德市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"350902\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"蕉城区\",\r\n      \"mergerName\": \"中国,福建省,宁德市,蕉城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350921\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"霞浦县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,霞浦县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350922\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"古田县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,古田县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350923\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"屏南县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,屏南县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350924\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"寿宁县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,寿宁县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350925\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"周宁县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,周宁县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350926\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"柘荣县\",\r\n      \"mergerName\": \"中国,福建省,宁德市,柘荣县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350981\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"福安市\",\r\n      \"mergerName\": \"中国,福建省,宁德市,福安市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350982\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"福鼎市\",\r\n      \"mergerName\": \"中国,福建省,宁德市,福鼎市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"350983\",\r\n      \"parentId\": \"350900\",\r\n      \"areaName\": \"东侨开发区\",\r\n      \"mergerName\": \"中国,福建省,宁德市,东侨开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440000\",\r\n      \"parentId\": \"0\",\r\n      \"areaName\": \"广东省\",\r\n      \"mergerName\": \"中国,广东省\",\r\n      \"areaLevel\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"440100\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"广州市\",\r\n      \"mergerName\": \"中国,广东省,广州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440103\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"荔湾区\",\r\n      \"mergerName\": \"中国,广东省,广州市,荔湾区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440104\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"越秀区\",\r\n      \"mergerName\": \"中国,广东省,广州市,越秀区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440105\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"海珠区\",\r\n      \"mergerName\": \"中国,广东省,广州市,海珠区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440106\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"天河区\",\r\n      \"mergerName\": \"中国,广东省,广州市,天河区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440111\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"白云区\",\r\n      \"mergerName\": \"中国,广东省,广州市,白云区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440112\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"黄埔区\",\r\n      \"mergerName\": \"中国,广东省,广州市,黄埔区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440113\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"番禺区\",\r\n      \"mergerName\": \"中国,广东省,广州市,番禺区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440114\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"花都区\",\r\n      \"mergerName\": \"中国,广东省,广州市,花都区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440115\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"南沙区\",\r\n      \"mergerName\": \"中国,广东省,广州市,南沙区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440117\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"从化区\",\r\n      \"mergerName\": \"中国,广东省,广州市,从化区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440118\",\r\n      \"parentId\": \"440100\",\r\n      \"areaName\": \"增城区\",\r\n      \"mergerName\": \"中国,广东省,广州市,增城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440200\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"韶关市\",\r\n      \"mergerName\": \"中国,广东省,韶关市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440203\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"武江区\",\r\n      \"mergerName\": \"中国,广东省,韶关市,武江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440204\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"浈江区\",\r\n      \"mergerName\": \"中国,广东省,韶关市,浈江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440205\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"曲江区\",\r\n      \"mergerName\": \"中国,广东省,韶关市,曲江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440222\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"始兴县\",\r\n      \"mergerName\": \"中国,广东省,韶关市,始兴县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440224\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"仁化县\",\r\n      \"mergerName\": \"中国,广东省,韶关市,仁化县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440229\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"翁源县\",\r\n      \"mergerName\": \"中国,广东省,韶关市,翁源县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440232\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"乳源瑶族自治县\",\r\n      \"mergerName\": \"中国,广东省,韶关市,乳源瑶族自治县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440233\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"新丰县\",\r\n      \"mergerName\": \"中国,广东省,韶关市,新丰县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440281\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"乐昌市\",\r\n      \"mergerName\": \"中国,广东省,韶关市,乐昌市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440282\",\r\n      \"parentId\": \"440200\",\r\n      \"areaName\": \"南雄市\",\r\n      \"mergerName\": \"中国,广东省,韶关市,南雄市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440300\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"深圳市\",\r\n      \"mergerName\": \"中国,广东省,深圳市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440303\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"罗湖区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,罗湖区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440304\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"福田区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,福田区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440305\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"南山区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,南山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440306\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"宝安区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,宝安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440307\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"龙岗区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,龙岗区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440308\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"盐田区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,盐田区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440309\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"龙华区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,龙华区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440310\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"坪山区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,坪山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440311\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"光明新区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,光明新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440312\",\r\n      \"parentId\": \"440300\",\r\n      \"areaName\": \"大鹏新区\",\r\n      \"mergerName\": \"中国,广东省,深圳市,大鹏新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440400\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"珠海市\",\r\n      \"mergerName\": \"中国,广东省,珠海市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440402\",\r\n      \"parentId\": \"440400\",\r\n      \"areaName\": \"香洲区\",\r\n      \"mergerName\": \"中国,广东省,珠海市,香洲区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440403\",\r\n      \"parentId\": \"440400\",\r\n      \"areaName\": \"斗门区\",\r\n      \"mergerName\": \"中国,广东省,珠海市,斗门区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440404\",\r\n      \"parentId\": \"440400\",\r\n      \"areaName\": \"金湾区\",\r\n      \"mergerName\": \"中国,广东省,珠海市,金湾区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440405\",\r\n      \"parentId\": \"440400\",\r\n      \"areaName\": \"横琴新区\",\r\n      \"mergerName\": \"中国,广东省,珠海市,横琴新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440406\",\r\n      \"parentId\": \"440400\",\r\n      \"areaName\": \"经济开发区\",\r\n      \"mergerName\": \"中国,广东省,珠海市,经济开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440500\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"汕头市\",\r\n      \"mergerName\": \"中国,广东省,汕头市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440507\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"龙湖区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,龙湖区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440511\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"金平区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,金平区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440512\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"濠江区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,濠江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440513\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"潮阳区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,潮阳区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440514\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"潮南区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,潮南区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440515\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"澄海区\",\r\n      \"mergerName\": \"中国,广东省,汕头市,澄海区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440523\",\r\n      \"parentId\": \"440500\",\r\n      \"areaName\": \"南澳县\",\r\n      \"mergerName\": \"中国,广东省,汕头市,南澳县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440600\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"佛山市\",\r\n      \"mergerName\": \"中国,广东省,佛山市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440604\",\r\n      \"parentId\": \"440600\",\r\n      \"areaName\": \"禅城区\",\r\n      \"mergerName\": \"中国,广东省,佛山市,禅城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440605\",\r\n      \"parentId\": \"440600\",\r\n      \"areaName\": \"南海区\",\r\n      \"mergerName\": \"中国,广东省,佛山市,南海区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440606\",\r\n      \"parentId\": \"440600\",\r\n      \"areaName\": \"顺德区\",\r\n      \"mergerName\": \"中国,广东省,佛山市,顺德区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440607\",\r\n      \"parentId\": \"440600\",\r\n      \"areaName\": \"三水区\",\r\n      \"mergerName\": \"中国,广东省,佛山市,三水区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440608\",\r\n      \"parentId\": \"440600\",\r\n      \"areaName\": \"高明区\",\r\n      \"mergerName\": \"中国,广东省,佛山市,高明区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440700\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"江门市\",\r\n      \"mergerName\": \"中国,广东省,江门市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440703\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"蓬江区\",\r\n      \"mergerName\": \"中国,广东省,江门市,蓬江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440704\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"江海区\",\r\n      \"mergerName\": \"中国,广东省,江门市,江海区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440705\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"新会区\",\r\n      \"mergerName\": \"中国,广东省,江门市,新会区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440781\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"台山市\",\r\n      \"mergerName\": \"中国,广东省,江门市,台山市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440783\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"开平市\",\r\n      \"mergerName\": \"中国,广东省,江门市,开平市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440784\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"鹤山市\",\r\n      \"mergerName\": \"中国,广东省,江门市,鹤山市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440785\",\r\n      \"parentId\": \"440700\",\r\n      \"areaName\": \"恩平市\",\r\n      \"mergerName\": \"中国,广东省,江门市,恩平市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440800\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"湛江市\",\r\n      \"mergerName\": \"中国,广东省,湛江市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440802\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"赤坎区\",\r\n      \"mergerName\": \"中国,广东省,湛江市,赤坎区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440803\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"霞山区\",\r\n      \"mergerName\": \"中国,广东省,湛江市,霞山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440804\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"坡头区\",\r\n      \"mergerName\": \"中国,广东省,湛江市,坡头区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440811\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"麻章区\",\r\n      \"mergerName\": \"中国,广东省,湛江市,麻章区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440823\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"遂溪县\",\r\n      \"mergerName\": \"中国,广东省,湛江市,遂溪县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440825\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"徐闻县\",\r\n      \"mergerName\": \"中国,广东省,湛江市,徐闻县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440881\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"廉江市\",\r\n      \"mergerName\": \"中国,广东省,湛江市,廉江市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440882\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"雷州市\",\r\n      \"mergerName\": \"中国,广东省,湛江市,雷州市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440883\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"吴川市\",\r\n      \"mergerName\": \"中国,广东省,湛江市,吴川市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440884\",\r\n      \"parentId\": \"440800\",\r\n      \"areaName\": \"经济开发区\",\r\n      \"mergerName\": \"中国,广东省,湛江市,经济开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440900\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"茂名市\",\r\n      \"mergerName\": \"中国,广东省,茂名市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"440902\",\r\n      \"parentId\": \"440900\",\r\n      \"areaName\": \"茂南区\",\r\n      \"mergerName\": \"中国,广东省,茂名市,茂南区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440904\",\r\n      \"parentId\": \"440900\",\r\n      \"areaName\": \"电白区\",\r\n      \"mergerName\": \"中国,广东省,茂名市,电白区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440981\",\r\n      \"parentId\": \"440900\",\r\n      \"areaName\": \"高州市\",\r\n      \"mergerName\": \"中国,广东省,茂名市,高州市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440982\",\r\n      \"parentId\": \"440900\",\r\n      \"areaName\": \"化州市\",\r\n      \"mergerName\": \"中国,广东省,茂名市,化州市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"440983\",\r\n      \"parentId\": \"440900\",\r\n      \"areaName\": \"信宜市\",\r\n      \"mergerName\": \"中国,广东省,茂名市,信宜市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441200\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"肇庆市\",\r\n      \"mergerName\": \"中国,广东省,肇庆市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441202\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"端州区\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,端州区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441203\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"鼎湖区\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,鼎湖区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441204\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"高要区\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,高要区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441223\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"广宁县\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,广宁县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441224\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"怀集县\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,怀集县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441225\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"封开县\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,封开县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441226\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"德庆县\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,德庆县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441284\",\r\n      \"parentId\": \"441200\",\r\n      \"areaName\": \"四会市\",\r\n      \"mergerName\": \"中国,广东省,肇庆市,四会市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441300\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"惠州市\",\r\n      \"mergerName\": \"中国,广东省,惠州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441302\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"惠城区\",\r\n      \"mergerName\": \"中国,广东省,惠州市,惠城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441303\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"惠阳区\",\r\n      \"mergerName\": \"中国,广东省,惠州市,惠阳区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441322\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"博罗县\",\r\n      \"mergerName\": \"中国,广东省,惠州市,博罗县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441323\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"惠东县\",\r\n      \"mergerName\": \"中国,广东省,惠州市,惠东县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441324\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"龙门县\",\r\n      \"mergerName\": \"中国,广东省,惠州市,龙门县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441325\",\r\n      \"parentId\": \"441300\",\r\n      \"areaName\": \"大亚湾区\",\r\n      \"mergerName\": \"中国,广东省,惠州市,大亚湾区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441400\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"梅州市\",\r\n      \"mergerName\": \"中国,广东省,梅州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441402\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"梅江区\",\r\n      \"mergerName\": \"中国,广东省,梅州市,梅江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441403\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"梅县区\",\r\n      \"mergerName\": \"中国,广东省,梅州市,梅县区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441422\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"大埔县\",\r\n      \"mergerName\": \"中国,广东省,梅州市,大埔县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441423\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"丰顺县\",\r\n      \"mergerName\": \"中国,广东省,梅州市,丰顺县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441424\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"五华县\",\r\n      \"mergerName\": \"中国,广东省,梅州市,五华县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441426\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"平远县\",\r\n      \"mergerName\": \"中国,广东省,梅州市,平远县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441427\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"蕉岭县\",\r\n      \"mergerName\": \"中国,广东省,梅州市,蕉岭县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441481\",\r\n      \"parentId\": \"441400\",\r\n      \"areaName\": \"兴宁市\",\r\n      \"mergerName\": \"中国,广东省,梅州市,兴宁市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441500\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"汕尾市\",\r\n      \"mergerName\": \"中国,广东省,汕尾市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441502\",\r\n      \"parentId\": \"441500\",\r\n      \"areaName\": \"城区\",\r\n      \"mergerName\": \"中国,广东省,汕尾市,城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441521\",\r\n      \"parentId\": \"441500\",\r\n      \"areaName\": \"海丰县\",\r\n      \"mergerName\": \"中国,广东省,汕尾市,海丰县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441523\",\r\n      \"parentId\": \"441500\",\r\n      \"areaName\": \"陆河县\",\r\n      \"mergerName\": \"中国,广东省,汕尾市,陆河县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441581\",\r\n      \"parentId\": \"441500\",\r\n      \"areaName\": \"陆丰市\",\r\n      \"mergerName\": \"中国,广东省,汕尾市,陆丰市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441600\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"河源市\",\r\n      \"mergerName\": \"中国,广东省,河源市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441602\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"源城区\",\r\n      \"mergerName\": \"中国,广东省,河源市,源城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441621\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"紫金县\",\r\n      \"mergerName\": \"中国,广东省,河源市,紫金县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441622\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"龙川县\",\r\n      \"mergerName\": \"中国,广东省,河源市,龙川县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441623\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"连平县\",\r\n      \"mergerName\": \"中国,广东省,河源市,连平县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441624\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"和平县\",\r\n      \"mergerName\": \"中国,广东省,河源市,和平县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441625\",\r\n      \"parentId\": \"441600\",\r\n      \"areaName\": \"东源县\",\r\n      \"mergerName\": \"中国,广东省,河源市,东源县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441700\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"阳江市\",\r\n      \"mergerName\": \"中国,广东省,阳江市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441702\",\r\n      \"parentId\": \"441700\",\r\n      \"areaName\": \"江城区\",\r\n      \"mergerName\": \"中国,广东省,阳江市,江城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441704\",\r\n      \"parentId\": \"441700\",\r\n      \"areaName\": \"阳东区\",\r\n      \"mergerName\": \"中国,广东省,阳江市,阳东区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441721\",\r\n      \"parentId\": \"441700\",\r\n      \"areaName\": \"阳西县\",\r\n      \"mergerName\": \"中国,广东省,阳江市,阳西县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441781\",\r\n      \"parentId\": \"441700\",\r\n      \"areaName\": \"阳春市\",\r\n      \"mergerName\": \"中国,广东省,阳江市,阳春市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441800\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"清远市\",\r\n      \"mergerName\": \"中国,广东省,清远市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441802\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"清城区\",\r\n      \"mergerName\": \"中国,广东省,清远市,清城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441803\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"清新区\",\r\n      \"mergerName\": \"中国,广东省,清远市,清新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441821\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"佛冈县\",\r\n      \"mergerName\": \"中国,广东省,清远市,佛冈县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441823\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"阳山县\",\r\n      \"mergerName\": \"中国,广东省,清远市,阳山县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441825\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"连山壮族瑶族自治县\",\r\n      \"mergerName\": \"中国,广东省,清远市,连山壮族瑶族自治县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441826\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"连南瑶族自治县\",\r\n      \"mergerName\": \"中国,广东省,清远市,连南瑶族自治县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441881\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"英德市\",\r\n      \"mergerName\": \"中国,广东省,清远市,英德市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441882\",\r\n      \"parentId\": \"441800\",\r\n      \"areaName\": \"连州市\",\r\n      \"mergerName\": \"中国,广东省,清远市,连州市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441900\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"东莞市\",\r\n      \"mergerName\": \"中国,广东省,东莞市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"441901\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"莞城区\",\r\n      \"mergerName\": \"中国,广东省,东莞市,莞城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441902\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"南城区\",\r\n      \"mergerName\": \"中国,广东省,东莞市,南城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441903\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"东城区\",\r\n      \"mergerName\": \"中国,广东省,东莞市,东城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441904\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"万江区\",\r\n      \"mergerName\": \"中国,广东省,东莞市,万江区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441905\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"石碣镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,石碣镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441906\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"石龙镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,石龙镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441907\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"茶山镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,茶山镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441908\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"石排镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,石排镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441909\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"企石镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,企石镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441910\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"横沥镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,横沥镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441911\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"桥头镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,桥头镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441912\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"谢岗镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,谢岗镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441913\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"东坑镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,东坑镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441914\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"常平镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,常平镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441915\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"寮步镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,寮步镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441916\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"大朗镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,大朗镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441917\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"麻涌镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,麻涌镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441918\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"中堂镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,中堂镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441919\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"高埗镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,高埗镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441920\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"樟木头镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,樟木头镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441921\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"大岭山镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,大岭山镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441922\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"望牛墩镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,望牛墩镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441923\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"黄江镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,黄江镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441924\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"洪梅镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,洪梅镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441925\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"清溪镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,清溪镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441926\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"沙田镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,沙田镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441927\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"道滘镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,道滘镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441928\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"塘厦镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,塘厦镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441929\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"虎门镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,虎门镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441930\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"厚街镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,厚街镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441931\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"凤岗镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,凤岗镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441932\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"长安镇\",\r\n      \"mergerName\": \"中国,广东省,东莞市,长安镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"441933\",\r\n      \"parentId\": \"441900\",\r\n      \"areaName\": \"松山湖高新区\",\r\n      \"mergerName\": \"中国,广东省,东莞市,松山湖高新区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442000\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"中山市\",\r\n      \"mergerName\": \"中国,广东省,中山市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"442001\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"石岐区\",\r\n      \"mergerName\": \"中国,广东省,中山市,石岐区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442002\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"东区\",\r\n      \"mergerName\": \"中国,广东省,中山市,东区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442003\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"西区\",\r\n      \"mergerName\": \"中国,广东省,中山市,西区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442004\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"南区\",\r\n      \"mergerName\": \"中国,广东省,中山市,南区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442005\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"五桂山区\",\r\n      \"mergerName\": \"中国,广东省,中山市,五桂山区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442006\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"火炬开发区\",\r\n      \"mergerName\": \"中国,广东省,中山市,火炬开发区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442007\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"黄圃镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,黄圃镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442008\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"南头镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,南头镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442009\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"东凤镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,东凤镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442010\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"阜沙镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,阜沙镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442011\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"小榄镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,小榄镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442012\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"东升镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,东升镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442013\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"古镇镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,古镇镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442014\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"横栏镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,横栏镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442015\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"三角镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,三角镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442016\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"民众镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,民众镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442017\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"南朗镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,南朗镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442018\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"港口镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,港口镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442019\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"大涌镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,大涌镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442020\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"沙溪镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,沙溪镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442021\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"三乡镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,三乡镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442022\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"板芙镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,板芙镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442023\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"神湾镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,神湾镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"442024\",\r\n      \"parentId\": \"442000\",\r\n      \"areaName\": \"坦洲镇\",\r\n      \"mergerName\": \"中国,广东省,中山市,坦洲镇\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445100\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"潮州市\",\r\n      \"mergerName\": \"中国,广东省,潮州市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"445102\",\r\n      \"parentId\": \"445100\",\r\n      \"areaName\": \"湘桥区\",\r\n      \"mergerName\": \"中国,广东省,潮州市,湘桥区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445103\",\r\n      \"parentId\": \"445100\",\r\n      \"areaName\": \"潮安区\",\r\n      \"mergerName\": \"中国,广东省,潮州市,潮安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445122\",\r\n      \"parentId\": \"445100\",\r\n      \"areaName\": \"饶平县\",\r\n      \"mergerName\": \"中国,广东省,潮州市,饶平县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445200\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"揭阳市\",\r\n      \"mergerName\": \"中国,广东省,揭阳市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"445202\",\r\n      \"parentId\": \"445200\",\r\n      \"areaName\": \"榕城区\",\r\n      \"mergerName\": \"中国,广东省,揭阳市,榕城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445203\",\r\n      \"parentId\": \"445200\",\r\n      \"areaName\": \"揭东区\",\r\n      \"mergerName\": \"中国,广东省,揭阳市,揭东区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445222\",\r\n      \"parentId\": \"445200\",\r\n      \"areaName\": \"揭西县\",\r\n      \"mergerName\": \"中国,广东省,揭阳市,揭西县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445224\",\r\n      \"parentId\": \"445200\",\r\n      \"areaName\": \"惠来县\",\r\n      \"mergerName\": \"中国,广东省,揭阳市,惠来县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445281\",\r\n      \"parentId\": \"445200\",\r\n      \"areaName\": \"普宁市\",\r\n      \"mergerName\": \"中国,广东省,揭阳市,普宁市\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445300\",\r\n      \"parentId\": \"440000\",\r\n      \"areaName\": \"云浮市\",\r\n      \"mergerName\": \"中国,广东省,云浮市\",\r\n      \"areaLevel\": \"2\"\r\n    },\r\n    {\r\n      \"id\": \"445302\",\r\n      \"parentId\": \"445300\",\r\n      \"areaName\": \"云城区\",\r\n      \"mergerName\": \"中国,广东省,云浮市,云城区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445303\",\r\n      \"parentId\": \"445300\",\r\n      \"areaName\": \"云安区\",\r\n      \"mergerName\": \"中国,广东省,云浮市,云安区\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445321\",\r\n      \"parentId\": \"445300\",\r\n      \"areaName\": \"新兴县\",\r\n      \"mergerName\": \"中国,广东省,云浮市,新兴县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445322\",\r\n      \"parentId\": \"445300\",\r\n      \"areaName\": \"郁南县\",\r\n      \"mergerName\": \"中国,广东省,云浮市,郁南县\",\r\n      \"areaLevel\": \"3\"\r\n    },\r\n    {\r\n      \"id\": \"445381\",\r\n      \"parentId\": \"445300\",\r\n      \"areaName\": \"罗定市\",\r\n      \"mergerName\": \"中国,广东省,云浮市,罗定市\",\r\n      \"areaLevel\": \"3\"\r\n    }\r\n  ]\r\n}","//引入请求字典接口\r\nimport {getDictCodeApi} from \"@/api/module/common-api.js\"\r\n//引入本地缓存数据\r\nimport localDictCodes from \"@/assets/data/dict.js\"\r\n\r\nexport default {\r\n  getDictCodeApi,\r\n  localDictCodes,\r\n  treeSetting: {\r\n    labelField: \"areaName\"\r\n  },\r\n  axiosSetting: {\r\n    axios: \"haha\"\r\n  }\r\n}","import Vue from \"vue\"\r\nimport App from \"./App.vue\"\r\nimport Router from \"vue-router\"\r\nimport router from \"@/router\"\r\nVue.config.productionTip = false\r\n\r\nimport \"@/styles/index.less\"\r\n\r\n// 修改路由跳转报错的bug-start\r\nconst routerPush = Router.prototype.push\r\nRouter.prototype.push = function push(location) {\r\n  return routerPush.call(this, location).catch(error => error)\r\n}\r\nimport { beforeEachHandler } from \"@/router/before-each\"\r\nimport afterEachHandler from \"@/router/after-each\"\r\nrouter.beforeEach(beforeEachHandler)\r\nrouter.afterEach(afterEachHandler)\r\n\r\nimport Vant from \"../node_modules/vant-xiaobu/lib/index\"\r\nimport \"../node_modules/vant-xiaobu/lib/index.css\"\r\nVue.use(Vant)\r\n\r\nimport {getGlobalConfigApi} from \"@/api/module/common-api.js\"\r\nimport dictConfig from \"@/dict-config.js\"\r\nimport vue2VantDict from \"~/index\"\r\n\r\n//获取当前版本号\r\ngetGlobalConfigApi().then(data => {\r\n  const {version} = data\r\n  Object.assign(dictConfig, {version})\r\n  Vue.use(vue2VantDict, dictConfig)\r\n  new Vue({\r\n    router,\r\n    render: h => h(App)\r\n  }).$mount(\"#app\")\r\n})\r\n","import Vue from \"vue\"\r\nimport Router from \"vue-router\"\r\nVue.use(Router)\r\n\r\nlet routes = []\r\nconst routerContext = require.context(\"./\", true, /index\\.js$/)\r\nrouterContext.keys().forEach(route => {\r\n  //排除本身文件\r\n  if (route.startsWith(\"./index\")) {\r\n    return\r\n  }\r\n  const routerModule = routerContext(route)\r\n  routes = routes.concat([...(routerModule.default || routerModule)])\r\n})\r\n\r\nconst createRouter = () => new Router({\r\n  scrollBehavior: () => ({ y: 0 }),\r\n  linkActiveClass: \"active\",\r\n  routes\r\n})\r\n\r\nconst router = createRouter()\r\n\r\nexport default router","var map = {\n\t\"./index.js\": \"d16c\",\n\t\"./van-button-dict/index.js\": \"4ddc\",\n\t\"./van-calendar-dict/index.js\": \"de28\",\n\t\"./van-cascader-dict/index.js\": \"4d9d\",\n\t\"./van-checkbox-dict/index.js\": \"28bb\",\n\t\"./van-datetime-dict/index.js\": \"99bc\",\n\t\"./van-dropdown-item-dict/index.js\": \"4ec3\",\n\t\"./van-field-dict/index.js\": \"0834\",\n\t\"./van-radio-dict/index.js\": \"b0ca\",\n\t\"./van-select-dict/index.js\": \"920c\",\n\t\"./van-tabs-dict/index.js\": \"5e88\",\n\t\"./van-tag-dict/index.js\": \"eca3\",\n\t\"./van-tree-select-dict/index.js\": \"a466\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cf09\";","// 组件列表\r\nconst components = []\r\nconst componentList = require.context(\"./\", true, /\\.js$/)\r\ncomponentList.keys().forEach(fileName => {\r\n  if (fileName.startsWith(\"./index\")) {\r\n    return\r\n  }\r\n  const file = componentList(fileName)\r\n  components.push(file.default || file)\r\n})\r\n\r\nexport default components","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=4c3d54f9&prod&scoped=true&lang=css&\"","export default [\r\n  {\r\n    path: \"/\",\r\n    redirect: \"/home\"\r\n  },\r\n  {\r\n    name: \"home\",\r\n    path: \"/home\",\r\n    meta: {\r\n      title: \"目录\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"commonModule\" */ \"@/views/home.vue\")\r\n  }\r\n]","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"van-calendar-dict\"},[_c('van-field',_vm._g(_vm._b({attrs:{\"type\":\"text\",\"readonly\":\"\",\"clickable\":\"\",\"value\":_vm.showValue,\"is-link\":\"\"},on:{\"click\":_vm.handleClick},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-field',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)})],2),_c('van-calendar',_vm._b({ref:\"VantCalendarDict\",on:{\"select\":_vm.select,\"open\":_vm.open,\"close\":_vm.close,\"opened\":_vm.opened,\"closed\":_vm.closed,\"unselect\":_vm.unselect,\"month-show\":_vm.monthShow,\"over-range\":_vm.overRange,\"click-subtitle\":_vm.clickSubtitle,\"confirm\":_vm.onConfirm},model:{value:(_vm.showPicker),callback:function ($$v) {_vm.showPicker=$$v},expression:\"showPicker\"}},'van-calendar',_vm.$attrs,false))],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"van-calendar-dict\">\r\n    <van-field v-on=\"$listeners\" type=\"text\" v-bind=\"$attrs\" readonly clickable :value=\"showValue\" is-link  @click=\"handleClick\" >\r\n      <template v-for=\"(slot, key) in $scopedSlots\" :slot=\"key\" slot-scope=\"scope\">\r\n        <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n      </template>\r\n      <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n        <slot :name=\"key\"></slot>\r\n      </template>\r\n    </van-field>\r\n    <van-calendar \r\n      ref=\"VantCalendarDict\"\r\n      v-bind=\"$attrs\"\r\n      v-model=\"showPicker\"\r\n      @select=\"select\"\r\n      @open=\"open\"\r\n      @close=\"close\"\r\n      @opened=\"opened\"\r\n      @closed=\"closed\"\r\n      @unselect=\"unselect\"\r\n      @month-show=\"monthShow\"\r\n      @over-range=\"overRange\"\r\n      @click-subtitle=\"clickSubtitle\"\r\n      @confirm=\"onConfirm\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { FormatDate } from \"~/functions/date-format\"\r\nexport default {\r\n  name: \"van-calendar-dict\",\r\n  data() {\r\n    return {\r\n      showValue: \"\",\r\n      showPicker: false,\r\n      svalue: this.value\r\n    }\r\n  },\r\n  props: {\r\n    formateShowValue: {\r\n      type: Function,\r\n      default: (dates) => {\r\n        if (dates&&dates.length > 0) {\r\n          return `选择了 ${dates.length} 个日期`\r\n        }\r\n        return \"\"\r\n      }\r\n    },\r\n    //多个日期之间的间隔符\r\n    dateSpacer: {\r\n      type: String,\r\n      default: \" 至 \"\r\n    },\r\n    //间隔符\r\n    spacer: {\r\n      type: String,\r\n      default: \"-\"\r\n    },\r\n    //默认值\r\n    defaultVal: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    value: {\r\n    } //接受外部v-model传入的值\r\n\r\n  },\r\n  watch: {\r\n    //判断下拉框的值是否有改变\r\n    value(val) {\r\n      this.svalue = val//②监听外部对props属性result的变更，并同步到组件内的data属性myResult中\r\n    },\r\n    svalue(val, oldVal) {\r\n      if (val !== oldVal) {\r\n        this.$emit(\"input\", val)//③组件内对myResult变更后向外部发送事件通知\r\n      }\r\n    },\r\n    showPicker(val) {\r\n      if (val) {\r\n        this.$nextTick(() => {\r\n          if (this.$attrs.type === \"multiple\") {\r\n            if (this.value&&this.value.length > 0) {\r\n              const dateArr = []\r\n              for (let i = 0; i < this.value.length; i++) {\r\n                dateArr.push(new Date(this.value[i].replace(/-|\\./g, \"/\")))\r\n              }\r\n              this.$refs.VantCalendarDict.currentDate = dateArr\r\n            } else {\r\n              this.$refs.VantCalendarDict.currentDate = []\r\n            }\r\n          } else if (this.$attrs.type === \"range\") {\r\n            if (this.value&&this.value.length === 2) {\r\n              this.$refs.VantCalendarDict.currentDate = [\r\n                new Date(this.value[0].replace(/-|\\./g, \"/\")),\r\n                new Date(this.value[1].replace(/-|\\./g, \"/\"))\r\n              ]\r\n            } else {\r\n              this.$refs.VantCalendarDict.currentDate = new Date()\r\n            }\r\n          } else {\r\n            this.$refs.VantCalendarDict.currentDate = new Date(this.value.replace(/-|\\./g, \"/\"))\r\n          }\r\n        })\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.$attrs.type === \"multiple\") {\r\n      this.showValue = this.formateShowValue(this.value)\r\n      this.$nextTick(() => {\r\n        if (this.value&&this.value.length > 0) {\r\n          const dateArr = []\r\n          for (let i = 0; i < this.value.length; i++) {\r\n            dateArr.push(new Date(this.value[i].replace(/-|\\./g, \"/\")))\r\n          }\r\n          this.$refs.VantCalendarDict.currentDate = dateArr\r\n        } else {\r\n          this.$refs.VantCalendarDict.currentDate = []\r\n        }\r\n      })\r\n\r\n    } else if (this.$attrs.type === \"range\") {\r\n      this.showValue = (this.value&&this.value.length === 2) ? this.value[0].replace(/-|\\./g, this.spacer) + this.dateSpacer + this.value[1].replace(/-|\\./g, this.spacer) : \"\"\r\n      this.$nextTick(() => {\r\n        if (this.value.length === 2) {\r\n          this.$refs.VantCalendarDict.currentDate = [\r\n            new Date(this.value[0].replace(/-|\\./g, \"/\")),\r\n            new Date(this.value[1].replace(/-|\\./g, \"/\"))\r\n          ]\r\n        }\r\n      })\r\n    } else {\r\n      this.showValue = FormatDate(this.value, `yyyy${this.spacer}MM${this.spacer}dd`, this.defaultVal)\r\n      this.$nextTick(() => {\r\n        if (this.showValue !== this.defaultVal) {\r\n          this.$refs.VantCalendarDict.currentDate = new Date(this.value.replace(/-|\\./g, \"/\"))\r\n        }\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    clickSubtitle(value) {\r\n      this.$emit(\"click-subtitle\", value)\r\n    },\r\n    overRange(value) {\r\n      this.$emit(\"over-range\", value)\r\n    },\r\n    monthShow(value) {\r\n      this.$emit(\"month-show\", value)\r\n    },\r\n    unselect(value) {\r\n      this.$emit(\"unselect\", value)\r\n    },\r\n    closed() {\r\n      this.$emit(\"closed\")\r\n    },\r\n    opened() {\r\n      this.$emit(\"opened\")\r\n    },\r\n    close() {\r\n      this.$emit(\"close\")\r\n    },\r\n    open() {\r\n      this.$emit(\"open\")\r\n    },\r\n    select(value) {\r\n      this.$emit(\"select\", value)\r\n    },\r\n    //改变事件\r\n    handleChange(value) {\r\n      this.$emit(\"change\", value)\r\n    },\r\n    //取消事件\r\n    handleCancel() {\r\n      this.$emit(\"cancel\")\r\n    },\r\n    //点击事件\r\n    handleClick() {\r\n      if (this.$attrs.disabled === true || this.$attrs.disabled === \"\") {\r\n        return \r\n      }\r\n      this.showPicker = true\r\n    },\r\n    //点击确定\r\n    onConfirm(value) {\r\n      if (this.$attrs.type === \"multiple\") {\r\n        if (value&&value.length > 0) {\r\n          const dateArr = []\r\n          for (let i = 0; i < value.length; i++) {\r\n            dateArr.push(FormatDate(value[i], `yyyy${this.spacer}MM${this.spacer}dd`, this.defaultVal))\r\n          }\r\n          this.svalue = dateArr\r\n        } else {\r\n          this.svalue = []\r\n        }\r\n        this.showValue = this.formateShowValue(this.svalue)\r\n      } else if (this.$attrs.type === \"range\") {\r\n        if (value&&value.length === 2) {\r\n          this.svalue = [\r\n            FormatDate(value[0], `yyyy${this.spacer}MM${this.spacer}dd`, this.defaultVal),\r\n            FormatDate(value[1], `yyyy${this.spacer}MM${this.spacer}dd`, this.defaultVal)\r\n          ]\r\n          this.showValue = this.svalue[0].replace(/-|\\./g, this.spacer) + this.dateSpacer + this.svalue[1].replace(/-|\\./g, this.spacer)\r\n        } else {\r\n          this.showValue = \"\"\r\n        }\r\n      } else {\r\n        this.svalue = FormatDate(value, `yyyy${this.spacer}MM${this.spacer}dd`, this.defaultVal)\r\n        this.showValue = this.svalue\r\n      }\r\n      this.showPicker = false\r\n      this.$emit(\"confirm\", value)\r\n    },\r\n\r\n    getRef() {\r\n      return this.$refs.VantCalendarDict\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=174697ed&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanCalendarDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanCalendarDict.install = function(Vue) {\r\n  Vue.component(vanCalendarDict.name, vanCalendarDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanCalendarDict","export default [\r\n  {\r\n    name: \"vanDropdownItemDict\",\r\n    path: \"/van-dropdown-item-dict\",\r\n    meta: {\r\n      title: \"vanDropdownItemDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanDropdownItemModule\" */ \"@/components/van-dropdown-item-dict\")\r\n  }\r\n]","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".el-cascader__tags .el-tag>span{flex:auto!important}.el-cascader-menu__wrap{height:300px!important}.el-cascader-node__label{flex:none!important;width:100%!important;box-sizing:border-box!important}.el-cascader-node .is-disabled+.el-cascader-node__label{cursor:not-allowed!important}.el-cascader-node__postfix,.el-cascader-node__prefix{top:50%!important;transform:translateY(-50%)!important;line-height:4px!important}.vue-element-dict-tabs .el-tabs__header .el-tabs__nav-wrap,.vue-element-dict-tabs .el-tabs__header .el-tabs__nav-wrap .el-tabs__nav-scroll{overflow:unset!important}.vue-element-dict-tabs .el-tabs__header .el-tabs__nav-wrap .el-tabs__nav-scroll:after{visibility:hidden;display:block;font-size:0;content:\\\" \\\";clear:both;height:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export const formatDictData = (dictData, filterDataFun, disabledDataFun) => {\r\n  const obj = {}\r\n  for (const key in dictData) {\r\n    obj[key] = disabledDataFun(filterDataFun(dictData[key]))\r\n  }\r\n  return obj\r\n}","export const Mask = (str, paramsOptions) => {\r\n  const defaultOptions = {\r\n    start: 1,\r\n    end: 0,\r\n    symbol: \"*\"\r\n  }\r\n  let options = Object.assign(defaultOptions, paramsOptions)\r\n  if (!options) { options = { start: 1, end: 0, symbol: \"*\" } }\r\n  if (options.start < 0 || options.end < 0) { return \"\" }\r\n  \r\n  const len = str.length\r\n  \r\n  let s = \"\"\r\n  for (let i = 0; i < options.start && i < len; i++) { s += str.charAt(i) }\r\n\r\n  let e = \"\"\r\n  for (let i = len - 1; i >= 0 && i >= len - options.end; i--) { e = str.charAt(i) + e }\r\n\r\n  const sym = options.symbol.repeat(Math.max(options.middle || (len - options.start - options.end), 0))\r\n  \r\n  return s + sym + e\r\n}\r\n\r\n/**\r\n * @description: 姓名脱敏\r\n * @param {string} name\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const MaskName = (name, symbol = \"*\") => {\r\n  if (!name) { return \"\" }\r\n  \r\n  const len = name.length\r\n  \r\n  if (len === 1) { return name }\r\n  \r\n  const s = name.charAt(0)\r\n  const e = name.charAt(len - 1)\r\n  \r\n  return Mask(name.substring(1, len - 1), { start: 1, symbol}) ? `${s}*${e}` : `${s}${e}`\r\n}\r\n\r\n/**\r\n * @description: 身份证号脱敏\r\n * @param {string} idcard\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const MaskIdCard = (idcard, symbol = \"*\") => {\r\n  if (!idcard) { return \"\" }\r\n   \r\n  return Mask(idcard, { start: 4, end: 4, symbol })\r\n}\r\n\r\n/**\r\n * @description: \r\n * @param {string} phone\r\n * @return {*}\r\n * @author: syx\r\n */\r\nexport const MaskPhone = (phone, symbol = \"*\") => {\r\n  if (!phone) { return \"\" }\r\n  return Mask(String(phone), { start: 3, end: 4, symbol})\r\n}\r\n\r\nexport const MaskAddress = (address, symbol = \"*\") => {\r\n  if (!address) { return \"\" }\r\n  \r\n  const parts = address.trim().split(/\\s+/)\r\n  const len = parts.length\r\n  \r\n  let res = \"\"\r\n  \r\n  for (let i = 0; i < len; i++) {\r\n    if (/^[\\u4e00-\\u9fa5]+$/.test(parts[i])) {\r\n      res += Mask(parts[i], { start: 1, symbol })\r\n    } else {\r\n      res += Mask(parts[i], { start: 2, symbol })\r\n    }\r\n    \r\n    if (i < len - 1) { res += \" \" }\r\n  }\r\n  \r\n  return res\r\n}\r\n\r\nconst maskTypeObj = {\r\n  mobile: MaskPhone,\r\n  name: MaskName,\r\n  address: MaskAddress,\r\n  idCard: MaskIdCard\r\n}\r\n\r\nexport const Desensitization = (str, options) => {\r\n  if (options.maskType === \"none\") {\r\n    return str\r\n  }\r\n  const defaultOptions = {\r\n    start: 1, // 从前往后保留的位数，默认为 1\r\n    end: 0, // 从后往前保留的位数，默认为 0\r\n    symbol: \"*\", // 替换的字符，默认为 *\r\n    defaultVal: \"\",\r\n    maskType: \"\"\r\n  }\r\n\r\n  Object.assign(defaultOptions, options)\r\n  // 没值返回默认值\r\n  if (!str) { return defaultOptions.defaultVal }\r\n  // 有传类型时，返回默认类型\r\n  if (defaultOptions.maskType) {\r\n    return maskTypeObj[defaultOptions.maskType](str, defaultOptions.symbol)\r\n  }\r\n  const maskOptions = {\r\n    start: defaultOptions.start,\r\n    end: defaultOptions.end,\r\n    middle: defaultOptions.middle,\r\n    symbol: defaultOptions.symbol\r\n  }\r\n  return Mask(str, maskOptions)\r\n}","export default [\r\n  {\r\n    name: \"vanButtonDict\",\r\n    path: \"/van-button-dict\",\r\n    meta: {\r\n      title: \"vanButtonDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanButtonDictModule\" */ \"@/components/van-button-dict\")\r\n  }\r\n]","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('van-tag',_vm._g(_vm._b({ref:\"VanTagDict\",attrs:{\"type\":_vm.judgeType},scopedSlots:_vm._u([_vm._l((_vm.$scopedSlots),function(slot,key){return {key:key,fn:function(scope){return [_vm._t(key,null,null,scope)]}}})],null,true)},'van-tag',_vm.$attrs,false),_vm.$listeners),[_vm._l((_vm.$slots),function(slot,key){return _c('template',{slot:key},[_vm._t(key)],2)}),_vm._v(\" \"+_vm._s(_vm.GetLabelByCodeFilter(_vm.value, _vm.dictType))+\" \")],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <van-tag ref=\"VanTagDict\" :type=\"judgeType\" v-on=\"$listeners\" v-bind=\"$attrs\">\r\n    <template\r\n      v-for=\"(slot, key) in $scopedSlots\"\r\n      :slot=\"key\"\r\n      slot-scope=\"scope\"\r\n    >\r\n      <slot :name=\"key\" v-bind=\"scope\"></slot>\r\n    </template>\r\n    <template v-for=\"(slot, key) in $slots\" :slot=\"key\">\r\n      <slot :name=\"key\"></slot>\r\n    </template>\r\n    {{GetLabelByCodeFilter(value, dictType)}}\r\n  </van-tag>\r\n</template>\r\n\r\n<script>\r\nimport {GetLabelByCodeFilter} from \"~/filters/dict\"\r\nexport default {\r\n  name: \"van-tag-dict\",\r\n  props: {\r\n    value: {\r\n      required: true\r\n    },\r\n    dictType: {\r\n      type: [String],\r\n      required: true\r\n    }, //请求的码表值\r\n    judgeTypeFun: {\r\n      type: Function,\r\n      default: () => {\r\n\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"primary\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      GetLabelByCodeFilter\r\n    }\r\n  },\r\n  computed: {\r\n    judgeType() {\r\n      if (!this.judgeTypeFun) {\r\n        return this.type\r\n      }\r\n      return this.judgeTypeFun(this.value) || this.type\r\n    }\r\n  },\r\n  getRef() {\r\n    return this.$refs.VanTagDict\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=58293392&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\n// 导入组件\r\nimport vanTagDict from \"./src/index.vue\"\r\n\r\n// 为组件提供 install 安装方法，供按需引入\r\nvanTagDict.install = function(Vue) {\r\n  Vue.component(vanTagDict.name, vanTagDict)\r\n}\r\n\r\n// 默认导出组件\r\nexport default vanTagDict","export default [\r\n  {\r\n    name: \"vanSelectDict\",\r\n    path: \"/van-select-dict\",\r\n    meta: {\r\n      title: \"vanSelectDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanSelectDictModule\" */ \"@/components/van-select-dict\")\r\n  }\r\n]","export default [\r\n  {\r\n    name: \"vanCascaderDict\",\r\n    path: \"/van-cascader-dict\",\r\n    meta: {\r\n      title: \"vanCascaderDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanSelectDictModule\" */ \"@/components/van-cascader-dict\")\r\n  }\r\n]","export default [\r\n  {\r\n    name: \"vanCheckboxDict\",\r\n    path: \"/van-checkbox-dict\",\r\n    meta: {\r\n      title: \"vanCheckboxDict\"\r\n    },\r\n    component: () => import(/* webpackChunkName: \"vanSelectDictModule\" */ \"@/components/van-checkbox-dict\")\r\n  }\r\n]"],"sourceRoot":""}