(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{555:function(t,n,a){"use strict";a.r(n);var s=a(2),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"其他相关方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他相关方法"}},[t._v("#")]),t._v(" 其他相关方法")]),t._v(" "),a("p",[t._v("此处为本字典包暴露的其他与字典无关的相关方法，均为函数调用方式，具体方法如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"less"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @description: 获取字典包配置数据\r\n * @return {dictConfig 字典包配置数据  配置与默认配置的合并}\r\n * @author: syx\r\n */")]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDictConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @description: 通过字段获取dictConfig的配置\r\n * @param key dictConfig的字段\r\n * @return {dictConfig的某个字段}\r\n * @author: syx\r\n */")]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDictConfigByKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @description: 判断某个字符串是不是日期格式\r\n * @param str 字符串\r\n * @return {boolean}\r\n * @author: syx\r\n */")]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @description: 将某个日期格式化\r\n * @param date 日期 可以是字符串 数字 date()\r\n * @param format  默认datetime 可选  date month time year  也可自定义格式，具体配置继续阅读\r\n * @return 根据format返回的日期格式\r\n * @author: syx\r\n */")]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("formatDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 将某个字符串进行脱敏\r\n * @param str 字符串\r\n * @param options { 配置\r\n *   start: 1,  展示前面几位数 默认1\r\n *   end: 0, 展示后面几位数 默认0\r\n *   symbol: "*" 使用什么符号进行脱敏  默认 *\r\n *   middle  如果有配置，则表示 中间展示几个symbol\r\n * } \r\n * @return 根据format返回的日期格式\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 姓名脱敏\r\n * @param name 姓名\r\n * @param symbol "*" 使用什么符号进行脱敏  默认 *\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("maskName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 身份证号脱敏\r\n * @param idCard 身份证号码\r\n * @param symbol "*" 使用什么符号进行脱敏  默认 *\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("maskIdCard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("idCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 手机号脱敏\r\n * @param phone 手机号码\r\n * @param symbol "*" 使用什么符号进行脱敏  默认 *\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("maskPhone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 地址脱敏\r\n * @param address 地址\r\n * @param symbol "*" 使用什么符号进行脱敏  默认 *\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("maskAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 脱敏字符串\r\n * @param str 要脱敏的数据\r\n * @param options { 配置\r\n *   start: 1,  展示前面几位数 默认1\r\n *   end: 0, 展示后面几位数 默认0\r\n *   symbol: "*" 使用什么符号进行脱敏  默认 *\r\n *   middle  如果有配置，则表示 中间展示几个symbol\r\n *   defaultVal: "", 没值时返回的默认值\r\n *   maskType: "" 脱敏类型   mobile，name，address，idCard\r\n * } \r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desensitization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 一维数组转化为 树形数组\r\n * @param data 一维数组\r\n * @param config { 配置项\r\n *    idField: "id", //唯一标识字段名\r\n *    parentIdField: "parentId", //父节点唯一标识字段名\r\n *    childrenField: "children", //子节点标识字段名\r\n *    firstId: "0", // 根节点值\r\n *    labelField: "label", //label字段名\r\n *    labelArrField: "labelArr", //给对象新增的中文数组字段名\r\n *    idArrField: "idArr", //给对象新增的id数组字段名\r\n *    levelField: "level", //给对象新增的层级字段名\r\n *    level: 0, // 给根目录配置的层级\r\n *    leafField: "leaf" //叶子节点标识字段名\r\n * }\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listToTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 通过code 获取树形数据item的数组\r\n * @param code 值\r\n * @param arr 一维数组\r\n * @param options { // 配置项\r\n *   idField: "id", //唯一标识字段名\r\n *   parentIdField: "parentId" //父节点唯一标识字段名\r\n * }\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTreeItemByCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n\r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\r\n * @description: 通过label 获取树形数据item的数组\r\n * @param label 值\r\n * @param arr 一维数组\r\n * @param options { // 配置项\r\n *   idField: "id", //唯一标识字段名\r\n *   labelField: "label", //唯一标识字段名\r\n *   parentIdField: "parentId" //父节点唯一标识字段名\r\n * }\r\n * @return {*}\r\n * @author: syx\r\n */')]),t._v("\r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTreeItemByLabel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\r\n")])])]),a("h2",{attrs:{id:"使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("getDictConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getDictConfigByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" formatDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maskName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maskIdCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maskPhone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maskAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desensitization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listToTree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getTreeItemByCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getTreeItemByLabel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue2-element-dict"')]),t._v("\n")])])]),a("h2",{attrs:{id:"日期格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期格式"}},[t._v("#")]),t._v(" 日期格式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("标识")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("yy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("18")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("年，两位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("yyyy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2018")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("年，四位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("M")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1-12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("月，从1开始")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("MM")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("01-12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("月，两位数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("d")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1-31")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("日")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("dd")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("01-31")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("日，两位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("h")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-23")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("24小时")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("hh")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("00-23")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("24小时，两位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("h")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1-12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("12小时")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("hh")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("01-12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("12小时，两位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-59")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("分钟")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("mm")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("00-59")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("分钟，两位数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("s")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-59")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("秒")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ss")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("00-59")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("秒，两位数")])])])])])}),[],!1,null,null,null);n.default=e.exports}}]);